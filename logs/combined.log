{"level":"info","message":"Playing music Cyberpunk 2077 Radio Mix 6 by NightmareOwl (Electro/Cyberpunk)","service":"user-service"}
{"level":"info","message":"Playing music Cyberpunk 2077 Radio 24/7 by NightmareOwl (Cyberpunk Music/Midtempo/Electro)","service":"user-service"}
{"level":"info","message":"Playing music Cyberpunk 2077 Radio 24/7 by NightmareOwl (Cyberpunk Music/Midtempo/Electro)","service":"user-service"}
{"code":"ECONNRESET","level":"error","service":"user-service"}
{"level":"info","message":"Playing music Cyberpunk 2077 Radio 24/7 by NightmareOwl (Cyberpunk Music/Midtempo/Electro)","service":"user-service"}
{"level":"info","message":"Playing music Snoop Dogg, Eminem, Dr. Dre - Back In The Game ft. DMX, Eve, Jadakiss, Ice Cube, Method Man, The Lox","service":"user-service"}
{"code":"ECONNRESET","level":"error","service":"user-service"}
{"level":"info","message":"Playing music Los Bunkers Greatest Hits 2021 || Best Songs Los Bunkers full Album 2021","service":"user-service"}
{"level":"info","message":"Playing music Los Bunkers Greatest Hits 2021 || Best Songs Los Bunkers full Album 2021","service":"user-service"}
{"level":"info","message":"Playing music Cyberpunk 2077 - Best Electro & Techno Mix","service":"user-service"}
{"level":"info","message":"Playing music Cyberpunk - Music to rip and tear through Cyberpsychosis (Soundtrack Music Mix)","service":"user-service"}
{"level":"info","message":"Playing music Music For Work ‚Äî Night Productive Mix","service":"user-service"}
{"level":"info","message":"Playing music Music For Work ‚Äî Night Productive Mix","service":"user-service"}
{"level":"info","message":"Playing music Music For Work ‚Äî Night Productive Mix","service":"user-service"}
{"level":"info","message":"Playing music Cyberpunk: Edgerunners | ‚ÄúI Really Want to Stay At Your House‚Äù by Rosa Walton | Music Video","service":"user-service"}
{"level":"info","message":"Playing music 19990115","service":"user-service"}
{"level":"info","message":"Playing music Space Wonderer (Chillwave / Retrowave / Synthwave  Mix)","service":"user-service"}
{"level":"info","message":"Playing music Nazuna Nanakusa Phonk Music for your fake scenarios \ud83d\udd25 Best Aggressive Drift/House/Walk Phonk ‚Äª –§–æ–Ω–∫","service":"user-service"}
{"level":"info","message":"Playing music [Ïô∏Ìûô] Î™©Í±∏Ïù¥Îäî Î¨¥Í≤ÅÍ≤å, Î∞©ÏïÑÏá†Îäî Í∞ÄÎ≥çÍ≤å","service":"user-service"}
{"code":50006,"level":"error","method":"POST","rawError":{"code":50006,"message":"Cannot send an empty message"},"requestBody":{"files":[],"json":{"data":{"content":"","tts":false},"type":4}},"service":"user-service","status":400,"url":"https://discord.com/api/v10/interactions/1079330435861073963/aW50ZXJhY3Rpb246MTA3OTMzMDQzNTg2MTA3Mzk2MzpmYWs4bVgwa2ZlbkdHMmNnT2NvU0M4dWh0WkJWc01ZWlMySFFOMGQ3Q2FiUE4ycTBwUGJiRzEwSUFXVjRXdkgwTUR6cVlmTVREaEVGT0lUeUlqTEFIQTJQUWd0b1kyRkFoYWI4MzdSRWZ4STE3VGhndWZZNkJEbzhZTGxiSURteA/callback"}
{"level":"info","message":"testeando uno dos tres","service":"user-service"}
{"level":"info","message":"hola hola uno dos tres","service":"user-service"}
{"level":"info","message":"hola hola uno dos tres","service":"user-service"}
{"level":"info","message":"listo ahora el botsito tiene tts activado, no es la mejor voz pero funciona y es mejor que la de la otra guea xd","service":"user-service"}
{"level":"info","message":"voy a leer un par de cosas para testear, La votaci√≥n final sobre el tan esperado conjunto de normas sobre criptomonedas de la Uni√≥n Europea, conocido como el Reglamento sobre Mercados de Criptoactivos (MiCA, por sus siglas en ingl√©s), recientemente se aplaz√≥ hasta abril de 2023. No fue el primer retraso: anteriormente, los legisladores europeos reprogramaron el procedimiento de noviembre de 2022 a febrero de 2023.","service":"user-service"}
{"level":"info","message":"soy un puto crack, la semana que viene le voy a configurar un par de cosas para que tome el texto directamente del canal sin encesidad de ponerle el comando","service":"user-service"}
{"level":"error","service":"user-service"}
{"level":"error","service":"user-service"}
{"level":"info","message":"\"Active Processor Cores\" en la BIOS se refiere al n√∫mero de n√∫cleos del procesador que est√°n habilitados y disponibles para su uso por el sistema operativo y las aplicaciones en ejecuci√≥n. Algunas placas base permiten que se desactiven n√∫cleos de procesador espec√≠ficos en la configuraci√≥n de la BIOS, lo que puede ser √∫til para el diagn√≥stico de problemas o para mejorar la estabilidad del sistema.","service":"user-service"}
{"level":"info","message":"\"Active Processor Cores\" en la BIOS se refiere al n√∫mero de n√∫cleos del procesador que est√°n habilitados y disponibles para su uso por el sistema operativo y las aplicaciones en ejecuci√≥n. Algunas placas base permiten que se desactiven n√∫cleos de procesador espec√≠ficos en la configuraci√≥n de la BIOS, lo que puede ser √∫til para el diagn√≥stico de problemas o para mejorar la estabilidad del sistema.","service":"user-service"}
{"level":"info","message":"Ahora si, uno dos tres","service":"user-service"}
{"level":"info","message":"√Årbol transversal Un recorrido de alg√∫n √°rbol binario, es un algoritmo que itera a trav√©s de cada nodo en el tiempo exacto.  Recorrido en orden Un recorrido en orden del √°rbol es un algoritmo recursivo que sigue el sub√°rbol izquierdo; una vez que no quedan m√°s sub√°rboles para procesar, procesamos el sub√°rbol derecho. Los elementos se procesan en orden izquierda-ra√≠z-derecha. El algoritmo b√°sico es el siguiente:","service":"user-service"}
{"level":"info","message":"√Årbol transversal Un recorrido de alg√∫n √°rbol binario, es un algoritmo que itera a trav√©s de cada nodo en el tiempo exacto.  Recorrido en orden Un recorrido en orden del √°rbol es un algoritmo recursivo que sigue el sub√°rbol izquierdo; una vez que no quedan m√°s sub√°rboles para procesar, procesamos el sub√°rbol derecho. Los elementos se procesan en orden izquierda-ra√≠z-derecha. El algoritmo b√°sico es el siguiente:","service":"user-service"}
{"level":"info","message":"hol hola","service":"user-service"}
{"level":"info","message":"holaaa","service":"user-service"}
{"level":"info","message":"hola","service":"user-service"}
{"level":"info","message":"testeando la salida de voz","service":"user-service"}
{"level":"info","message":"Playing music Cyberpunk 2077 Radio 24/7 by NightmareOwl (Cyberpunk Music/Midtempo/Electro)","service":"user-service"}
{"level":"info","message":"Playing music Cyberpunk 2077 Radio 24/7 by NightmareOwl (Cyberpunk Music/Midtempo/Electro)","service":"user-service"}
{"level":"info","message":"Playing music Cyberpunk 2077 Radio 24/7 by NightmareOwl (Cyberpunk Music/Midtempo/Electro)","service":"user-service"}
{"level":"info","message":"Playing music Cyberpunk 2077 Radio 24/7 by NightmareOwl (Cyberpunk Music/Midtempo/Electro)","service":"user-service"}
{"code":"ECONNRESET","level":"error","service":"user-service"}
{"level":"info","message":"Playing music Cyberpunk 2077 Radio 24/7 by NightmareOwl (Cyberpunk Music/Midtempo/Electro)","service":"user-service"}
{"level":"info","message":"Playing music Slowed Sad Songs  | (\ud835\ude68\ud835\ude61\ud835\ude64\ud835\ude6c\ud835\ude5a\ud835\ude59 + \ud835\ude67\ud835\ude5a\ud835\ude6b\ud835\ude5a\ud835\ude67\ud835\ude57) songs playlist | sad songs for broken hearts","service":"user-service"}
{"code":"ECONNRESET","level":"error","service":"user-service"}
{"level":"info","message":"Playing music Slowed Sad Songs  | (\ud835\ude68\ud835\ude61\ud835\ude64\ud835\ude6c\ud835\ude5a\ud835\ude59 + \ud835\ude67\ud835\ude5a\ud835\ude6b\ud835\ude5a\ud835\ude67\ud835\ude57) songs playlist | sad songs for broken hearts","service":"user-service"}
{"level":"info","message":"Playing music Phonk music thats hit harder than bullets üí• Best Aggressive Drift/House Phonk ‚Äª –§–æ–Ω–∫","service":"user-service"}
{"level":"info","message":"que pasa pa","service":"user-service"}
{"level":"info","message":"whats goin on","service":"user-service"}
{"level":"info","message":"que andan haciendo","service":"user-service"}
{"level":"info","message":"dile al alparkom que desmute al bot","service":"user-service"}
{"level":"info","message":"Playing music Áú†„Çå„Å™„ÅÑÊôÇ„ÄÅËêΩ„Å°ÁùÄ„Åç„Åü„ÅÑÊôÇ„Å´ËÅ¥„ÅèÊõ≤„ÄÇcover„É°„Éâ„É¨„Éº","service":"user-service"}
{"level":"info","message":"Playing music Áú†„Çå„Å™„ÅÑÊôÇ„ÄÅËêΩ„Å°ÁùÄ„Åç„Åü„ÅÑÊôÇ„Å´ËÅ¥„ÅèÊõ≤„ÄÇcover„É°„Éâ„É¨„Éº","service":"user-service"}
{"level":"info","message":"Playing music –ü–ï–°–ù–ò –û–¢ –ö–û–¢–û–†–´–• –ù–ê–•–õ–´–ù–£–¢ –í–û–°–ü–û–ú–ò–ù–ê–ù–ò–Ø | –ü–µ—Å–Ω–∏ –ù–∞—à–µ–π –Æ–Ω–æ—Å—Ç–∏  | –ü–æ–¥—Ä–æ—Å—Ç–∫–æ–≤—ã–µ –ü–µ—Å–Ω–∏ | –ü–µ—Å–Ω–∏ –Ω–∞ –≤–µ—á–µ—Ä","service":"user-service"}
{"code":10062,"level":"error","method":"POST","rawError":{"code":10062,"message":"Unknown interaction"},"requestBody":{"files":[],"json":{"data":{"content":"works fine, playing music !","tts":false},"type":4}},"service":"user-service","status":404,"url":"https://discord.com/api/v10/interactions/1090808502525624382/aW50ZXJhY3Rpb246MTA5MDgwODUwMjUyNTYyNDM4MjpmWGJNTVI2VUxZZ0Nxc2xqVzBYUWFldXB1Mzg3YkJFYXJHUVU4MWNoTXU0THJlVHRxN0p0T2dEV0l0c0lHSlh2YncxaVF2bGxQbGtOc0NUaWd5c2NHR1EwZ2ZWNkFTT2p3QzFPMHpFcG9YWktSc2tKNUF3clNZU0RMT0lqZEkzMg/callback"}
{"level":"info","message":"Playing music –ü–ï–°–ù–ò –û–¢ –ö–û–¢–û–†–´–• –ù–ê–•–õ–´–ù–£–¢ –í–û–°–ü–û–ú–ò–ù–ê–ù–ò–Ø | –ü–µ—Å–Ω–∏ –ù–∞—à–µ–π –Æ–Ω–æ—Å—Ç–∏  | –ü–æ–¥—Ä–æ—Å—Ç–∫–æ–≤—ã–µ –ü–µ—Å–Ω–∏ | –ü–µ—Å–Ω–∏ –Ω–∞ –≤–µ—á–µ—Ä","service":"user-service"}
{"level":"info","message":"Playing music –ø–ª–µ–π–ª–∏—Å—Ç –¥–ª—è —Ç—É—Å–æ–≤–æ–∫","service":"user-service"}
{"level":"info","message":"Playing music –ø–ª–µ–π–ª–∏—Å—Ç –¥–ª—è —Ç—É—Å–æ–≤–æ–∫","service":"user-service"}
{"level":"info","message":"Playing music –ø–ª–µ–π–ª–∏—Å—Ç –¥–ª—è —Ç—É—Å–æ–≤–æ–∫","service":"user-service"}
{"level":"info","message":"Playing music LOUIEJAYXX - EDGE","service":"user-service"}
{"level":"info","message":"Playing music LOUIEJAYXX - EDGE","service":"user-service"}
{"level":"info","message":"testing","service":"user-service"}
{"code":10062,"level":"error","method":"POST","rawError":{"code":10062,"message":"Unknown interaction"},"requestBody":{"files":[],"json":{"data":{"content":"asdasd","tts":false},"type":4}},"service":"user-service","status":404,"url":"https://discord.com/api/v10/interactions/1090813978466328586/aW50ZXJhY3Rpb246MTA5MDgxMzk3ODQ2NjMyODU4NjpRajJkTjZEZk5BNnQzcUNMbnVIcXhYRGN5bE1MUlNveE13S25wV3BRSlc5N1Y4UDBJNVR0Z0h5aWp2WVBCS3lmdnZEV3NhREdLMms1TVFSWmsycFlVbkVqV2JPbmp6SjhmUlZhMFlkUUw1ODRiRENzVlB5OWJENVhxdzRBQ0tnVA/callback"}
{"level":"info","message":"testinggg","service":"user-service"}
{"level":"info","message":"Playing music LOUIEJAYXX - EDGE","service":"user-service"}
{"level":"info","message":"Playing music LOUIEJAYXX - EDGE","service":"user-service"}
{"level":"info","message":"testing","service":"user-service"}
{"level":"info","message":"Playing music LOUIEJAYXX - EDGE","service":"user-service"}
{"level":"info","message":"Playing music LOUIEJAYXX - EDGE","service":"user-service"}
{"level":"info","message":"Playing music LOUIEJAYXX - EDGE","service":"user-service"}
{"level":"info","message":"Playing music LOUIEJAYXX - EDGE","service":"user-service"}
{"level":"info","message":"Playing music LOUIEJAYXX - EDGE","service":"user-service"}
{"level":"info","message":"Playing music LOUIEJAYXX - EDGE","service":"user-service"}
{"level":"info","message":"Playing music LOUIEJAYXX - EDGE","service":"user-service"}
{"level":"info","message":"Playing music LOUIEJAYXX - EDGE","service":"user-service"}
{"level":"info","message":"Playing music LOUIEJAYXX - EDGE","service":"user-service"}
{"level":"info","message":"aaaaaa testing","service":"user-service"}
{"level":"info","message":"Playing music –ú—É–∑—ã–∫–∞. –ì—Ä—É—Å—Ç–Ω–∞—è –º—É–∑—ã–∫–∞.","service":"user-service"}
{"level":"info","message":"Playing music –ú—É–∑—ã–∫–∞. –ì—Ä—É—Å—Ç–Ω–∞—è –º—É–∑—ã–∫–∞.","service":"user-service"}
{"level":"info","message":"Playing music –ú—É–∑—ã–∫–∞. –ì—Ä—É—Å—Ç–Ω–∞—è –º—É–∑—ã–∫–∞.","service":"user-service"}
{"level":"info","message":"Playing music –ú—É–∑—ã–∫–∞. –ì—Ä—É—Å—Ç–Ω–∞—è –º—É–∑—ã–∫–∞.","service":"user-service"}
{"level":"info","message":"Playing music \"Sadness helps me understand myself\" - a playlist","service":"user-service"}
{"level":"info","message":null,"service":"user-service"}
{"level":"info","message":"testing","service":"user-service"}
{"level":"info","message":"hacking","service":"user-service"}
{"level":"info","message":"hacking","service":"user-service"}
{"code":"InteractionAlreadyReplied","level":"error","service":"user-service"}
{"code":"InteractionAlreadyReplied","level":"error","service":"user-service"}
{"code":"InteractionAlreadyReplied","level":"error","service":"user-service"}
{"level":"info","message":"hacking","service":"user-service"}
{"level":"info","message":"hacking","service":"user-service"}
{"level":"info","message":"hacking","service":"user-service"}
{"errors":[["iconURL",{"errors":[{"given":"null","name":"Error","validator":"s.nullish"},{"constraint":"s.string.url","expected":"expected to match a URL","given":"null","name":"Error"}]}]],"level":"error","service":"user-service"}
{"level":"error","service":"user-service"}
{"errors":[{"given":"null","name":"Error","validator":"s.nullish"},{"constraint":"s.string.url","expected":"expected to match a URL","given":"null","name":"Error"}],"level":"error","service":"user-service"}
{"errors":[{"given":"null","name":"Error","validator":"s.nullish"},{"constraint":"s.string.url","expected":"expected to match a URL","given":"null","name":"Error"}],"level":"error","service":"user-service"}
{"errors":[{"given":"null","name":"Error","validator":"s.nullish"},{"constraint":"s.string.url","expected":"expected to match a URL","given":"null","name":"Error"}],"level":"error","service":"user-service"}
{"errors":[{"given":"null","name":"Error","validator":"s.nullish"},{"constraint":"s.string.url","expected":"expected to match a URL","given":"null","name":"Error"}],"level":"error","service":"user-service"}
{"errors":[{"given":"null","name":"Error","validator":"s.nullish"},{"constraint":"s.string.url","expected":"expected to match a URL","given":"null","name":"Error"}],"level":"error","service":"user-service"}
{"errors":[{"given":"null","name":"Error","validator":"s.nullish"},{"constraint":"s.string.url","expected":"expected to match a URL","given":"null","name":"Error"}],"level":"error","service":"user-service"}
{"code":10062,"level":"error","method":"POST","rawError":{"code":10062,"message":"Unknown interaction"},"requestBody":{"files":[],"json":{"data":{"content":"hacking","tts":false},"type":4}},"service":"user-service","status":404,"url":"https://discord.com/api/v10/interactions/1107101809027334254/aW50ZXJhY3Rpb246MTEwNzEwMTgwOTAyNzMzNDI1NDpMc2hBS1FBa2JEMjdzRkNkTFlWQThMVk85S1lpZTdZT0p3ckZQbTZUeVkxcDVGZU5XRnlxUjkyWm9aSzl0ZlJ3Y2xaS1JnQUNIYU9nUVRBUVRlbFdEQ2pZUXBLU01raUt3QXNWUkV3YW9weldRakFwZ3QyYXlKREF4SWJudWhCZQ/callback"}
{"level":"info","message":"bitcoin","service":"user-service"}
{"level":"info","message":"tesla","service":"user-service"}
{"code":10062,"level":"error","method":"POST","rawError":{"code":10062,"message":"Unknown interaction"},"requestBody":{"files":[],"json":{"data":{"content":"bitcoin","tts":false},"type":4}},"service":"user-service","status":404,"url":"https://discord.com/api/v10/interactions/1107103120967872552/aW50ZXJhY3Rpb246MTEwNzEwMzEyMDk2Nzg3MjU1MjpSWFlaRUdpSDBVejRUcXNOdzJkNVkySld1bk8xN3NkYzR5VGpTM1R3M0FRcDF5b3BQeElPMndqOUNMVFA5ZlQ5YzhKUmRETk80Ujl3WEExYkxpdEFjWVpic1NYYjdPUHY4NHZPdm53blB1bEJmVmRpdDdsVkk3ZnNBdnpJVnBDSw/callback"}
{"code":10062,"level":"error","method":"POST","rawError":{"code":10062,"message":"Unknown interaction"},"requestBody":{"files":[],"json":{"data":{"content":"tesla","tts":false},"type":4}},"service":"user-service","status":404,"url":"https://discord.com/api/v10/interactions/1107104430832234507/aW50ZXJhY3Rpb246MTEwNzEwNDQzMDgzMjIzNDUwNzpEMjU1Sjl6NzU1cmhkZUFOY29SN1d6RW5OaFlnM1BpcTg3WDQ1RTZ5eGF2ZjgwdW91dW9takl0dUtOZGVPelJiMFRVTFR3TVAyUWdiQVBqUnpGTktNRkR5dEhDYU1pbkIzWjJyR2w0WXNtRFhPQlAyaUFISktKSnhjMGNXRE9zSg/callback"}
{"errors":[{"given":"null","name":"Error","validator":"s.nullish"},{"constraint":"s.string.url","expected":"expected to match a URL","given":"null","name":"Error"}],"level":"error","service":"user-service"}
{"errors":[{"given":"null","name":"Error","validator":"s.nullish"},{"constraint":"s.string.url","expected":"expected to match a URL","given":"null","name":"Error"}],"level":"error","service":"user-service"}
{"errors":[{"given":"null","name":"Error","validator":"s.nullish"},{"constraint":"s.string.url","expected":"expected to match a URL","given":"null","name":"Error"}],"level":"error","service":"user-service"}
{"code":10062,"level":"error","method":"POST","rawError":{"code":10062,"message":"Unknown interaction"},"requestBody":{"files":[],"json":{"data":{"content":"cars","tts":false},"type":4}},"service":"user-service","status":404,"url":"https://discord.com/api/v10/interactions/1107105944866934824/aW50ZXJhY3Rpb246MTEwNzEwNTk0NDg2NjkzNDgyNDo0WW92bldaQXpoWFJlUkdBZFlXYW9pb1lWZ3Nja3RyM3ozWTdmT0duTW8zRGRFQkJFSFo3Tk1sVm04UWY5cWRCY3RWNEx4Rk5mbmpDQkc4VG5NM0dGMU9CaHVxT3JlUXBHRTUxdGxaUTNwaE5zRjJzemRZRWJScHhpZmRXZGZmdg/callback"}
{"code":10062,"level":"error","method":"POST","rawError":{"code":10062,"message":"Unknown interaction"},"requestBody":{"files":[],"json":{"data":{"content":"nasa","tts":false},"type":4}},"service":"user-service","status":404,"url":"https://discord.com/api/v10/interactions/1107106644845920327/aW50ZXJhY3Rpb246MTEwNzEwNjY0NDg0NTkyMDMyNzpjUE94SEZQM2VvblQxMUdOWGpqQmJLalVQbGRnd2xLQVNYRHdEMENhaGhDWk5TSWdPdHJDYmdYUXpLM09mZjBOSHFWZG4xclFHVUt2UlY4WDMzWDFoVlJjejg4UkI3aDhmaHRrR1hUVkxUZUs1NWpZbURqZlBlUXBsbkd5UUlIWg/callback"}
{"level":"info","message":"algoritms","results":[{"author":"Stack Overflow","content":"I have a Simple algorithm for testing that takes 2 numbers as an input and returns the sum as an output.\r\nI usually just write the algorithm in the view but i want to try an execute the algorithm as ‚Ä¶ [+833 chars]","description":"I have a Simple algorithm for testing that takes 2 numbers as an input and returns the sum as an output.\nI usually just write the algorithm in the view but i want to try an execute the algorithm as a task using ThreadPoolExecutor.\nMy example:\nfrom concurrent.‚Ä¶","publishedAt":"2023-05-01T06:24:15Z","source":{"id":null,"name":"Stackoverflow.com"},"title":"How to run tasks in django?","url":"https://stackoverflow.com/questions/76144945/how-to-run-tasks-in-django","urlToImage":"https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded"}],"service":"user-service"}
{"errors":[{"given":"?w=1200&strip=all","name":"Error","validator":"s.nullish"},{"constraint":"s.string.url","expected":"expected to match a URL","given":"?w=1200&strip=all","name":"Error"}],"level":"error","service":"user-service"}
{"code":10062,"level":"error","method":"POST","rawError":{"code":10062,"message":"Unknown interaction"},"requestBody":{"files":[],"json":{"data":{"content":"games","tts":false},"type":4}},"service":"user-service","status":404,"url":"https://discord.com/api/v10/interactions/1107110347179048990/aW50ZXJhY3Rpb246MTEwNzExMDM0NzE3OTA0ODk5MDpLcWM4anhBcVhXVkp0VnVVRnZWbG1Rd0JWd1hkQjg1T0NjekZkejY4NWJYaGFPdjYwZzRvY2NYZUJQZTVxRGdMeW4walpkVFNodEJiSElXV2F4dTFRWk1XVGNaMkVNYmluR2RXTnA4elZsSGNCQWxtcE9CZGRjaTJEZFREejdCbQ/callback"}
{"level":"info","message":"Playing music 2 HOURS Dark Cyberpunk / EBM / Industrial Bass Mix 'SYNTHETICA'","service":"user-service"}
{"level":"info","service":"user-service"}
{"level":"info","service":"user-service"}
{"level":"info","service":"user-service"}
{"level":"info","service":"user-service"}
{"level":"info","service":"user-service"}
{"code":10062,"level":"error","method":"POST","rawError":{"code":10062,"message":"Unknown interaction"},"requestBody":{"files":[],"json":{"data":{"content":"hacking","tts":false},"type":4}},"service":"user-service","status":404,"url":"https://discord.com/api/v10/interactions/1111168538925867038/aW50ZXJhY3Rpb246MTExMTE2ODUzODkyNTg2NzAzODo2V0FUeDJEOFhKNW9RcUM2a2ZNdFFCMFZFazUxR3JxemY2M0RydktmeEJXZHZYSjF5WDV6UXY2eWVPZGtoZzBMMUQyRnF6azNXNmo5ZWRiSTlXZXJJT0h6R1NSMDlhdHNNbnNRN1BSMk1wV2N2UXdwVjBVVEpYVnUwWEhUOUlGVw/callback"}
{"level":"info","message":"LAS PANDILLAS DE RANSOMWARE TIENEN durante mucho tiempo buscaron puntos de dolor donde sus demandas de extorsi√≥n tienen la mayor influencia. Ahora, una investigaci√≥n de NBC News ha dejado en claro c√≥mo se ve ese modelo de negocio despiadado cuando se dirige a los ni√±os: la fuga gigante de archivos confidenciales del grupo Minneapolis del sistema escolar de Minneapolis expone a miles de ni√±os en su punto m√°s vulnerable, completo con informes conductuales y psicol√≥gicos sobre estudiantes individuales y documentaci√≥n altamente sensible de casos en los que supuestamente han sido abusados por maestros y personal.  Llegaremos a eso. Pero primero, el colaborador de WIRED, Kim Zetter, dio la noticia esta semana de que los piratas inform√°ticos rusos que llevaron a cabo la famosa operaci√≥n de espionaje de SolarWinds fueron detectado en la red del Departamento de Justicia de los Estados Unidos seis meses antes de lo informado anteriormente‚Äî pero el Departamento de Justicia no se dio cuenta de la escala completa de la campa√±a de pirater√≠a que luego se revelar√≠a.   Mientras tanto, la reportera de WIRED, Lily Hay Newman, estuvo en la conferencia de ciberseguridad de RSA en San Francisco, donde nos trajo historias de c√≥mo los investigadores de seguridad interrumpi√≥ a los operadores del malware Gootloader que vendi√≥ el acceso a las redes de v√≠ctimas a grupos de ransomware y otros ciberdelincuentes, y c√≥mo Google Cloud se asoci√≥ con Intel para buscar y reparar vulnerabilidades de seguridad serias que subyacen a servidores cr√≠ticos en la nube. Tambi√©n captur√≥ una advertencia en una charla del director de ciberseguridad de la NSA, Rob Joyce, quien le dijo a la industria de la ciberseguridad que \"se agachara\" y prep√°rese para que surjan grandes cambios de herramientas de IA como ChatGPT, que sin duda ser√° manejado tanto por atacantes como por defensores por igual.","service":"user-service"}
{"level":"info","message":"pero el Departamento de Justicia no se dio cuenta de la escala completa de la campa√±a de pirater√≠a que luego se revelar√≠a.   Mientras tanto, la reportera de WIRED, Lily Hay Newman, estuvo en la conferencia de ciberseguridad de RSA en San Francisco, donde nos trajo historias de c√≥mo los investigadores de seguridad interrumpi√≥ a los operadores del malware Gootloader que vendi√≥ el acceso a las redes de v√≠ctimas a grupos de ransomware y otros ciberdelincuentes, y c√≥mo Google Cloud se asoci√≥ con Intel para buscar y reparar vulnerabilidades de seguridad serias que subyacen a servidores cr√≠ticos en la nube. Tambi√©n captur√≥ una advertencia en una charla del director de ciberseguridad de la NSA, Rob Joyce, quien le dijo a la industria de la ciberseguridad que \"se agachara\" y prep√°rese para que surjan grandes cambios de herramientas de IA como ChatGPT, que sin duda ser√° manejado tanto por atacantes como por defensores por igual.","service":"user-service"}
{"level":"info","message":"hola","service":"user-service"}
{"level":"info","message":"hola","service":"user-service"}
{"level":"info","message":"pero el Departamento de Justicia no se dio cuenta de la escala completa de la campa√±a de pirater√≠a que luego se revelar√≠a.   Mientras tanto, la reportera de WIRED, Lily Hay Newman, estuvo en la conferencia de ciberseguridad de RSA en San Francisco, donde nos trajo historias de c√≥mo los investigadores de seguridad interrumpi√≥ a los operadores del malware Gootloader que vendi√≥ el acceso a las redes de v√≠ctimas a grupos de ransomware y otros ciberdelincuentes, y c√≥mo Google Cloud se asoci√≥ con Intel para buscar y reparar vulnerabilidades de seguridad serias que subyacen a servidores cr√≠ticos en la nube. Tambi√©n captur√≥ una advertencia en una charla del director de ciberseguridad de la NSA, Rob Joyce, quien le dijo a la industria de la ciberseguridad que \"se agachara\" y prep√°rese para que surjan grandes cambios de herramientas de IA como ChatGPT, que sin duda ser√° manejado tanto por atacantes como por defensores por igual.","service":"user-service"}
{"level":"error","service":"user-service"}
{"level":"error","service":"user-service"}
{"code":50035,"level":"error","method":"POST","rawError":{"code":50035,"errors":{"data":{"content":{"_errors":[{"code":"BASE_TYPE_MAX_LENGTH","message":"Must be 2000 or fewer in length."}]}}},"message":"Invalid Form Body"},"requestBody":{"files":[],"json":{"data":{"content":"Comando cibern√©tico interrumpi√≥ a los iran√≠es que pirateaban un sitio web de elecciones estadounidenses En una rara divulgaci√≥n desclasificada en un panel en la Conferencia RSA de esta semana, El general William Hartman revel√≥ que el Comando Cibern√©tico de los Estados Unidos hab√≠a interrumpido una operaci√≥n de pirater√≠a iran√≠ que apuntaba a un sitio web de elecciones locales antes de las elecciones de 2020. Seg√∫n Hartman, quien dirige la Fuerza de Misi√≥n Nacional del Comando Cibern√©tico, la intrusi√≥n no podr√≠a haber afectado los recuentos de votos reales o las m√°quinas de votaci√≥n, pero ‚Äî si los propios piratas inform√°ticos de Cyber Command no hubieran criticado la operaci√≥n ‚Äî podr√≠an haberse utilizado potencialmente para publicar resultados falsos como parte de un esfuerzo de desinformaci√≥n.   Hartman nombr√≥ a los piratas inform√°ticos iran√≠es como un grupo conocido como Pioneer Kitten, tambi√©n conocido a veces como UNC757 o Parisite, pero no nombr√≥ el sitio web espec√≠fico de elecciones al que apuntaron. Hartman agreg√≥ que la operaci√≥n de pirater√≠a se encontr√≥ gracias a las operaciones Hunt Forward de Cyber Command, en las que piratea redes extranjeras para descubrir e interrumpir preventivamente a los adversarios que atacan a los Estados Unidos.  Instagram y Facebook siguen siendo una vida con traficantes de sexo infantil Despu√©s de una investigaci√≥n de dos a√±os, El guardi√°n esta semana public√≥ una exposici√≥n desgarradora sobre el uso de Facebook e Instagram como coto de caza para depredadores infantiles, muchos de los cuales trafican con ni√±os como v√≠ctimas de abuso sexual por dinero en los dos servicios de redes sociales. A pesar de las afirmaciones de la empresa matriz de los servicios, Meta, de que est√° monitoreando de cerca sus servicios para materiales de abuso sexual infantil o tr√°fico sexual, los Guardi√°n encontr√≥ casos horribles de ni√±os cuyas cuentas fueron secuestradas por traficantes y utilizadas para anunciarlos para la victimizaci√≥n sexual.   Un fiscal que habl√≥ con El guardi√°n dijo que hab√≠a visto que los delitos de trata de ni√±os en las redes sociales aumentaban en aproximadamente un 30 por ciento cada a√±o entre 2019 y 2022. Muchas de las v√≠ctimas ten√≠an tan solo 11 o 12 a√±os, y la mayor√≠a eran negras, latinas o LGBTQ +.  Los hackers est√°n secuestrando cuentas de correo electr√≥nico de AT&T para robar criptomonedas Un grupo de piratas inform√°ticos se ha hecho cargo de las cuentas de correo electr√≥nico de AT&T ‚Äî, el proveedor de telecomunicaciones ejecuta dominios de correo electr√≥nico, incluidos att.net, sbcglobal.net, bellsouth.net ‚Äî para hackear sus billeteras de criptomonedas, informa TechCrunch.   Un informador le dice a TechCrunch que los piratas inform√°ticos tienen acceso a una parte de la red interna de AT&T que les permite generar \"claves de correo\" que se utilizan para ofrecer acceso a una bandeja de entrada de correo electr√≥nico a trav√©s de aplicaciones de correo electr√≥nico como Thunderbird o Outlook. Los piratas inform√°ticos luego usan ese acceso para restablecer las contrase√±as de las v√≠ctimas en servicios de billetera de criptomonedas como Gemini y Coinbase, y, seg√∫n la fuente de TechCrunch, ya han acumulado entre $ 10 millones y $ 15 millones en cripto robados, aunque TechCrunch no pudo verificar esos n√∫meros.","tts":false},"type":4}},"service":"user-service","status":400,"url":"https://discord.com/api/v10/interactions/1111193171163090995/aW50ZXJhY3Rpb246MTExMTE5MzE3MTE2MzA5MDk5NTpycjNOMkR3eUFQMnJURklrdWpta0lXTHVKMXhNWkllZjNDcHhwYWp5Vk1LdllNSGVmaEhNYXBOcnIxQmNpNEg2NFpSSHhORVA3ZGQ4emc3U05PVTFXMnVmOGhJOFUwbWgxNFlrdVFOdnNYTXVTT2dhUGdoZzl4cmFRaTR6MUZ5OA/callback"}
{"code":"ENOENT","errno":-2,"level":"error","path":"acelerado.mp3","service":"user-service","syscall":"unlink"}
{"level":"error","service":"user-service"}
{"level":"error","service":"user-service"}
{"level":"error","service":"user-service"}
{"code":10062,"level":"error","method":"POST","rawError":{"code":10062,"message":"Unknown interaction"},"requestBody":{"files":[],"json":{"data":{"content":"blockchain","tts":false},"type":4}},"service":"user-service","status":404,"url":"https://discord.com/api/v10/interactions/1111217629856792619/aW50ZXJhY3Rpb246MTExMTIxNzYyOTg1Njc5MjYxOTpJd3FRTkpuUHRGRmVhM0Z1SkVMcW5DWXRpd25WYm1GOTBFY1A1aUtwZDF3bHoxSkZKOTJreW0waVFSRlpiRDhzVEdOajVKZlVDTzByUjFjbHBXWUR6NGw2eGU0c1dmcEdMbTk1SmZpQWZBcFgwZk42SjV5T292WFI5eUpqOVNZbA/callback"}
{"level":"info","message":"Mejor detecci√≥n y prevenci√≥n de fraudes La combinaci√≥n de blockchain y IA tambi√©n puede mejorar la detecci√≥n y prevenci√≥n de fraudes mediante la creaci√≥n de soluciones de an√°lisis y almacenamiento de datos m√°s seguras y transparentes. Por ejemplo, blockchain se puede usar para almacenar datos de transacciones de manera segura y transparente, mientras que la IA se puede usar para analizar esos datos y detectar patrones de actividad fraudulenta.","service":"user-service"}
{"level":"info","message":"Soluciones de salud mejoradas Al combinar las capacidades de almacenamiento de datos seguras y transparentes de blockchain con la capacidad de AI para analizar y aprender de los datos, las organizaciones de atenci√≥n m√©dica pueden crear nuevas soluciones que mejoren los resultados de los pacientes y reduzcan los costos. Por ejemplo, blockchain se puede usar para almacenar de forma segura los registros de salud del paciente, mientras que la IA se puede usar para analizar esos datos y hacer recomendaciones sobre las opciones de tratamiento.  Experiencias mejoradas del cliente Finalmente, la combinaci√≥n de blockchain y IA tambi√©n puede mejorar las experiencias de los clientes al crear soluciones m√°s personalizadas y eficientes. Por ejemplo, blockchain se puede usar para almacenar de forma segura los datos del cliente, mientras que la IA se puede usar para analizar esos datos y hacer recomendaciones personalizadas basadas en las preferencias y el comportamiento de los clientes ‚Äô.","service":"user-service"}
{"level":"info","message":"Aplicaciones del mundo real La combinaci√≥n de blockchain y IA tiene el potencial de revolucionar muchas industrias y crear nuevas soluciones y capacidades. Estas son algunas de las aplicaciones del mundo real de esta poderosa combinaci√≥n:  Gesti√≥n de la cadena de suministro. Una de las aplicaciones m√°s prometedoras de blockchain y IA est√° en gesti√≥n de la cadena de suministro. Al combinar el libro mayor descentralizado de blockchain con la capacidad de AI para analizar y predecir datos, las empresas pueden crear soluciones de gesti√≥n de la cadena de suministro m√°s eficientes y transparentes. Por ejemplo, las empresas pueden usar blockchain para rastrear el movimiento de mercanc√≠as y verificar su autenticidad, mientras que la IA se puede usar para analizar esos datos y predecir cu√°ndo y d√≥nde es probable que ocurran cuellos de botella y demoras.  Salud Otra aplicaci√≥n prometedora de blockchain y IA es en la atenci√≥n m√©dica. Al combinar las capacidades de almacenamiento de datos seguras y transparentes de blockchain con la capacidad de AI para analizar y aprender de los datos, las organizaciones de atenci√≥n m√©dica pueden crear nuevas soluciones que mejoren los resultados de los pacientes y reduzcan los costos. Por ejemplo, blockchain se puede usar para almacenar de forma segura los registros de salud del paciente, mientras que la IA se puede usar para analizar esos datos y hacer recomendaciones sobre las opciones de tratamiento.  Servicios financieros Blockchain y AI tambi√©n se est√°n utilizando en servicios financieros para crear nuevas soluciones y capacidades. Por ejemplo, blockchain se puede usar para crear sistemas de pago seguros y transparentes, mientras que la IA se puede usar para analizar datos de transacciones y detectar patrones de actividad fraudulenta.  Energ√≠a y servicios p√∫blicos The combination of blockchain and AI is also being used in the energy and utilities sector to create more efficient and sustainable solutions. For example, blockchain can be used to create decentralized energy grids, while AI can be used to analyze energy usage patterns and make predictions about future demand.","service":"user-service"}
{"level":"info","message":"Gesti√≥n de identidad Finalmente, blockchain y AI se est√°n utilizando en la gesti√≥n de identidad para crear soluciones m√°s seguras y transparentes. Por ejemplo, blockchain se puede usar para almacenar y verificar de forma segura los datos de identidad, mientras que la IA se puede usar para analizar esos datos y detectar actividades fraudulentas.","service":"user-service"}
{"level":"info","message":"Desaf√≠os y limitaciones Si bien la combinaci√≥n de blockchain y IA es muy prometedora, tambi√©n hay varios desaf√≠os y limitaciones que deben superarse para que estas tecnolog√≠as alcancen su m√°ximo potencial. Estos son algunos de los desaf√≠os y limitaciones clave:  Calidad y acceso a datos. Uno de los principales desaf√≠os de usar IA con blockchain es garantizar la calidad y accesibilidad de los datos utilizados para capacitar modelos de aprendizaje autom√°tico. Blockchain puede ayudar a garantizar la autenticidad y la seguridad de los datos, pero si los datos est√°n incompletos o sesgados, puede conducir a predicciones inexactas o injustas.  Escalabilidad Tanto blockchain como AI requieren una potencia inform√°tica significativa, y escalar estas tecnolog√≠as puede ser un desaf√≠o. Las redes Blockchain pueden congestionarse y ralentizarse a medida que se agregan m√°s transacciones, mientras que los algoritmos de IA pueden volverse computacionalmente caros a medida que aumenta la cantidad de datos y la complejidad de los modelos.  Interoperabilidad Actualmente hay muchas plataformas blockchain diferentes y herramientas de IA disponibles, y asegurando interoperabilidad entre estos sistemas puede ser un desaf√≠o. Sin estandarizaci√≥n e interoperabilidad, puede ser dif√≠cil crear soluciones integrales y sin interrupciones que puedan ser f√°cilmente adoptadas por empresas y organizaciones.  Reglamento Como con cualquier tecnolog√≠a emergente, la regulaci√≥n puede ser un desaf√≠o. Blockchain y AI plantean muchas preguntas legales y √©ticas sobre la privacidad, propiedad y responsabilidad de los datos. Sin regulaciones claras y consistentes, puede ser dif√≠cil para las empresas y organizaciones adoptar estas tecnolog√≠as con confianza.  Adopci√≥n Finalmente, uno de los mayores desaf√≠os que enfrenta la combinaci√≥n de blockchain y IA es la adopci√≥n. Si bien existen muchos beneficios potenciales para estas tecnolog√≠as, muchas empresas y organizaciones dudan en invertir en tecnolog√≠as nuevas y no comprobadas. Como resultado, la adopci√≥n generalizada de blockchain y soluciones de IA puede llevar tiempo.","service":"user-service"}
{"level":"info","message":"Posibilidades futuras A pesar de los desaf√≠os y limitaciones que enfrenta la combinaci√≥n de blockchain y IA, existen muchas posibilidades interesantes para el futuro de estas tecnolog√≠as. Aqu√≠ hay algunas √°reas potenciales de crecimiento e innovaci√≥n:  IA descentralizada Un √°rea potencial de crecimiento es el desarrollo de sistemas de IA descentralizados que utilizan tecnolog√≠a blockchain para permitir el intercambio y an√°lisis de datos seguros y transparentes. Esto podr√≠a permitir enfoques m√°s colaborativos y de c√≥digo abierto para el desarrollo de IA, al tiempo que aborda cuestiones de privacidad y propiedad de datos.  Contratos inteligentes Otra √°rea de crecimiento es el uso de contratos inteligentes para automatizar procesos comerciales complejos y la toma de decisiones. Al combinar algoritmos de IA con contratos inteligentes, puede ser posible crear sistemas aut√≥nomos y autoejecutables que puedan operar independientemente de la intervenci√≥n humana.","service":"user-service"}
{"level":"info","message":"Gesti√≥n de la cadena de suministro Blockchain y AI tambi√©n podr√≠an usarse para revolucionar la gesti√≥n de la cadena de suministro mediante la creaci√≥n de sistemas m√°s eficientes y transparentes para el seguimiento y la gesti√≥n de bienes y materiales. Al utilizar el libro mayor inmutable de blockchain y las capacidades predictivas de la IA, es posible optimizar las cadenas de suministro y reducir el desperdicio y las ineficiencias.  Asistencia sanitaria personalizada La combinaci√≥n de blockchain y IA tambi√©n podr√≠a tener implicaciones significativas para la atenci√≥n m√©dica personalizada. Al utilizar blockchain para almacenar y compartir de forma segura los datos del paciente, y la IA para analizar esos datos y generar ideas, Es posible desarrollar tratamientos m√°s personalizados y efectivos para una amplia gama de afecciones.  Identidad digital Finalmente, blockchain y AI podr√≠an usarse para crear sistemas de identidad digital m√°s seguros y confiables. Al utilizar el libro mayor descentralizado y a prueba de manipulaciones de blockchain, y las capacidades de an√°lisis biom√©trico y conductual de AI, Es posible desarrollar soluciones de identidad digital m√°s s√≥lidas y confiables que puedan usarse en una amplia gama de industrias y aplicaciones.  Conclusi√≥n La combinaci√≥n de blockchain e IA representa una poderosa fuerza para la innovaci√≥n y la transformaci√≥n en una amplia gama de industrias y aplicaciones. Si bien estas tecnolog√≠as tienen sus diferencias y desaf√≠os, tambi√©n comparten muchas similitudes y ofrecen posibilidades interesantes de colaboraci√≥n e integraci√≥n. Desde la gesti√≥n de la cadena de suministro hasta la atenci√≥n m√©dica personalizada y m√°s all√°, las posibles aplicaciones de blockchain y IA son pr√°cticamente ilimitadas, ofreciendo la oportunidad de crear m√°s seguro, eficiente, y sistemas innovadores que pueden beneficiarnos a todos. A medida que estas tecnolog√≠as contin√∫en evolucionando y madurando, ser√° fascinante ver qu√© nuevas posibilidades surgen y qu√© impacto tendr√°n en nuestro mundo.","service":"user-service"}
{"level":"info","message":"testing","service":"user-service"}
{"level":"info","message":"asd","service":"user-service"}
{"level":"info","message":"1062427226617946112","service":"user-service"}
{"level":"info","message":"Cuando env√≠a una transacci√≥n a la cadena de bloques Ethereum, ¬øa d√≥nde va? ¬øQu√© es una transacci√≥n pendiente y qu√© sucede antes de que se extraiga? ¬øQu√© es un mempool? ¬øPor qu√© algunas de mis transacciones tienen √©xito y otras fracasan?  Nos sumergiremos profundamente en el flujo de una transacci√≥n en la red Ethereum, desde el momento en que presiona ‚Äú, env√≠e ‚Äù hasta el punto en que la transacci√≥n se extraiga por completo. Discutiremos qu√© podr√≠a salir mal y c√≥mo el conjunto de herramientas de desarrollador de Alchemy podr√≠a ayudarlo a depurar y ganar visibilidad en este proceso.  Aunque esta gu√≠a es espec√≠fica de Ethereum, ¬°los principios b√°sicos se aplicar√°n b√°sicamente a todas las cadenas de bloques!  ¬øQu√© es una transacci√≥n de Ethereum? Una transacci√≥n de Ethereum, en su forma m√°s simple, es una solicitud de un usuario para codificar nueva informaci√≥n en el estado permanente de la cadena de bloques. El contenido de esta solicitud generalmente toma una de algunas formas:   Una simple transferencia de valor de la cuenta p√∫blica del usuario a otra parte ( p. enviando ETH a un comerciante ) Codificar un nuevo contrato inteligente en la cadena de bloques p√∫blica al que pueden acceder otros terceros ( p. iniciar un nuevo contrato inteligente de loter√≠a ) Enviar informaci√≥n a un contrato inteligente existente para comprometerse con el contrato ( p. ingresar su nombre y fondos en un contrato inteligente de loter√≠a ) ¬øQu√© es un Mempool?  Antes de que podamos entender el flujo de transacciones en Ethereum, ¬°primero debemos entender qu√© es el mempool! Un mempool es una sala de espera en un nodo Ethereum para transacciones no confirmadas, configuradas espec√≠ficamente para actuar como un √°rea de preparaci√≥n. Dependiendo del cliente que est√© utilizando, tambi√©n podr√≠a llamarse TX-POOL o TX-QUEUE.   Las transacciones enviadas a un nodo aterrizar√°n primero en el grupo de miembros y permanecer√°n all√≠ hasta que la red las confirme por completo. El mempool maneja algunos pasos clave del proceso, que incluyen:   Ejecutar una serie de pruebas de validaci√≥n para garantizar que la transacci√≥n sea exitosa una vez que se env√≠e a un minero. Algunas de las validaciones que puede realizar el nodo incluyen: ¬øHay fondos disponibles para cubrir el costo del gas? ¬øEs v√°lida la firma de la transacci√≥n? ¬øEs el nonce el pr√≥ximo en orden para esta direcci√≥n de remitente dada? Solicitar que la lista de transacciones se procese en funci√≥n de sus precios de gas. Los precios m√°s altos de la gasolina significan que la transacci√≥n probablemente ser√° priorizada por el minero. Compartir las transacciones pendientes con los grupos de miembros de nodos pares que luego contin√∫an reenviando a otros grupos de miembros, permitiendo que toda la red vea la lista de transacciones pendientes. Cuando se extrae un bloque, se confirmar√°n las transacciones en toda la red con los precios m√°s altos del gas.","service":"user-service"}
{"level":"info","message":"¬øC√≥mo se ve el flujo de transacciones de Ethereum?  Ahora que hemos cubierto el grupo de miembros, ¬øqu√© pasos implica enviar una transacci√≥n de un usuario para almacenar permanentemente esta transacci√≥n en la cadena de bloques?   Un usuario genera una nueva transacci√≥n, firma la transacci√≥n con su clave privada y la env√≠a a un nodo en la cadena de bloques llamando al m√©todo eth_sendTransaction o eth_sendRawTransaction como expuesto, t√≠picamente a trav√©s de un servicio como La API Supernode de Alchemy. La transacci√≥n se env√≠a al grupo de miembros de un nodo. El mempool ejecuta una serie de pruebas de validaci√≥n. Si la transacci√≥n pasa estas validaciones, ingresar√° un estado pendiente. El nodo transmitir√° la transacci√≥n a los otros nodos en blockchain, donde terminar√° en sus correspondientes mempools.   Una vez que un nodo extrae un nuevo bloque en la cadena de bloques, las transacciones pendientes ~ 200 con los precios m√°s altos de la gasolina se incluir√°n en el siguiente bloque en la cadena de bloques. Estas transacciones se eliminar√°n del grupo de miembros y el nuevo bloque y estado de grupo de miembros se propagar√°n a trav√©s de la red Despu√©s de confirmar de 5 a 7 bloques m√°s, las posibilidades de que la cadena de bloques se reorganice para seguir otra bifurcaci√≥n de bloques ( con un conjunto diferente de transacciones confirmadas ) se vuelven cada vez m√°s peque√±as. En este punto, es seguro asumir que la transacci√≥n est√° permanentemente en la cadena de bloques.","service":"user-service"}
{"level":"info","message":"¬øQu√© podr√≠a salir mal con una transacci√≥n pendiente de Ethereum?  1). El Mempool podr√≠a estar lleno Comencemos simple. ¬°Hay l√≠mites en el tama√±o del mempool ( a menos que est√© utilizando una herramienta como Alchemy! ), Tanto en todo el nodo como por direcci√≥n en el nodo. Por lo general, para Geth, son 4096 transacciones pendientes, y Geth abandonar√° las transacciones pendientes m√°s antiguas a favor de las m√°s nuevas.   2). Tus par√°metros pueden ser inv√°lidos Cuando realice una transacci√≥n, deber√° incluir una variedad de par√°metros relevantes, tales como:   ¬øCu√°l es la direcci√≥n de env√≠o y la direcci√≥n de destino? ¬øCu√°l es el valor a transferir? ¬øCu√°nto gas estoy dispuesto a usar para la transacci√≥n?  ¬øCu√°l deber√≠a ser el n√∫mero actual de mi transacci√≥n? Si ha cometido un error al ingresar estos, el nodo generalmente devolver√° un c√≥digo de error que explica el problema. Si no puede entender el mensaje de error o encontrar la respuesta a trav√©s de Google, no dude en enviarnos un mensaje sobre discordia e intentaremos ayudarte!  3). Su precio de gas podr√≠a ser demasiado bajo Para determinar qu√© transacciones priorizar, las transacciones de Ethereum deben presentarse con un precio de gas. Como una subasta regular, un precio de gas m√°s alto significa que es m√°s probable que su transacci√≥n se incluya en el siguiente bloque, y un precio de gas demasiado bajo significa que nunca podr√≠a llegar a la cadena de bloques.   Debido a que el precio del gas fluct√∫a r√°pida e impredecible en el transcurso de un d√≠a en funci√≥n de la demanda, es muy importante que establezca este campo correctamente. Tienes algunas opciones aqu√≠:   Si est√° enviando una sola transacci√≥n manualmente, puede visitar el Sitio web de la estaci√≥n de servicio ETH para ver los precios m√°s recientes del gas y establecer su precio en consecuencia. Si est√° enviando solicitudes a un proveedor de nodos como Alchemy, la especificaci√≥n Ethereum JSON-RPC expone un punto final llamado eth_estimateGas eso le da una estimaci√≥n de cu√°nto gas necesitar√° para extraer su transacci√≥n! Puede usar esto para automatizar la fijaci√≥n de precios de gas de forma program√°tica. Si desea recibir notificaciones autom√°ticas cuando los precios del gas suben por encima o caen por debajo de un precio determinado, le proporcionamos una herramienta llamada Notificaciones de precio de gas en Alchemy Notify que puede alertarlo espec√≠ficamente en esas situaciones! Debido a que es un gancho web, es bastante simple integrarse en su c√≥digo para enviar transacciones autom√°ticamente cuando los precios de la gasolina son bajos.","service":"user-service"}
{"level":"info","message":"4). Tu Nonce podr√≠a ser incorrecto Ah, la pregunta candente en la cabeza de todos: ¬øqu√© diablos es un nonce y por qu√© lo necesito?? Pregunta totalmente v√°lida y nos alegra que lo haya hecho.   En pocas palabras, el nonce es el n√∫mero de transacciones enviadas desde una direcci√≥n determinada. Si ha confirmado con √©xito cinco transacciones ( no 0-4 ), la no parte de su pr√≥xima transacci√≥n pendiente ser√° 5.   Los nonces siguen algunas reglas:   Los nonces deben ocurrir en orden. Una transacci√≥n con nonce 4 ocurrir√° estrictamente antes de una transacci√≥n con nonce 5. Las piezas no se pueden duplicar o omitir - hay exactamente una nonza por transacci√≥n exitosa. Si no tiene una transacci√≥n con nonce 5, no puede enviar una con nonce 6. Del mismo modo, no puede enviar dos transacciones con nonce 5, solo una pasar√°. ¬øPor qu√© los necesitamos? Los n√∫meros son necesarios desde una perspectiva criptogr√°fica para garantizar que las transacciones desde una direcci√≥n determinada se realicen en el orden en que las envi√≥, y que sus transacciones est√©n protegidas de la problema de doble gasto.   En la pr√°ctica, el nonce es simplemente un par√°metro que debe establecer cuando crea una transacci√≥n. Esto le permite tener un control manual de grano fino sobre el orden de sus transacciones.  Para un ejemplo de la vida real, diga que desea comprar un NFT en un mercado y luego enviar una peque√±a tarifa de buscador ‚Äú a Bob por ayudarlo a descubrirlo. En este caso, solo querr√≠a pagarle a Bob si compr√≥ con √©xito el NFT. Sin nonces, no tendr√≠a forma de enviar ambas transacciones Y asegurarse de que ocurrieran en un pedido en particular. Usando nonces, simplemente puede etiquetar una transacci√≥n con nonce N y otra con nonce N + 1!  Sin embargo, este control de grano fino significa que debe enviar sus transacciones con la informaci√≥n correcta cada vez! Si su transacci√≥n est√° atascada, deber√° verificar su nonce para asegurarse de que est√© configurada correctamente de acuerdo con las reglas descritas anteriormente.","service":"user-service"}
{"level":"info","message":"5). Tu bloque podr√≠a ser bifurcado Te encantar√° este: incluso si tu transacci√≥n se extrae correctamente, est√°s todav√≠a no en claro üò° .  Debido a que la cadena de bloques est√° descentralizada, diferentes conjuntos de nodos en la red pueden tener diferentes vistas de la red. En particular, ocasionalmente dos mineros extraen un nuevo bloque aproximadamente al mismo tiempo, y los nodos de pares saltan a las dos nuevas cadenas al mismo ritmo. En ese caso, las dos nuevas cadenas crecer√°n en paralelo, ¬°pero eventualmente una de ellas ganar√° un poco m√°s de consenso!   Cuando toda la red intercambia a una de las cadenas y abandona la segunda, las transacciones ya ‚Äú minadas ‚Äù en la cadena anterior se bifurcan y, por lo tanto, no son v√°lidas. Los bloques bifurcados tambi√©n se conocen como bloques de t√≠o ‚Äú ‚Äù.  Eso significa que incluso despu√©s de haber extra√≠do su transacci√≥n, ¬°todav√≠a podr√≠a ser invalidada por un tenedor de bloque! Puedes ver un historia de bloques bifurcados en Etherscan aqu√≠. Afortunadamente en Ethereum mainnet no son muy comunes y generalmente tienen menos de 5 bloques de profundidad, pero es por eso que su transacci√≥n nunca es ‚Äú completamente ‚Äù confirmada por un protocolo de negociaci√≥n de DeFi hasta despu√©s de un m√≠nimo de 5 a 7 confirmaciones de bloque.  ¬øQu√© herramientas puedo usar para administrar mis transacciones pendientes de Mempool y Ethereum? El vigilante de Alchemy Mempool Digamos que envi√≥ una transacci√≥n hace cuarenta minutos al grupo de miembros de un nodo, pero no la ha visto confirmada en la cadena de bloques. Desea informaci√≥n sobre su estado actual, el precio del gas con el que lo envi√≥ y la posibilidad de verificarlo dos veces. ¬øQu√© haces?   Acceder al estado de sus transacciones de mempool fue ( y sigue siendo ) un desastre. Debido a que la √∫nica interfaz en el estado de su memoria es a trav√©s de la API Ethereum JSON-RPC, los desarrolladores pasaban horas consultando los diversos nodos a los que enviaron transacciones, fusionarse y examinar p√°ginas de registros e intentar reconstruir todo el estado de su memoria a mano, todo para una sola consulta.  As√≠ es como se ve la llamada promedio a un grupo de miembros ocupado:","service":"user-service"}
{"level":"info","message":"Lo que es peor, cuando los desarrolladores comienzan a enviar sus solicitudes a m√∫ltiples nodos para escalar, existen serios problemas de coherencia, ya que las transacciones se originan en un solo nodo, las solicitudes para una transacci√≥n en particular deben enrutarse al mismo nodo cada vez que interact√∫a con √©l.  En respuesta a estos desaf√≠os, construimos el Observador de Mempool - Una herramienta que simplifica mucho esta complejidad. Primero, manejamos todo el enrutamiento de nodos para que, aunque pueda estar aprovechando docenas de nodos de escala, su memoria t√©cnica siempre aparece como una sola entidad, con solicitudes de memoria enrutadas correctamente al nodo correcto dentro de nuestra infraestructura.  En segundo lugar, le brindamos algunas herramientas muy agradables para proporcionar una visi√≥n en tiempo real del estado de sus transacciones. Las transacciones se marcan como minadas, pendientes o descartadas. Cada registro de transacci√≥n incluye la duraci√≥n que la transacci√≥n pas√≥ pendiente, la cantidad de gas requerida y el acceso a detalles adicionales.","service":"user-service"}
{"level":"info","message":"El explorador de la alquimia ¬øQu√© pasa si ha enviado veinte transacciones diferentes a un nodo simult√°neamente a trav√©s de un script, pero ve que algunas de ellas ni siquiera llegan al nodo? ¬øC√≥mo podr√≠a rastrear las respuestas fallidas y encontrar patrones para determinar la causa?   Similar a lo anterior, generalmente como desarrollador necesitar√≠a rastrear p√°ginas de registros para determinar un patr√≥n. En respuesta, hemos creado una herramienta de exploraci√≥n de solicitudes / respuestas que le permite rastrear el estado de las solicitudes JSON-RPC enviadas a trav√©s de nuestra API!","service":"user-service"}
{"level":"info","message":"Nuestro Alchemy Explorer le permite buscar a trav√©s de solicitudes y respuestas hist√≥ricas enviadas a trav√©s de nuestra infraestructura en cualquier lugar desde hace 1 segundo hasta 7 d√≠as! No m√°s b√∫squeda de registros: tienes tecnolog√≠a moderna a tu alcance.   En estas solicitudes, puede filtrar las consultas por todo tipo de par√°metros, como el tipo de m√©todo, las respuestas HTTP o los errores espec√≠ficos del nodo! Puede ver solicitudes en funci√≥n de sus marcas de tiempo, la duraci√≥n de la solicitud y muchas m√°s opciones.  ¬øPor qu√© deber√≠a usar la alquimia para administrar mis transacciones? Alchemy es un proveedor de nodos, lo que significa que gestionamos toda la infraestructura asociada con el env√≠o y la recepci√≥n de solicitudes a la cadena de bloques Ethereum ( entre algunas otras. ). Aqu√≠ hay informaci√≥n sobre por qu√© necesita un proveedor de nodos.   Una vez que env√≠e sus solicitudes a trav√©s de nuestro sistema, obtendr√° todos los beneficios que hemos discutido anteriormente para las transacciones pendientes: un grupo de miembros escalable, herramientas de tablero, ganchos web de precio de gas.   Adem√°s de eso, te daremos:   Acceso a Supernode, nuestra infraestructura de nodo patentada que resuelve problemas de escalabilidad y consistencia que afectan a la cadena de bloques. Acceso a nuestro Panel de control, que lo ayuda a construir y monitorear sus aplicaciones al proporcionar herramientas para explorar sus solicitudes como las discutidas anteriormente. Access to Alchemy Notify, una herramienta que proporciona notificaciones push ( webhooks ) para eventos como transacciones que ocurren en blockchain. Acceso a nuestras API mejoradas, que le permiten realizar solicitudes desde blockchain que de otro modo son computacionalmente caras o imposibles.  Y mucho m√°s, incluido el acceso a estas caracter√≠sticas en una variedad de cadenas, como Flujo, Crypto.org, y L2 como Pol√≠gono, Optimismo, y Arbitro!","service":"user-service"}
{"level":"info","message":"Comenzando con la alquimia Desbloquear las herramientas Supernode y desarrollador de Alchemy es incre√≠blemente simple; de hecho, ¬°solo deber√≠a ser una sola l√≠nea de c√≥digo! Si ha estado usando web3.js o ethers.js, es tan simple como creando una cuenta de Alchemy gratis, generando una clave API y reemplazando la instanciaci√≥n con algo como esto:","service":"user-service"}
{"level":"info","message":"Si desea un tutorial completo, consulte nuestro Comenzando con la documentaci√≥n de Alchemy aqu√≠! Y finalmente, siempre estamos disponibles para ayudar las 24 horas del d√≠a, los 7 d√≠as de la semana en nuestro Discord de alquimia. Pase y saluda: ¬°nos encantar√≠a ayudarlo en su viaje en el desarrollo de blockchain!","service":"user-service"}
{"level":"info","message":"‚ÄúSi puedes elegir entre dos cosas y no puedes decidirte, elige ambas.‚Äù‚ÄîGregory CorsoMientras escribo esto, estoy sentado en una habitaci√≥n de hotel. La habitaci√≥n tiene una cama, un ba√±o y un escritorio, y est√° razonablemente limpia. Cada una de estas caracter√≠sticas es un atributo b√°sico que espero de cada habitaci√≥n de hotel. Si ninguno de estos estuviera ausente, no me quedar√≠a en el hotel. Este hotel tambi√©n tiene una cama que es m√°s c√≥moda que la mayor√≠a, incluye acceso gratuito a Internet inal√°mbrico, es m√°s grande que la mayor√≠a de las habitaciones de hotel y tiene un gimnasio. Realmente aprecio estas caracter√≠sticas adicionales, pero no son obligatorias para que me hospede en un hotel. Sin embargo, cuantas m√°s caracter√≠sticas como esta ofrezca el hotel, m√°s estoy dispuesto a pagar por una habitaci√≥n aqu√≠. Finalmente, este hotel me deleit√≥ de dos maneras: cada cinta de correr en el gimnasio tiene un televisor integrado y una botella de agua gratis en mi habitaci√≥n todos los d√≠as. Podr√≠a agrupar las caracter√≠sticas de esta habitaci√≥n de hotel en las siguientes categor√≠as:‚óÜ Imprescindibles: una cama, un ba√±o, un escritorio, limpio‚óÜ Cuanto m√°s, mejor: comodidad de la cama, tama√±o de la habitaci√≥n, variedad y cantidad de equipamiento en el gimnasio‚óÜ Emocionante: televisores integrados en las cintas de correr , botella de agua gratis en myroom todos los d√≠as","service":"user-service"}
{"level":"info","message":"La separaci√≥n de las funciones del producto en las tres categor√≠as anteriores puede proporcionar una gran cantidad de informaci√≥n sobre c√≥mo priorizar el trabajo para el lanzamiento de un nuevo producto. El proceso para hacerlo fue originado por Noriaki Kano, cuyo enfoque nos permite separar las funciones en tres categor√≠as:‚óÜ Umbral , o caracter√≠sticas imprescindibles ‚óÜ Caracter√≠sticas lineales ‚óÜ Excitadores y deleitantes Las caracter√≠sticas de umbral son aquellas que deben estar presentes en el producto para que tenga √©xito. A menudo se las denomina caracter√≠sticas imprescindibles. Estos son la cama, el ba√±o, el escritorio y la limpieza de mi habitaci√≥n de hotel. Mejorar el rendimiento o la cantidad de una caracter√≠stica de umbral tendr√° poco impacto en la satisfacci√≥n del cliente. Por ejemplo, siempre que el ba√±o del hotel satisfaga mis necesidades b√°sicas, no me importa de qu√© est√©n hechas las encimeras. Una caracter√≠stica lineal es aquella en la que ‚Äúcuanto m√°s , mejor‚Äù es cierto. Cuanto m√°s grande sea la habitaci√≥n del hotel, mejor. Estas se denominan funciones lineales porque la satisfacci√≥n del cliente se correlaciona linealmente con la cantidad de la funci√≥n. Cuanto mejor se desempe√±e una de estas caracter√≠sticas (o cuanto m√°s haya), m√°s satisfechos estar√°n los clientes. Debido a esto, el precio del producto a menudo se relaciona con atributos lineales. Si el hotel tiene mancuernas y dos buenas cintas para correr, ser√© m√°s feliz que si solo tiene un escalador viejo y oxidado. Ser√© a√∫n m√°s feliz si tambi√©n tiene entrenadores el√≠pticos y bicicletas de spinning. Y, lo que es importante para el hotel, es m√°s probable que regrese y pague un sobreprecio por sus habitaciones. Por √∫ltimo, los excitantes y los deleitantes son aquellas caracter√≠sticas que brindan una gran satisfacci√≥n, a menudo agregando un sobreprecio a un producto. Sin embargo, la falta de un excitador o deleitante no disminuir√° la satisfacci√≥n del cliente por debajo de lo neutral. La televisi√≥n integrada en la cinta de correr del hotel me emocion√≥. No me habr√≠a sentido insatisfecho si el hotel no los ofreciera porque no sab√≠a que nadie los ten√≠a. De hecho, los estimulantes y deleitantes a menudo se denominan necesidades desconocidas porque los clientes o usuarios no saben que necesitan estas funciones hasta que las ven. La relaci√≥n entre estos tres tipos de caracter√≠sticas diferentes se muestra en la Figura 11.1. La flecha que atraviesa la parte inferior derecha de este diagrama muestra que una vez que se ha implementado una cierta cantidad de una caracter√≠stica imprescindible, la satisfacci√≥n del cliente no puede aumentarse agregando m√°s de esa caracter√≠stica. Adem√°s, no importa cu√°nto se agregue una funci√≥n imprescindible, la satisfacci√≥n del cliente nunca supera el punto medio.","service":"user-service"}
{"level":"info","message":"Debido a que se requieren funciones imprescindibles para que un producto funcione en su segmento de mercado, se debe hacer hincapi√© en priorizar el desarrollo de todas las funciones de umbral. Las caracter√≠sticas imprescindibles de un producto no necesitan desarrollarse en las primeras iteraciones de un lanzamiento. Sin embargo, debido a que los usuarios consideran que estas funciones son obligatorias, deben estar disponibles antes de que se lance el producto. Tenga en cuenta, sin embargo, que la implementaci√≥n parcial de funciones imprescindibles puede ser adecuada, porque las ganancias en la satisfacci√≥n del cliente disminuyen r√°pidamente una vez que se ha establecido un nivel b√°sico de soporte para las funciones de umbral. Por ejemplo, estoy escribiendo este libro con Adobe FrameMaker, que habla de la boca para afuera sobre una funci√≥n de deshacer al permitir un nivel de deshacer. Personalmente, para m√≠, avanzaron bastante en el eje de satisfacci√≥n del cliente con una funci√≥n de deshacer de un nivel, pero hubiera preferido mucho m√°s.","service":"user-service"}
{"level":"info","message":"El √©nfasis secundario debe ponerse en completar tantas caracter√≠sticas lineales como sea posible. Debido a que cada una de estas caracter√≠sticas conduce directamente a una mayor satisfacci√≥n del cliente, cuantas m√°s de estas caracter√≠sticas se puedan incluir, mejor (excluyendo, por supuesto, situaciones como un producto que ya est√° inflado con demasiadas caracter√≠sticas). Finalmente, y si el tiempo lo permite, se debe priorizar al menos unas cuantas delicias para que se incluyan en el plan de lanzamiento. Tenga en cuenta que las funciones tienden a migrar hacia abajo en el diagrama de Kano con el tiempo. Hace poco tiempo, el acceso inal√°mbrico a Internet en una habitaci√≥n de hotel era una delicia. Ahora es una caracter√≠stica lineal en camino de convertirse en una caracter√≠stica de umbral. Evaluaci√≥n de temas en el modelo Kano La forma m√°s f√°cil de utilizar un modelo Kano en un proyecto √°gil es pensar en cada tema y hacer una suposici√≥n informada sobre el tipo de cada uno. Sin embargo, una forma mucho mejor es hablar con los clientes o usuarios para determinar el tipo de cada tema. Esto es sorprendentemente f√°cil porque se puede hacer con un cuestionario escrito y es posible que deba encuestar a veinte o treinta usuarios para priorizar con precisi√≥n los requisitos (Griffin y Hauser 1993). Kano propuso determinar la categor√≠a de una funci√≥n haciendo dos preguntas: una pregunta sobre c√≥mo se sentir√≠a el usuario si la funci√≥n estuviera presente en el producto y una pregunta sobre c√≥mo se sentir√≠a el usuario si no estuviera presente. La primera de estas preguntas se conoce como la forma funcional, porque se refiere al caso en que una funci√≥n est√° presente . La segunda pregunta se conoce como forma disfuncional, porque se refiere a cuando la funci√≥n no est√° presente. Cada pregunta se responde en la misma escala de cinco puntos.1. Me gusta as√≠.2. Espero que sea as√≠.3. Soy neutral.4. Puedo vivir con eso de esa manera.5. No me gusta de esa manera. Como ejemplo, volvamos al sitio web de SwimStats. Supongamos que estamos contemplando tres caracter√≠sticas nuevas: ‚óÜ La capacidad de ver un gr√°fico de los tiempos de un nadador en un evento durante la temporada pasada. ‚óÜ La capacidad de que los nadadores publiquen perfiles autobiogr√°ficos.","service":"user-service"}
{"level":"info","message":"La posibilidad de que cualquier miembro registrado del sitio suba fotos. Para determinar qu√© tipo de caracter√≠sticas son, encuestamos a los posibles usuarios y les preguntamos:‚óÜ Si puede graficar los tiempos de un nadador en un evento durante la √∫ltima temporada, ¬øc√≥mo se siente?‚óÜ Si no puedes graficar los tiempos de un nadador en un evento durante la temporada pasada, ¬øc√≥mo te sientes?‚óÜ Si los nadadores pueden publicar perfiles autobiogr√°ficos, ¬øc√≥mo te sientes?‚óÜ Si los nadadores no pueden publicar perfiles autobiogr√°ficos, ¬øc√≥mo te sientes?‚óÜ Si puedes subir fotos , ¬øc√≥mo te sientes?‚óÜ Si no puedes subir fotos, ¬øc√≥mo te sientes? El primer par de estas preguntas y las respuestas hipot√©ticas de un usuario se muestran en la Figura 11.2.","service":"user-service"}
{"level":"info","message":"Al observar la Figura 11.2, es evidente que es posible que un usuario d√© respuestas inconsistentes. Un usuario podr√≠a, por ejemplo, decir que le gusta graficar los tiempos de un evento de un nadador y que tambi√©n le gusta no tener la misma funci√≥n. Hay veinticinco combinaciones posibles de respuestas a las preguntas funcionales y","service":"user-service"}
{"level":"info","message":"formas disfuncionales de una pregunta. Necesitamos una forma de ver ambas respuestas simult√°neamente y evaluar la opini√≥n de un usuario. Categorizaci√≥n de respuestas El m√©todo para hacer esto se muestra en la figura 11.3. Al cruzar la respuesta a la pregunta funcional con la respuesta a la pregunta disfuncional, las respuestas de un posible usuario pueden reducirse a un solo significado. Entonces, si un usuario dice que espera poder graficar tiempos de eventos y que no le gustar√≠a si no fuera as√≠ (que son las respuestas dadas en la Figura 11.2), hacemos una referencia cruzada de esas respuestas y obtenemos que considera que la funci√≥n es obligatoria. En su mente, graficar los tiempos de los eventos es una caracter√≠stica imprescindible.","service":"user-service"}
{"level":"info","message":"Claro, puedo explicarte qu√© son las preguntas funcionales y las preguntas disfuncionales en el contexto de la estimaci√≥n y planificaci√≥n √°gil.  En la metodolog√≠a √°gil, especialmente en enfoques como Scrum, se fomenta la colaboraci√≥n y la comunicaci√≥n efectiva entre los miembros del equipo. Las preguntas funcionales y disfuncionales son una forma de clasificar las preguntas que se realizan durante el proceso de estimaci√≥n y planificaci√≥n para identificar si est√°n contribuyendo de manera positiva o negativa al objetivo general del equipo.  Las preguntas funcionales son aquellas que ayudan a obtener informaci√≥n relevante y necesaria para lograr un entendimiento com√∫n y tomar decisiones efectivas. Estas preguntas est√°n orientadas hacia el logro de los objetivos del proyecto y el entendimiento de los requisitos y expectativas de los stakeholders. Por ejemplo, algunas preguntas funcionales podr√≠an ser:  ¬øCu√°l es el objetivo principal de esta funcionalidad? ¬øCu√°les son las restricciones o requisitos cr√≠ticos? ¬øC√≥mo podemos descomponer esta tarea en elementos m√°s peque√±os? Estas preguntas funcionales promueven la colaboraci√≥n y la claridad, lo que facilita la estimaci√≥n precisa y la planificaci√≥n efectiva.  Por otro lado, las preguntas disfuncionales son aquellas que no contribuyen de manera positiva al proceso de estimaci√≥n y planificaci√≥n. Estas preguntas pueden distraer al equipo, generar confusi√≥n o desviarse del objetivo principal. Algunos ejemplos de preguntas disfuncionales podr√≠an ser:  ¬øPor qu√© siempre tenemos que hacer las cosas de esta manera? ¬øPor qu√© no podemos agregar m√°s funciones a este sprint? ¬øCu√°nto tiempo lleva realizar esto en comparaci√≥n con otros proyectos? Estas preguntas disfuncionales pueden ralentizar el proceso de estimaci√≥n y planificaci√≥n, crear un ambiente negativo o desviar el enfoque del equipo.  En el gr√°fico cruzado al que haces referencia, es probable que se muestren las preguntas funcionales y disfuncionales en un eje horizontal y vertical, respectivamente. El objetivo es identificar y fomentar el uso de preguntas funcionales mientras se evita o minimiza el uso de preguntas disfuncionales.  Recuerda que el enfoque √°gil se basa en la colaboraci√≥n, la comunicaci√≥n efectiva y la adaptaci√≥n continua. Al promover las preguntas funcionales y minimizar las preguntas disfuncionales, se crea un entorno propicio para el √©xito del proyecto y la satisfacci√≥n del equipo.","service":"user-service"}
{"level":"info","message":"If we repeat this process over twenty to thirty users, their answers can be aggregated and their distributions determined as is shown in Table 11.1. From examining this table, we can tell that graphing event times is a one-dimensional (linear) feature and that uploading photos is a must-have feature","service":"user-service"}
{"level":"info","message":"Si repetimos este proceso sobre veinte o treinta usuarios, sus respuestas pueden agregarse y sus distribuciones determinarse como se muestra en la Tabla 11.1. Al examinar esta tabla, podemos decir que graficar tiempos de eventos es una funci√≥n unidimensional (lineal) y que cargar fotos es una funci√≥n imprescindible.","service":"user-service"}
{"level":"info","message":"Ocasionalmente encontrar√° una caracter√≠stica, como publicar perfiles autobiogr√°ficos en la Tabla 11.1, que tiene valores altos para dos respuestas. Esto indica que diferentes tipos de clientes y usuarios tienen diferentes expectativas. En estos casos, debe considerar analizar las respuestas en funci√≥n de alg√∫n factor que diferencie a su subpoblaci√≥n de clientes o usuarios. Puede, por ejemplo, separar las respuestas de los usuarios de peque√±as empresas de las de los usuarios de grandes empresas. O puede optar por separar las respuestas seg√∫n el puesto de trabajo dentro de una empresa o por segmento de la industria.","service":"user-service"}
{"level":"info","message":"Karl Wiegers (1999) has recommended an approach that is similar to Kano‚Äôs in that it considers both the positive benefit of the presence of a feature and the negative impact of its absence. Rather than use questionnaires, this approach relies on expert judgment. Collaboratively, but led by the product owner, the team assesses each feature being considered for the next release. Each feature is assessed in terms of the benefits it will bring if implemented, as well as the penalty that will be incurred if it is not implemented. As with estimates of story points and ideal time, the estimates of benefits and penalties are relative. A scale of 1 to 9 is used. Table 11.2, which again uses the SwimStats features, shows how this works. The benefit of including graphs of a swimmer‚Äôs event times over a season is estimated at 8. This feature is slightly less valuable than uploading photos but is much more valuable than the ability for swimmers to post autobiographical profiles. As for the relative penalties if these features are absent, there is very little penalty if users cannot upload photos. (In Kano‚Äôs terms, uploading photos is probably an exciter‚Äîusers would like it but would not reject the product if it were absent.) There is more of a penalty if event times cannot be graphed or autobiographies posted.","service":"user-service"}
{"level":"info","message":"Karl Wiegers (1999) ha recomendado un enfoque similar al de Kano en el sentido de que considera tanto el beneficio positivo de la presencia de una caracter√≠stica como el impacto negativo de su ausencia. En lugar de utilizar cuestionarios, este enfoque se basa en el juicio de expertos. En colaboraci√≥n, pero dirigido por el propietario del producto, el equipo eval√∫a cada funci√≥n que se est√° considerando para la pr√≥xima versi√≥n. Cada caracter√≠stica se eval√∫a en t√©rminos de los beneficios que traer√° si se implementa, as√≠ como la penalizaci√≥n en la que se incurrir√° si no se implementa. Al igual que con las estimaciones de los puntos de la historia y el tiempo ideal, las estimaciones de los beneficios y las penalizaciones son relativas. Se utiliza una escala del 1 al 9. La tabla 11.2, que nuevamente usa las funciones de SwimStats, muestra c√≥mo funciona esto. El beneficio de incluir gr√°ficos de los tiempos de los eventos de un nadador durante una temporada se estima en 8. Esta funci√≥n es un poco menos valiosa que cargar fotos, pero es mucho m√°s valiosa que la capacidad de los nadadores de publicar perfiles autobiogr√°ficos. En cuanto a las penalizaciones relativas si estas funciones est√°n ausentes, existe una penalizaci√≥n muy peque√±a si los usuarios no pueden cargar fotos. (En los t√©rminos de Kano, cargar fotos es probablemente un est√≠mulo: a los usuarios les gustar√≠a, pero no rechazar√≠an el producto si no estuviera). Hay una penalizaci√≥n mayor si no se pueden graficar los tiempos de los eventos o publicar autobiograf√≠as.","service":"user-service"}
{"level":"info","message":"Para cada funci√≥n, el beneficio y la sanci√≥n relativos se suman y se ingresan en la columna Valor total. Si lo desea, puede ponderar los beneficios y las sanciones. Por ejemplo, para ponderar el beneficio relativo como el doble de importante que la sanci√≥n relativa, multiplique el Beneficio relativo por 2 antes de sumarlo a la Sanci√≥n relativa para obtener el Valor total. La suma del Total La columna de valor (en este caso, 33) representa el valor total de la entrega de todas las funciones. Para calcular la contribuci√≥n relativa de cada funci√≥n, divida su valor total por la suma de la columna Valor total. Por ejemplo, graficar tiempos de eventos tiene un valor de 14. El valor total de todas las caracter√≠sticas es 33. Dividir 14 por 33 da como resultado 0.42 o 42%. Esto significa que graficar los tiempos de los eventos representa el 42 % del valor total de todas las caracter√≠sticas enumeradas. La siguiente columna, Estimaci√≥n, contiene el punto de la historia o la estimaci√≥n de los d√≠as ideales. Exactamente como con el Valor total, la columna Estimaci√≥n se suma (61, en este caso) y el porcentaje de cada estimaci√≥n se calcula en la columna % Costo. En este ejemplo, la representaci√≥n gr√°fica de los tiempos de los eventos se estima en 32 puntos de historia o d√≠as ideales. Los tres combinados son 61 puntos de historia o d√≠as ideales. Por lo tanto, graficar los tiempos de los eventos representa el 53 % del costo total de estas tres historias ( ). La √∫ltima columna, Prioridad, se calcula dividiendo el Valor % por el Costo %. Los n√∫meros m√°s altos representan prioridades m√°s altas porque crear√°n m√°s valor por el esfuerzo invertido en ellos. Puede ver esto en la Tabla 11.2 mirando la funci√≥n para publicar perfiles autobiogr√°ficos. Esta caracter√≠stica genera un poco m√°s de la mitad del valor de graficar tiempos de eventos (un valor total de 8 en comparaci√≥n con 14), pero lo hace a un cuarto del costo (una estimaci√≥n de 8 en comparaci√≥n con 32). -relaci√≥n de costos, la publicaci√≥n de perfiles autobiogr√°ficos es la caracter√≠stica de mayor prioridad en este an√°lisis.","service":"user-service"}
{"level":"info","message":"La importancia de incluir la penalizaci√≥n relativa Es posible que sienta la tentaci√≥n de eliminar la columna de la penalizaci√≥n relativa. No. Al igual que con el enfoque de Kano, puede ser muy √∫til observar las funciones desde la perspectiva de c√≥mo los usuarios se ver√°n afectados por la presencia de la funci√≥n y por la ausencia de la funci√≥n. Uno de mis clientes en la industria de servicios financieros proporciona una buena ejemplo de la importancia de considerar la pena relativa. El propietario del producto de su equipo pudo priorizar la mayor√≠a de las funciones con bastante facilidad. Sin embargo, una funci√≥n que ten√≠a que priorizar no aportar√≠a ning√∫n valor a la empresa m√°s que mantener la empresa en cumplimiento con ciertas nuevas regulaciones gubernamentales. Ella brome√≥ diciendo que el √∫nico inconveniente de no implementar la funci√≥n era que el director ejecutivo podr√≠a pasar alg√∫n tiempo en prisi√≥n. Y ella (porque no era la CEO) estaba de acuerdo con ese riesgo si eso significaba incluir otras funciones en el producto. Este es un claro ejemplo de una funci√≥n con un beneficio relativo de 1 pero una penalizaci√≥n relativa de 9.","service":"user-service"}
{"level":"info","message":"Retrocedamos un momento y recordemos por qu√© estamos haciendo esto. En el cap√≠tulo anterior, aprendimos que hay cuatro factores que se deben considerar al priorizar funciones.1. La cantidad y la importancia del aprendizaje y los nuevos conocimientos creados mediante el desarrollo de las caracter√≠sticas.2. La cantidad de riesgo eliminado al desarrollar las caracter√≠sticas.3. El valor financiero de tener las caracter√≠sticas.4. El costo de desarrollar (y tal vez admitir) las nuevas funciones. El cap√≠tulo anterior, \"Priorizaci√≥n de temas\", describi√≥ la importancia de tener en cuenta el aprendizaje y la reducci√≥n de riesgos en la priorizaci√≥n general de una funci√≥n. Este cap√≠tulo present√≥ dos enfoques para priorizar la conveniencia de las funciones: An√°lisis de Kano y ponderaci√≥n relativa. En el an√°lisis de Kano, las caracter√≠sticas se segregan en caracter√≠sticas imprescindibles, caracter√≠sticas lineales y excitadores. Esto se hace haciendo a los usuarios potenciales dos preguntas sobre cada funci√≥n: c√≥mo se sentir√≠an si la funci√≥n estuviera presente y c√≥mo se sentir√≠an si no estuviera presente.","service":"user-service"}
{"level":"info","message":"La ponderaci√≥n relativa proporciona un enfoque para evaluar los beneficios de implementar una caracter√≠stica, las sanciones de no implementarla y el costo en un solo valor que representa la prioridad de una caracter√≠stica. Preguntas de discusi√≥n1. ¬øCu√°les son los m√©ritos relativos del an√°lisis de Kano y la ponderaci√≥n relativa en su organizaci√≥n actual?2. ¬øQu√© excitantes est√°n entrando en su proyecto actual?3. ¬øTiene su proyecto actual la combinaci√≥n correcta de excitadores, caracter√≠sticas lineales y caracter√≠sticas imprescindibles?","service":"user-service"}
{"level":"info","message":"‚ÄúHoy en d√≠a no programamos el software m√≥dulo por m√≥dulo; programamos el software funci√≥n por funci√≥n‚Äù.‚ÄîMary PoppendieckA medida que las historias de los usuarios llegan a la cima del plan de lanzamiento, lo que significa que se implementar√°n pronto, a menudo es necesario dividirlas. Despu√©s de todo, si implementar una historia de usuario en particular tomar√° m√°s tiempo que la iteraci√≥n, no hay m√°s remedio que dividir la historia en dos o m√°s historias. Aprender a ver formas de dividir historias no es una habilidad particularmente dif√≠cil de adquirir, pero requiere pr√°ctica y experiencia. Cuantas m√°s historias de usuario diferentes haya dividido en el pasado, m√°s f√°cil se vuelve. Con eso en mente, este cap√≠tulo ofrece consejos sobre c√≥mo dividir historias al proporcionar una serie de ejemplos. A partir de estos ejemplos, se extraen una serie de pautas que se pueden usar para dividir otras historias. Los consejos de este cap√≠tulo se pueden usar cada vez que se necesite dividir una historia. Sin embargo, las pautas est√°n dirigidas espec√≠ficamente a las historias de usuarios o caracter√≠sticas que parecen dif√≠ciles. para dividir. Cu√°ndo dividir una historia de usuario Hay ocasiones en las que puede ser necesario dividir una historia de usuario en varias partes m√°s peque√±as. Primero, una historia de usuario debe dividirse cuando es demasiado grande para caber en una sola iteraci√≥n. A veces, una historia de usuario no cabe en una iteraci√≥n porque es m√°s grande que una iteraci√≥n completa. Claramente, una historia en esta situaci√≥n necesita ser dividida.","service":"user-service"}
{"level":"info","message":"Alternativamente, una historia puede ser lo suficientemente peque√±a como para caber dentro de una iteraci√≥n, pero no encajar√° dentro de la iteraci√≥n que se est√° planificando porque no queda suficiente espacio. El equipo puede sentir que tendr√° tiempo para desarrollar una parte de una historia en la iteraci√≥n, pero no la historia completa. En segundo lugar, puede ser √∫til dividir una gran historia de usuario (una √©pica) si se necesita una estimaci√≥n m√°s precisa. Por ejemplo, uno de mis clientes estaba contemplando nuevas funciones que proporcionar√≠an un mejor acceso a su sistema a los representantes de servicio al cliente (CSR) que trabajaban en otras empresas. La primera pregunta que tuvo que responder el propietario del producto fue si val√≠a la pena seguir con estas funciones. En lugar de escribir un mont√≥n de historias de usuarios individuales, escribi√≥ una historia m√°s grande y describi√≥ la visi√≥n detr√°s de esa historia al equipo. Lo estimaron en puntos de historia de assetenta. Eso fue lo suficientemente bueno para que ella supiera que quer√≠a agregar estas caracter√≠sticas. Sab√≠a que hab√≠a mucha incertidumbre en la estimaci√≥n, pero incluso si la estimaci√≥n se desviaba en un 100 %, val√≠a la pena realizar estas funciones. Si setenta puntos de la historia la hubieran puesto en el l√≠mite de incluir o no las funciones de RSE en el lanzamiento, podr√≠a haber optado por dividir la historia grande y hacer que el equipo estimara las m√∫ltiples historias m√°s peque√±as. gran historia de usuario es por los datos que ser√°n compatibles. Por ejemplo, en un proyecto reciente, el equipo estaba desarrollando un producto para recopilar informaci√≥n financiera. Comenzaron con una historia de usuario √©pica: \"Como usuario, puedo ingresar la informaci√≥n de mi balance\". Un balance en este caso podr√≠a incluir una gran cantidad de campos. En el nivel m√°s alto, incluye activos y pasivos. Los activos incluyen elementos tales como efectivo, valores, bienes ra√≠ces, autom√≥viles, pr√©stamos, etc. El sistema era tal que el usuario pod√≠a interactuar con este balance en varios niveles de detalle. Un usuario podr√≠a ingresar un solo valor que represente todos sus activos. O podr√≠a ingresar informaci√≥n un poco m√°s detallada (un valor total de todos los pr√©stamos, por ejemplo) o informaci√≥n mucho m√°s detallada (un desglose de todos los pr√©stamos). Teniendo en cuenta la cantidad de campos en la pantalla y las interacciones entre ellos, esto era mucho m√°s de lo que el equipo cre√≠a que pod√≠a completar en una sola iteraci√≥n de dos semanas. El equipo dividi√≥ esta historia por el tipo de datos que el usuario pod√≠a ingresar. Su primera historia fue \"Como usuario, puedo ingresar datos de resumen del balance general\". Esta historia era muy peque√±a (casi demasiado peque√±a), ya que solo cubr√≠a la creaci√≥n del formulario b√°sico y dos campos: uno para activos y otro para pasivos. Su siguiente historia fue \"Como usuario, puedo ingresar datos de balance categorizados\". Esta historia cubri√≥ el siguiente nivel de detalle (como efectivo, valores, bienes ra√≠ces, pr√©stamos, etc.). Cuando esta historia fue","service":"user-service"}
{"level":"info","message":"implementado, habr√≠a dos docenas de campos de entrada en la pantalla. Su siguiente historia cubr√≠a la validaci√≥n de datos: \"Como usuario, quiero que los valores que ingrese sean validados para no cometer errores\". Discutieron lo que esto significaba y acordaron que se permitir√≠an montos positivos y negativos, que se podr√≠an ingresar decimales pero que los montos se redondear√≠an autom√°ticamente al d√≥lar m√°s cercano, etc. informaci√≥n del pr√©stamo.‚Äù Esta historia permitir√≠a a un usuario ingresar hasta 100 pr√©stamos (este n√∫mero fue discutido, acordado y anotado como una condici√≥n de satisfacci√≥n en la tarjeta de la historia). Esta historia era m√°s grande de lo que parece porque abordaba una serie de problemas de la interfaz de usuario, como la forma en que se mostrar√≠an en la pantalla las nuevas filas de datos de pr√©stamos. La historia era mucho m√°s grande que las otras que se hab√≠an separado de la historia original. Sin embargo, incluso esta historia era mucho m√°s peque√±a que la historia original porque esta ped√≠a respaldar datos detallados solo para pr√©stamos. La historia del pr√©stamo se us√≥ como patr√≥n para muchas otras historias de usuarios que se separaron del original, como \"Como usuario, puedo ingresar informaci√≥n detallada sobre mis propiedades inmobiliarias\" y \"Como usuario, puedo ingresar informaci√≥n detallada sobre mis propiedades\". tenencias de efectivo, incluidas cuentas corrientes y de ahorro‚Äù. Al dividir la historia inicial de esta manera, el equipo cre√≥ alrededor de una docena de historias de usuarios a partir de la inicial. Cada una de las nuevas historias estaba ahora dentro del tama√±o que podr√≠an completar en una iteraci√≥n de dos semanas. Esto lleva a nuestra primera directriz:","service":"user-service"}
{"level":"info","message":"Dividir grandes historias a lo largo de los l√≠mites de los datos respaldados por la historia.","service":"user-service"}
{"level":"info","message":"Dividir una historia de usuario a lo largo de los l√≠mites de los datos es un enfoque muy √∫til y uno que definitivamente deber√≠a tener en su bolsa de trucos. Como otro ejemplo, hace algunos a√±os estaba trabajando con un equipo que desarrollaba un subsistema de fax automatizado. El equipo se enfrent√≥ con algunas historias de usuarios importantes sobre c√≥mo se pod√≠a configurar el sistema. Las historias se hicieron mucho m√°s peque√±as al dividir el soporte para n√∫meros de tel√©fono de EE. UU. e internacionales. En algunos casos, una historia grande se puede hacer mucho m√°s peque√±a eliminando el manejo de condiciones excepcionales o de error de la historia principal. Suponga que est√° trabajando en un sistema para procesar pagos de pr√©stamos y tiene esta historia de usuario: \"Como prestatario, quiero pagar mi pr√©stamo\". Cuando el equipo analiza esta historia, el propietario del producto se√±ala que si el prestatario env√≠a inadvertidamente un cheque por m√°s del monto pendiente del pr√©stamo, se debe imprimir un cheque de reembolso y","service":"user-service"}
{"level":"info","message":"devuelto por correo al prestatario. A√±ade que esto s√≥lo se aplica a importes superiores a 2 ¬§. Esta historia podr√≠a dividirse escribiendo las siguientes historias: ‚óÜ Como prestatario, quiero pagar mi pr√©stamo. Nota: Permitir sobrepagos.‚óÜ Como prestatario, si accidentalmente pago demasiado, obtengo un reembolso si supera los ¬§2. Dividir los l√≠mites operativos Hace poco trabaj√© con un equipo que ten√≠a la tarea de desarrollar una pantalla de b√∫squeda muy compleja. Hab√≠a docenas de campos en la mitad superior de la pantalla, un generador de consultas de nivel intermedio que ensamblaba consultas de bases de datos formuladas en funci√≥n de lo que se hab√≠a ingresado, y luego una cuadr√≠cula de visualizaci√≥n de datos complejos en la parte inferior de la pantalla. Todo este trabajo fue inicialmente descrito por una sola historia de usuario. Hice que el equipo dividiera el trabajo en tres partes que se distribuyeron en tres iteraciones. En la primera iteraci√≥n, dise√±aron la interfaz de usuario b√°sica, incluida aproximadamente la mitad de los campos de criterios de b√∫squeda que estaban en la parte superior de la pantalla. Tambi√©n escribieron las partes del generador de consultas que funcionaban con esos campos. La parte inferior de la pantalla era para contener la cuadr√≠cula de visualizaci√≥n de datos complejos. Esto fue demasiado para hacer en una iteraci√≥n de dos semanas. Entonces, al final de la primera iteraci√≥n, esa parte de la pantalla mostraba un mensaje simple como \"Esta b√∫squeda encontr√≥ 312 coincidencias\". Esto ciertamente no fue muy √∫til para un usuario que quer√≠a saber qu√© conten√≠an esas 312 coincidencias. Sin embargo, represent√≥ un progreso significativo y lo hizo visible para todas las partes interesadas del proyecto. La segunda iteraci√≥n de este proyecto agreg√≥ la cuadr√≠cula de visualizaci√≥n de datos, y la tercera iteraci√≥n agreg√≥ los campos de criterios de b√∫squeda restantes en la parte superior de la pantalla. Estas iteraciones se priorizaron de esta manera porque hab√≠a mucha incertidumbre acerca de cu√°nto tiempo llevar√≠a desarrollar la cuadr√≠cula de visualizaci√≥n de datos. Se consider√≥ mejor eliminar esa incertidumbre en la segunda iteraci√≥n que dejarla hasta la tercera. Debido a que el equipo ya hab√≠a logrado una s√≥lida comprensi√≥n de lo que era necesario para crear el generador de consultas, consideraron que ese trabajo era de bajo riesgo. Esto nos lleva a nuestra siguiente directriz:","service":"user-service"}
{"level":"info","message":"Dividir historias grandes en funci√≥n de las operaciones que se realizan dentro de la historia.","service":"user-service"}
{"level":"info","message":"Un enfoque com√∫n para hacer esto es dividir una historia a lo largo de los l√≠mites de las operaciones CRUD comunes: Crear, Leer, Actualizar y Eliminar. Para ver c√≥mo funciona esto, suponga que est√° trabajando en el sistema SwimStats y que el equipo est√° listo para desarrollar esta historia: ‚ÄúComo entrenador, puedo manejar a los nadadores de mi equipo‚Äù. El equipo habla con los entrenadores/usuarios y descubre que esto significa que el entrenador quiere agregar nuevos nadadores, editar los datos existentes de los nadadores y eliminar a los nadadores que han dejado el equipo. Esta historia inicial se puede dividir f√°cilmente en tres historias: ‚óÜ Como entrenador, puedo agregar nuevos nadadores a mi equipo. ‚óÜ Como entrenador, puedo editar informaci√≥n sobre nadadores que ya est√°n en mi equipo. ‚óÜ Como entrenador, puedo eliminar nadadores que ya no est√°n en mi equipo. Estas historias se corresponden muy de cerca con las partes Crear, Actualizar y Eliminar de CRUD. Dividir una gran historia en estas tres historias es un patr√≥n muy com√∫n y conduce a nuestra siguiente gu√≠a:","service":"user-service"}
{"level":"info","message":"Dividir historias grandes en operaciones CRUD separadas.","service":"user-service"}
{"level":"info","message":"Hay muchas caracter√≠sticas ortogonales o transversales en una aplicaci√≥n t√≠pica. La seguridad, el manejo de errores y el registro, por ejemplo, abarcan todas las dem√°s funciones de una aplicaci√≥n. Una historia que es demasiado grande para caber en una iteraci√≥n a menudo se puede reducir aisl√°ndola de una o m√°s de estas preocupaciones transversales. Por ejemplo, muchas aplicaciones contienen pantallas que se comportan de manera diferente seg√∫n los privilegios del usuario actual. Si eso es demasiado para desarrollar en una sola iteraci√≥n, desarrolle las pantallas en una sola iteraci√≥n y agregue soporte para privilegios espec√≠ficos del usuario en una iteraci√≥n posterior. En un proyecto reciente, un cliente necesitaba dividir una historia que implicaba buscar datos y mostrar los resultados. Cada b√∫squeda abarcar√≠a toda la base de datos, pero solo se mostrar√≠an los resultados que el usuario ten√≠a privilegios para ver. La soluci√≥n del equipo fue ignorar esta restricci√≥n de seguridad y, en la primera iteraci√≥n de esta funci√≥n, los usuarios pod√≠an ver el conjunto de resultados completo. Como otro ejemplo, suponga que el equipo planea trabajar en una historia que dice \"Como usuario, debo iniciar sesi√≥n\". con un nombre de usuario y contrase√±a antes de usar el sistema.‚Äù El equipo analiza la historia y elabora una lista de restricciones sobre la contrase√±a: debe tener al menos ocho caracteres, debe incluir al menos un d√≠gito,","service":"user-service"}
{"level":"info","message":"no debe incluir caracteres repetidos tres o m√°s veces, debe cifrarse cuando se transmite y almacena, etc. Nada de esto puede llevar mucho tiempo, pero en conjunto puede hacer que la historia sea un poco demasiado grande para caber en una iteraci√≥n. Esto se puede resolver eliminando las precauciones de seguridad de la historia de inicio de sesi√≥n y creando versiones no seguras y seguras de la historia. La segunda historia podr√≠a enumerar las precauciones de seguridad planificadas, como la longitud de la contrase√±a, las restricciones de caracteres, etc. Probablemente no elegir√≠a lanzar el producto con solo la primera historia no segura desarrollada, pero podr√≠a ser valioso dividir la gran historia inicial de esta manera. Esto lleva a nuestra siguiente gu√≠a:","service":"user-service"}
{"level":"info","message":"Considere eliminar preocupaciones transversales (como seguridad, registro, manejo de errores, etc.) y cree dos versiones de la historia: una con y otra sin apoyo para la preocupaci√≥n transversal.","service":"user-service"}
{"level":"info","message":"En el desarrollo de software, a menudo olvidamos (o ignoramos) el consejo de Kernighan y Plauger (1974) de \"Haz que funcione, luego hazlo m√°s r√°pido\". Hace unos a√±os estaba en un proyecto para mostrar gr√°ficos de precios del mercado de valores. Los usuarios de la web solicitar√≠an un gr√°fico con el s√≠mbolo de cotizaci√≥n de la acci√≥n. Nuestro c√≥digo luego recuperar√≠a el historial de precios de esa acci√≥n (en cualquiera de una variedad de per√≠odos de tiempo desde el d√≠a actual hasta los √∫ltimos cinco a√±os) y mostrar√≠a un gr√°fico de l√≠neas de la acci√≥n. Entre las condiciones de satisfacci√≥n asociadas con esa caracter√≠stica estaban las que cubr√≠an la precisi√≥n de la l√≠nea, el manejo de los datos faltantes y el desempe√±o. Para cumplir con el objetivo de rendimiento, necesitar√≠amos almacenar en cach√© los gr√°ficos solicitados con m√°s frecuencia, regenerando cada uno una vez por minuto. Debido a que el almacenamiento en cach√© ser√≠a una parte importante del esfuerzo para ofrecer esta nueva funci√≥n, la separamos en una nueva historia de usuario y la programamos para la siguiente iteraci√≥n. De manera m√°s general, este mismo enfoque se puede aplicar a cualquier requisito no funcional, lo que lleva a nuestra siguiente directriz:","service":"user-service"}
{"level":"info","message":"Considere dividir una historia grande separando los aspectos funcionales y no funcionales en historias separadas.","service":"user-service"}
{"level":"info","message":"Por ejemplo, este enfoque se puede aplicar si una nueva caracter√≠stica debe consumir menos de una cantidad definida de memoria, dibujarse con menos de un n√∫mero de formas o usar un recurso cr√≠tico por menos de una cantidad de tiempo definida. Historias divididas de prioridad mixta Ocasionalmente, una historia comprende varias subhistorias m√°s peque√±as que tienen diferente prioridad. Supongamos que un proyecto incluye una historia t√≠pica de inicio de sesi√≥n: \"Como usuario, debo iniciar sesi√≥n en el sistema\". El propietario del producto expresa sus condiciones de satisfacci√≥n para esta historia, e incluyen lo siguiente:‚óÜ Si el usuario ingresa un nombre de usuario y una contrase√±a v√°lidos, se le otorga acceso.‚óÜ Si el usuario ingresa una contrase√±a no v√°lida tres veces seguidas, se le niega acceso hasta que llame al servicio de atenci√≥n al cliente.‚óÜ Si se niega el acceso al usuario, se le env√≠a un correo electr√≥nico que indica que se intent√≥ usar su cuenta. Esta historia es demasiado grande para caber en una iteraci√≥n, por lo que debe dividirse. La historia se puede dividir buscando elementos de baja prioridad. En este caso, el propietario del producto no enviar√≠a el producto si no fuera compatible con la funcionalidad principal de inicio de sesi√≥n. Sin embargo, podr√≠a estar dispuesto a lanzar el producto sin un mecanismo de tiempo de espera de reintento o sin enviar un correo electr√≥nico sobre el intento de acceso. Esto lleva a otra pauta sobre la divisi√≥n de historias:","service":"user-service"}
{"level":"info","message":"Separe una historia grande en historias m√°s peque√±as si las historias m√°s peque√±as tienen diferentes prioridades.","service":"user-service"}
{"level":"info","message":"A veces, nos encontramos con una caracter√≠stica que es dif√≠cil de dividir. En estos casos, es tentador dividir la caracter√≠stica en sus tareas constituyentes. Para la mayor√≠a de los desarrolladores de software, considerar una caracter√≠stica y descomponerla en sus tareas constituyentes es un h√°bito tal que a menudo lo hacemos sin siquiera ser conscientes de ello. Por ejemplo, no divida una historia en lo siguiente: ‚óÜ Codifique la interfaz de usuario. ‚óÜ Escriba el nivel intermedio.","service":"user-service"}
{"level":"info","message":"La mejor manera de evitar esta tentaci√≥n es seguir el consejo de Hunt y Thomas (1999) de disparar una bala trazadora a trav√©s del sistema. Una bala trazadora viaja a trav√©s de todas las capas de una entidad. Eso puede significar entregar una interfaz de usuario parcial, un nivel intermedio parcial y una base de datos parcial. La entrega de un subconjunto cohesivo de todas las capas de una caracter√≠stica casi siempre es mejor que la entrega de una sola capa. Esto lleva a otra directriz:","service":"user-service"}
{"level":"info","message":"No divida una gran historia en tareas. En su lugar, trate de encontrar una manera de disparar una bala trazadora a trav√©s de la historia.","service":"user-service"}
{"level":"info","message":"Una vez que haya dividido una historia y la tenga en un tama√±o adecuado, no empeore las cosas agregando trabajo a la historia. A menudo, esto viene en forma de tentaci√≥n de cambios relacionados. Nos decimos a nosotros mismos: \"Mientras estoy en ese c√≥digo, tambi√©n podr√≠a ocuparme de estos otros cambios persistentes\". Es muy posible que sea apropiado corregir un error o abordar un problema antiguo mientras se trabaja en un problema separado en la misma parte del c√≥digo. Sin embargo, la prioridad de hacerlo debe considerarse de la misma manera en que se consideraron las prioridades para otras funciones. En otras palabras, ¬øqu√© es m√°s prioritario: pasar medio d√≠a arreglando un error de hace un a√±o o pasar la misma cantidad de tiempo en otra cosa? La respuesta es claramente contextual y se convierte en la directriz final de este cap√≠tulo:","service":"user-service"}
{"level":"info","message":"Evite empeorar las cosas agregando cambios relacionados a una funci√≥n de tama√±o adecuado, a menos que los cambios relacionados tengan una prioridad equivalente.","service":"user-service"}
{"level":"info","message":"Con todos estos consejos sobre la divisi√≥n de historias, puede ser tentador pensar que cada historia de usuario en la que se va a trabajar debe hacerse lo m√°s peque√±a posible. Ese no es el caso. Para los equipos que trabajan en iteraciones de dos semanas, es apropiado dividir las funciones de manera que cada una se pueda realizar en dos a cinco d√≠as m√°s o menos. (Las historias a√∫n pueden estimarse en puntos de historia, pero cuando un equipo necesite dividir las historias, sabr√°n aproximadamente cu√°ntos puntos de historia o d√≠as ideales equivalen a alrededor de dos a cinco d√≠as). Las historias deber√°n ser un poco m√°s peque√±as para las iteraciones de una semana. y","service":"user-service"}
{"level":"info","message":"puede, pero no es necesario, ser un poco m√°s grande para iteraciones m√°s largas. Las historias de estos tama√±os aproximados fluyen mejor a trav√©s de las iteraciones cortas de un proyecto √°gil. As√≠ como es posible que necesitemos dividir historias grandes, es posible que debamos combinar varias historias peque√±as. Las historias combinadas se estiman como un todo en lugar de individualmente. Cuando sea posible, intente combinar historias relacionadas, ya que eso har√° que sea m√°s f√°cil priorizarlas. Es muy com√∫n combinar varios informes de errores y tratarlos como un solo elemento.","service":"user-service"}
{"level":"info","message":"Puede ser √∫til dividir una historia que no encaja en una iteraci√≥n, ya sea porque es demasiado grande para cualquier iteraci√≥n o porque es demasiado grande para caber en el tiempo restante de una iteraci√≥n que se est√° planificando. Tambi√©n es √∫til dividir una historia grande si necesita proporcionar una estimaci√≥n m√°s precisa que la que se puede hacer de una historia grande. Una historia puede dividirse por el tipo de datos que admitir√°. Una historia tambi√©n se puede dividir en funci√≥n de las operaciones inherentes a la historia. La divisi√≥n de historias en las operaciones CRUD comunes (Crear, Leer, Actualizar, Eliminar) es com√∫n. Una historia se puede hacer m√°s peque√±a al segmentar cualquier preocupaci√≥n transversal, como la seguridad, el registro, el manejo de errores, etc. Una historia tambi√©n puede reducirse si se ignoran los objetivos de rendimiento durante la iteraci√≥n en la que la historia se vuelve funcional. El objetivo de rendimiento puede convertirse en su propia historia y satisfacerse en una iteraci√≥n posterior. Muchas historias describen dos o m√°s necesidades. Si estas necesidades tienen diferente prioridad, divida las historias de esa manera. Evite dividir una historia en las tareas de desarrollo que ser√°n necesarias para implementar la funci√≥n. Dividir el trabajo en sus tareas necesarias es un h√°bito para nosotros que es f√°cil para nosotros comenzar a dividir las historias de usuario de esa manera. Evite la tentaci√≥n de agrandar una gran historia al incluir cambios relacionados que no son necesarios para la entrega de la historia de usuario. Finalmente, recuerde que a veces es apropiado combinar historias de usuario, especialmente en el caso de correcciones de errores, que pueden ser demasiado peque√±os por s√≠ solos.","service":"user-service"}
{"level":"info","message":"1. ¬øCu√°les son algunas historias de usuarios sobre un proyecto actual o reciente que le resultaron dif√≠ciles de dividir? ¬øC√≥mo podr√≠as dividirlos ahora?2. ¬øQu√© problemas cree que se producen al dividir una historia en tareas y luego tratarlas como historias de usuario?","service":"user-service"}
{"level":"info","message":"Las dos partes anteriores cubrieron la estimaci√≥n del tama√±o de cada nueva pieza de funcionalidad deseada y luego la priorizaci√≥n para que el equipo tenga como objetivo construir el mejor producto posible. En esta parte del libro, nos enfocamos en crear un cronograma. En los siguientes dos cap√≠tulos, comenzamos analizando los pasos esenciales para planificar un lanzamiento y luego para planificar una iteraci√≥n. El siguiente cap√≠tulo ofrece consejos sobre c√≥mo seleccionar una longitud de iteraci√≥n adecuada. Adem√°s de conocer el tama√±o del trabajo que se completar√°, si queremos estimar cu√°nto tiempo es probable que tome un proyecto, debemos estimar la tasa de progreso del equipo a trav√©s de ese trabajo. Por lo tanto, estimar la velocidad es el tema del pr√≥ximo cap√≠tulo. Los dos cap√≠tulos finales de esta parte cubren situaciones de mayor complejidad o incertidumbre. El primero es c√≥mo planificar un proyecto cuando hay enormes implicaciones por estar equivocado con respecto al cronograma o cuando se debe estimar un cronograma preliminar con mucha anticipaci√≥n y con informaci√≥n muy limitada. Esta parte concluye con un cap√≠tulo que describe las cosas adicionales necesarias en la planificaci√≥n de un proyecto que involucra a varios equipos.","service":"user-service"}
{"level":"info","message":"‚ÄúUsted improvisa. te adaptas Lo superas‚Äù.‚ÄîClint Eastwood en Heartbreak RidgeLa planificaci√≥n del lanzamiento es el proceso de crear un plan de muy alto nivel que cubre un per√≠odo m√°s largo que una iteraci√≥n. Un lanzamiento t√≠pico cubrir√° quiz√°s de tres a seis meses y quiz√°s de tres a doce o m√°s iteraciones, dependiendo de cu√°n largas sean las iteraciones. Un plan de lanzamiento es importante por varias razones. En primer lugar, ayuda al propietario del producto y a todo el equipo a decidir cu√°nto se debe desarrollar y cu√°nto tiempo llevar√° antes de tener un producto que se pueda lanzar. Cuanto antes se pueda lanzar el producto (y mejor es cuando se lanza), m√°s pronto la organizaci√≥n comenzar√° a obtener un retorno de su inversi√≥n en el proyecto. En segundo lugar, un plan de lanzamiento transmite expectativas sobre lo que es probable que se desarrolle y en qu√© plazo. Muchas organizaciones necesitan esta informaci√≥n porque alimenta otras actividades de planificaci√≥n estrat√©gica. En tercer lugar, un plan de lanzamiento sirve como una gu√≠a hacia la que puede avanzar el equipo del proyecto. Sin el concepto de lanzamiento, los equipos se mueven sin cesar de una iteraci√≥n a la siguiente. Un plan de lanzamiento proporciona un contexto que permite que las iteraciones se combinen en un todo satisfactorio. Esta es una preocupaci√≥n fundamental con cualquier proceso iterativo, no solo con los √°giles. Un excursionista que desee llegar a la cima de una monta√±a puede dirigirse al pico m√°s alto que vea. Sin embargo, una vez que llega a esa cumbre, se entera de que era un pico falso. Una cumbre m√°s alta hab√≠a sido oscurecida por la que √©l hab√≠a alcanzado. El excursionista se dirige hacia la cumbre m√°s alta, solo para descubrir que tambi√©n es un pico falso, y ahora se ve una cumbre a√∫n m√°s alta. Esta forma bastante tortuosa de escalar una monta√±a puede aplicarse igualmente a proyectos iterativos. Afortunadamente, los problemas que crea se eliminan al tener un plan de lanzamiento que muestra la expectativa actual de un equipo de ad√≥nde desea llegar en √∫ltima instancia.","service":"user-service"}
{"level":"info","message":"Parte de la planificaci√≥n de un lanzamiento es determinar cu√°nto se puede lograr en qu√© fecha. En algunos casos, comenzamos con una fecha y vemos cu√°nto se puede terminar para entonces. En otros casos, comenzamos con un conjunto de historias de usuarios y vemos cu√°nto tiempo llevar√° desarrollarlas. En ambos casos, una vez que un equipo tiene una respuesta inicial, se eval√∫a frente a los objetivos de la organizaci√≥n para el proyecto: ¬øEl producto desarrollado generar√° la cantidad de dinero deseada? ¬øAhorrar√° suficiente dinero? ¬øCapturar√° el producto la cuota de mercado objetivo? Si no, tal vez un proyecto m√°s largo o m√°s corto pueda lograr un conjunto aceptable de objetivos. En un nivel superficial, determinar cu√°nto trabajo cabe en una versi√≥n y qu√© historias de usuario ser√°n es un proceso muy sencillo. Multiplicar el n√∫mero planificado de iteraciones por la velocidad esperada o conocida del equipo nos da la cantidad total de trabajo que se puede realizar. Luego seleccionamos la cantidad de historias de usuario que se ajustar√°n y listo. Suponga que deseamos enviar un nuevo producto en seis meses. Planeamos trabajar en iteraciones de dos semanas, por lo que habr√° trece iteraciones durante el proyecto. Esperamos que la velocidad del equipo sea de veinte puntos de historia o d√≠as ideales por iteraci√≥n. El tama√±o del proyecto total es entonces puntos de historia o d√≠as ideales. Luego, el propietario del producto y el equipo podr√≠an discutir todas las historias y priorizarlas para ofrecer el mayor valor posible sin pasar de 260. El plan de lanzamiento en s√≠ generalmente se documenta como una simple lista de las historias de usuarios que se desarrollar√°n durante el proyecto. Durante la planificaci√≥n del lanzamiento, no queremos crear un plan que indique qu√© desarrolladores trabajar√°n en qu√© historias de usuario o tareas, o la secuencia en la que se realizar√° el trabajo dentro de una iteraci√≥n. Crear un plan con ese nivel de detalle durante la planificaci√≥n del lanzamiento es peligroso y enga√±oso. Las decisiones sobre qui√©n trabaja en qu√© y la secuencia de actividades es mejor dejarlas en manos de las personas que trabajan en esas tareas y es mejor postergarlas tanto como sea posible. Adem√°s, recuerde que los elementos de un plan de lanzamiento son historias de usuario, que son descripciones de la funcionalidad que se entregar√°, no tareas de ingenier√≠a individuales que se realizar√°n. Durante la planificaci√≥n del lanzamiento, es demasiado pronto y es posible que algunas historias de usuarios no se entiendan lo suficiente como para desagregarlas en tareas de ingenier√≠a. Como ver√° en el Cap√≠tulo 14, \"Planificaci√≥n de la iteraci√≥n\", el equipo eventualmente desagregar√° el","service":"user-service"}
{"level":"info","message":"historias de usuario del plan de lanzamiento en sus tareas constituyentes. Pero no har√°n esto hasta el comienzo de la iteraci√≥n que contiene esas historias. Naturalmente, si su proyecto, organizaci√≥n y entorno de trabajo lo justifican, puede incluir informaci√≥n adicional en un plan de lanzamiento. Por ejemplo, es posible que desee comunicar algunos supuestos clave subyacentes al plan. En particular, es posible que desee establecer suposiciones sobre qui√©n est√° en el equipo, cu√°nto durar√°n las iteraciones, la fecha en que comenzar√° la primera iteraci√≥n y la fecha en que finalizar√° la √∫ltima iteraci√≥n. El Cap√≠tulo 21, \"Comunicaci√≥n sobre planes\", describir√° informaci√≥n √∫til adicional que quiz√°s desee incluir al comunicarse sobre un plan de lanzamiento. Los pasos generales para planificar un lanzamiento se muestran en la Figura 13.1. Cada uno de estos pasos se describir√° en las secciones siguientes.","service":"user-service"}
{"level":"info","message":"Determinar las Condiciones de Satisfacci√≥n Antes de comenzar a planificar un lanzamiento, es importante conocer los criterios por los cuales el proyecto ser√° evaluado como un √©xito o un fracaso. Para la mayor√≠a de los proyectos, la √∫ltima tarjeta de puntuaci√≥n es la cantidad de dinero ahorrado o generado. Como indicadores principales de si es probable que un proyecto logre estos objetivos financieros, la mayor√≠a de los proyectos utilizan el triunvirato de cronograma, alcance y recursos. Para la mayor√≠a de los proyectos, esto significa que las condiciones de satisfacci√≥n del propietario del producto est√°n definidas por una combinaci√≥n de objetivos de cronograma, alcance y recursos. El propietario del producto traer√° los objetivos deseados para cada uno de estos factores en casi todas las reuniones de planificaci√≥n de lanzamiento. El propietario de un producto puede querer desarrollar cuatro temas (con un valor de 200 puntos de historia) en tres meses sin agregar personal, por ejemplo. Aunque a menudo se identifica un objetivo para cada factor, generalmente un factor es preeminente. Los proyectos suelen estar basados ‚Äã‚Äãen fechas o funciones. Un proyecto basado en fechas es aquel que debe lanzarse en una fecha determinada pero para el cual el conjunto de funciones es negociable. Un proyecto basado en funciones es uno que probablemente nos gustar√≠a lanzar lo antes posible, pero para el cual consideramos que es m√°s importante completar un conjunto de funciones.","service":"user-service"}
{"level":"info","message":"Estime las historias de usuario Debido a que una estimaci√≥n representa el costo de desarrollar una historia de usuario, es importante que cada una haya sido estimada. Imagina que has decidido reemplazar todas las prendas de vestir de tu armario. Llegas al centro comercial y empiezas a comprar. Sin embargo, observa que se han quitado todas las etiquetas de precios y que no tiene forma de saber el costo de nada. Esto es lo que se siente ser un propietario de producto al que no se le proporcionan estimaciones. No es necesario estimar todo lo que un propietario de producto pueda desear. Solo es necesario tener una estimaci√≥n para cada caracter√≠stica nueva que tenga alguna posibilidad razonable de ser seleccionada para su inclusi√≥n en el pr√≥ximo lanzamiento. A menudo, el propietario de un producto tendr√° una lista de deseos que se extiende a dos, tres o m√°s lanzamientos en el futuro. No es necesario tener estimaciones sobre el trabajo m√°s distante. Seleccione una duraci√≥n de iteraci√≥n La mayor√≠a de los equipos √°giles trabajan en iteraciones de dos a cuatro semanas. Es posible ir un poco m√°s largo, y algunos equipos han experimentado con iteraciones a√∫n m√°s cortas. Al planificar un lanzamiento, ser√° necesario elegir una duraci√≥n de iteraci√≥n adecuada. En el Cap√≠tulo 15, \"Selecci√≥n de una duraci√≥n de iteraci√≥n\", se proporciona orientaci√≥n sobre c√≥mo hacerlo. equipo tiene experiencia trabajando juntos, su mejor apuesta es a menudo usar la velocidad que el equipo exhibi√≥ m√°s recientemente. Naturalmente, si la tecnolog√≠a o el dominio comercial ha cambiado dr√°sticamente, puede que no sea apropiado utilizar la velocidad anterior de un equipo. A√∫n as√≠, hay t√©cnicas que puede aplicar que le permiten hacer una estimaci√≥n informada de la velocidad basada en resultados anteriores. En el Cap√≠tulo 16, ‚ÄúEstimaci√≥n de la velocidad‚Äù, veremos tales t√©cnicas y tambi√©n exploraremos opciones para estimar la velocidad.","service":"user-service"}
{"level":"info","message":"Priorice las historias de usuarios La mayor√≠a de los proyectos tienen muy poco tiempo o demasiadas funciones. A menudo es imposible hacer todo lo que todos quieren en el tiempo permitido. Debido a esto, el propietario del producto debe priorizar las funciones que desea desarrollar. El propietario de un buen producto aceptar√° la responsabilidad √∫ltima de priorizar, pero escuchar√° los consejos del equipo de desarrollo, especialmente sobre la secuenciaci√≥n. Las historias de usuario se priorizan seg√∫n las pautas proporcionadas en la parte anterior de este libro. Seleccione historias y una fecha de lanzamiento En este punto, tiene una estimaci√≥n de la velocidad del equipo por iteraci√≥n y tiene una suposici√≥n sobre cu√°ntas iteraciones habr√°. Es hora de ver si se puede planificar un lanzamiento que cumpla con las condiciones de satisfacci√≥n del proyecto. Si el proyecto est√° basado en funciones, podemos sumar las estimaciones de todas las funciones necesarias y dividirlas por la velocidad esperada. Esto nos dar√° la cantidad de iteraciones necesarias para completar la funcionalidad deseada. Si el proyecto est√° basado en fechas, podemos determinar la cantidad de iteraciones mirando un calendario. Multiplicar el n√∫mero de iteraciones por la velocidad esperada nos dir√° cu√°ntos puntos de historia o d√≠as ideales caben en el lanzamiento. Podemos contar esa cantidad de puntos o d√≠as ideales en la lista priorizada de historias de usuarios y ver cu√°nta funcionalidad se puede entregar en el tiempo deseado. La siguiente pregunta que se abordar√° es qu√© tan detallado ser√° el plan de lanzamiento. Algunos equipos en algunos entornos prefieren crear un plan de lanzamiento que muestre lo que esperan desarrollar durante cada iteraci√≥n. Otros equipos prefieren simplemente determinar lo que creen que se desarrollar√° durante el lanzamiento general, dejando los detalles de cada iteraci√≥n para m√°s adelante. Esto es algo que el equipo debe analizar y decidir durante la planificaci√≥n del lanzamiento. Hay ventajas y desventajas para cada enfoque. Obviamente, asignar funciones espec√≠ficas a iteraciones espec√≠ficas lleva m√°s tiempo.","service":"user-service"}
{"level":"info","message":"Sin embargo, los detalles adicionales que esto proporciona pueden ser √∫tiles cuando se coordina el trabajo entre varios equipos. Por otro lado, no asignar trabajo a iteraciones espec√≠ficas proporciona menos detalles, pero lleva mucho menos tiempo. Adem√°s, incluso si asignamos trabajo preliminarmente a iteraciones espec√≠ficas, lo hacemos con menos conocimiento del que tendremos al comienzo de cada iteraci√≥n. Sin duda, el plan cambiar√° a medida que vayamos conociendo m√°s a lo largo del proyecto. Por lo tanto, la inversi√≥n de tiempo y esfuerzo para asignar trabajo a iteraciones espec√≠ficas debe sopesarse frente a esto. A√∫n as√≠, en algunos proyectos tal vez valga la pena hacerlo. Lo que encuentro que es un buen compromiso es colocar trabajo espec√≠fico en las primeras tres iteraciones, tratando el resto del plan de lanzamiento como un cubo grande. Casi siempre vale la pena asignar trabajo espec√≠fico a la primera iteraci√≥n, especialmente si comienza de inmediato. Debido a que hay muchas preguntas de toma y daca y qu√© pasar√≠a si durante una sesi√≥n t√≠pica de planificaci√≥n de lanzamiento, queremos una manera f√°cil de manipular lo que est√° dentro y fuera del lanzamiento y sus iteraciones. La mejor manera de lograr esto, suponiendo que todos est√©n ubicados, es trabajar con tarjetas de notas de 3\" x 5\" o blocs adhesivos con historias de usuarios o funciones escritas en ellos. A diferencia del software, las tarjetas son tangibles y f√°ciles de compartir. Para planificar un lanzamiento, el propietario del producto selecciona sus elementos de m√°xima prioridad que encajar√°n en la primera iteraci√≥n. Las tarjetas se apilan o se organizan para indicar qu√© historias comprenden cada iteraci√≥n. La figura 13.2 muestra una forma de hacerlo. Las cartas se pueden colocar as√≠ sobre una mesa o una pared. Si est√° usando una pared, un tablero de corcho es muy efectivo, porque las tarjetas se pueden clavar en el tablero en lugar de pegarlas con cinta adhesiva a la pared. 13.2 y verifique que cada iteraci√≥n contenga la cantidad correcta de trabajo.","service":"user-service"}
{"level":"info","message":"En este punto, el plan de lanzamiento est√° hecho. Sin embargo, es importante que el plan de lanzamiento no se guarde en alg√∫n lugar o se coloque en un estante, para no volver a tocarlo nunca m√°s. El plan de lanzamiento debe revisarse y actualizarse con cierta frecuencia regular. Si la velocidad del equipo de desarrollo se ha mantenido bastante constante y la planificaci√≥n de la iteraci√≥n no ha presentado grandes sorpresas, es posible que desee pasar de cuatro a seis semanas sin actualizar formalmente el plan de lanzamiento. Por otro lado, muchos proyectos se benefician al establecer una regla de que el plan de lanzamiento se revisar√° despu√©s de cada iteraci√≥n. Para unir todo lo anterior, consideremos un ejemplo muy breve. Volveremos a utilizar el sitio web de SwimStats. A trav√©s de la investigaci√≥n de mercado, hemos descubierto que los entrenadores y nadadores de nuestro p√∫blico objetivo desean las caracter√≠sticas descritas en las siguientes historias de usuarios:‚óÜ Como entrenador, puedo definir sesiones de pr√°ctica.‚óÜ Como entrenador, puedo definir campos personalizados que quiero rastrear para cada nadador.‚óÜ Como nadador, puedo generar un informe que muestre mi mejora en todos los eventos desde una fecha pasada.‚óÜ Como nadador, puedo actualizar mi informaci√≥n demogr√°fica.‚óÜ Como entrenador, puedo enviar un correo electr√≥nico a todos los nadadores en el equipo.‚óÜ Como administrador del sistema, puedo configurar permisos y grupos de usuarios.‚óÜ Como entrenador, puedo comprar SwimStats y usarlo para mi equipo.‚óÜ Como nadador, puedo comparar mis tiempos con r√©cords nacionales.‚óÜ Como como entrenador, puedo ingresar los nombres y la informaci√≥n demogr√°fica de todos los nadadores de mi equipo.‚óÜ Como nadador, puedo ver mis mejores tiempos en cada evento.‚óÜ Como usuario, debo iniciar sesi√≥n y solo puedo ver los datos de que tengo permiso.‚óÜ Como nadador, puedo ver todos mis tiempos para un evento espec√≠fico. Determinaci√≥n de las condiciones de satisfacci√≥n La temporada de nataci√≥n de primavera comienza en cuatro meses. La primera versi√≥n del sitio web de SwimStats debe estar disponible un mes antes. Al propietario del producto le gustar√≠a tener tantas funciones como sea posible, pero este es un proyecto basado en fechas. Algo debe ser liberable en tres meses, incluso si es solo lo b√°sico para peque√±os equipos de nataci√≥n.","service":"user-service"}
{"level":"info","message":"Como puesta en marcha, el presupuesto tambi√©n es fijo. El proyecto debe realizarse con el programador, el administrador de la base de datos y el evaluador que ya forman parte del personal. Estimaci√≥n Los tres desarrolladores que trabajar√°n en el proyecto se re√∫nen con el propietario del producto. Hacen preguntas sobre las historias de los usuarios y el producto. propietario aclara la intenci√≥n de cada uno. El equipo elige estimar en puntos de historia y asigna las estimaciones que se muestran en la Tabla 13.1.","service":"user-service"}
{"level":"info","message":"Selecci√≥n de la duraci√≥n de la iteraci√≥n Debido a que todo el proyecto solo durar√° tres meses, los desarrolladores y el propietario del producto est√°n de acuerdo en que las iteraciones de cuatro semanas son demasiado largas. Ejecutar iteraciones de cuatro semanas simplemente no les dar√° suficientes puntos de control sobre el progreso del equipo ni suficientes oportunidades para que el propietario del producto dirija el proyecto ajustando las prioridades. Con base en los puntos que se presentar√°n en el Cap√≠tulo 15, ‚ÄúSelecci√≥n de una duraci√≥n de iteraci√≥n‚Äù, todos acuerdan ejecutar iteraciones de dos semanas. Estimaci√≥n de la velocidad Este proyecto ser√° trabajado por dos programadores y un evaluador. Utilizando las t√©cnicas que aprender√° en el Cap√≠tulo 16, \"Estimaci√≥n de la velocidad\", pronostican una velocidad de ocho puntos de historia por iteraci√≥n. Priorizaci√≥n de las historias de usuario El propietario del producto, seg√∫n la investigaci√≥n de mercado que se ha realizado, prioriza las historias. La lista de pisos priorizados, junto con la estimaci√≥n para cada piso, se muestra en la Tabla 13.1.","service":"user-service"}
{"level":"info","message":"Selecci√≥n de las historias de usuario Debido a que este es un proyecto basado en fechas, sabemos cu√°ntas iteraciones puede haber. El propietario del producto quiere un lanzamiento en tres meses, por lo que hay tiempo para seis iteraciones de dos semanas seguidas de una semana adicional en caso de que sea necesario. Con una velocidad estimada de ocho puntos por iteraci√≥n, esto significa que el lanzamiento se planificar√° para incluir puntos de historia. El propietario del producto podr√° seleccionar hasta cuarenta y ocho puntos de la Tabla 13.1 para incluirlos en el lanzamiento. El propietario del producto ha clasificado las historias de usuario de la Tabla 13.1 en orden descendente seg√∫n el valor que cree que tendr√° cada uno para el lanzamiento inicial. de SwimStats. El propietario del producto puede seleccionar hasta cuarenta y ocho puntos. Inicialmente indica que le gustar√≠a seleccionar las primeras ocho historias, a trav√©s de \"Como nadadora, puedo comparar mis tiempos con los r√©cords nacionales\". Esto es un total de cuarenta y seis puntos, lo suficientemente cerca de cuarenta y ocho que el propietario del producto acepta detenerse all√≠. Sin embargo, los desarrolladores se√±alan que la historia priorizada como la m√°s baja por el propietario del producto es necesaria: ‚ÄúComo administrador del sistema, yo puede configurar permisos y grupos de usuarios.‚Äù Esta noticia se estima en tres puntos, lo que situar√≠a el estreno en cuarenta y nueve y por encima de los cuarenta y ocho previstos. Los cuarenta y ocho puntos son una suposici√≥n bastante aproximada, y se planea una semana adicional despu√©s de la sexta iteraci√≥n. Algunos equipos pueden permitir cuarenta y nueve puntos en estas circunstancias. Sin embargo, el equipo de SwimStats decide no permitir cuarenta y nueve puntos. Si se agrega una historia de tres puntos, se debe eliminar al menos un punto del lanzamiento. El propietario del producto decide abandonar el ocho puntos \"Como nadador, puedo","service":"user-service"}
{"level":"info","message":"comparar mis tiempos con los r√©cords nacionales‚Äù. Esto reduce el lanzamiento a cuarenta y un puntos. El propietario del producto podr√≠a agregar la historia de tres puntos: \"Como entrenadora, puedo enviar un correo electr√≥nico a todos los nadadores del equipo\" al comunicado, pero decide no hacerlo. Si el equipo obtiene incluso un punto antes de lo previsto, preferir√≠a volver a agregar la historia de ocho puntos que dej√≥ caer. Esto hace el plan de lanzamiento final como se muestra en la Tabla 13.2.","service":"user-service"}
{"level":"info","message":"Un plan de lanzamiento es un plan de alto nivel que cubre un per√≠odo m√°s largo que una iteraci√≥n. Para la mayor√≠a de los equipos, un lanzamiento ocurre cada tres a seis meses, pero no es inusual tener lanzamientos con mayor o menor frecuencia, seg√∫n el tipo de software. En su nivel m√°s simple, la planificaci√≥n del lanzamiento es trivial: multiplique la velocidad esperada por el n√∫mero de iteraciones planificadas y luego seleccione historias cuyas estimaciones se suman para completar el lanzamiento. Un plan de lanzamiento no tiene que describir exactamente en qu√© se trabajar√° durante cada iteraci√≥n. De hecho, ese nivel de detalle rara vez se necesita. Para la mayor√≠a de los proyectos, es bastante adecuado identificar las historias en las que se trabajar√° en el primer par de iteraciones, dejando que las historias restantes se prioricen en iteraciones espec√≠ficas m√°s adelante.","service":"user-service"}
{"level":"info","message":"La planificaci√≥n del lanzamiento es un proceso iterativo que comienza con la identificaci√≥n de las condiciones de satisfacci√≥n del propietario del producto para el proyecto. Por lo general, incluyen metas para el cronograma, el alcance y los recursos. Si no se puede planificar un proyecto que cumpla con el conjunto de condiciones iniciales de satisfacci√≥n, se repite el proceso de planificaci√≥n para ver si se puede cumplir con un conjunto reducido de condiciones; tal vez la funcionalidad deseada se pueda entregar un poco m√°s tarde o con un equipo m√°s grande. Una vez que se ha creado un plan de lanzamiento, no se deja colgado en una pared para que se pudra. Por lo general, se actualiza al comienzo de cada iteraci√≥n. Preguntas de discusi√≥n 1. ¬øSu proyecto actual est√° basado en la fecha o en las caracter√≠sticas? ¬øQu√© lo hace as√≠? 2. En su organizaci√≥n o en su proyecto actual, ¬øcon qu√© frecuencia se debe actualizar un plan de lanzamiento?","service":"user-service"}
{"level":"info","message":"‚ÄúEs un error capital teorizar antes de tener datos‚Äù.‚ÄîSherlock Holmes, Scandal in Bohemia Un plan de lanzamiento es una excelente visi√≥n de alto nivel de c√≥mo un equipo intenta entregar el producto m√°s valioso que pueda. Sin embargo, un plan de lanzamiento proporciona solo la vista de alto nivel del producto que se est√° construyendo. No proporciona la vista m√°s detallada y a corto plazo que los equipos usan para impulsar el trabajo que ocurre dentro de una iteraci√≥n. Con un plan de iteraci√≥n, un equipo toma una mirada m√°s enfocada y detallada de lo que ser√° necesario para implementar completamente solo aquellas historias de usuario seleccionadas. para la nueva iteraci√≥n. Se crea un plan de iteraci√≥n en una reuni√≥n de planificaci√≥n de iteraci√≥n. A esta reuni√≥n deben asistir el propietario del producto, analistas, programadores, probadores, ingenieros de bases de datos, dise√±adores de interacci√≥n con el usuario, etc. Cualquier persona involucrada en tomar una idea en bruto y convertirla en un producto funcional debe estar presente. De manera tangible, un plan de iteraci√≥n puede ser tan simple como una hoja de c√°lculo o un conjunto de tarjetas con una tarea escrita a mano en cada tarjeta. En cualquier caso, las tareas y las historias deben organizarse de modo que sea posible saber qu√© tareas van con qu√© historias. Por ejemplo, consulte la Tabla 14.1, que muestra un plan de iteraci√≥n en una hoja de c√°lculo. Las tareas se muestran una por fila y est√°n sangradas debajo de la historia. a las que se aplican. Como alternativa a una hoja de c√°lculo, consulte la figura 14.1, que ilustra el uso de tarjetas de notas para la planificaci√≥n de iteraciones. Las tarjetas se pueden organizar como en esa figura en","service":"user-service"}
{"level":"info","message":"una mesa o piso, o peg√°ndolos con cinta adhesiva o fij√°ndolos a una pared. Para equipos coubicados, mi preferencia es hacer la planificaci√≥n de la iteraci√≥n con tarjetas de notas. El equipo puede salir de una reuni√≥n de planificaci√≥n de la iteraci√≥n e inmediatamente escribir las tarjetas en un sistema de software, si as√≠ lo desean, pero existen beneficios muy reales al usar tarjetas durante la reuni√≥n.","service":"user-service"}
{"level":"info","message":"Una de las ventajas m√°s significativas de usar tarjetas de notas durante la planificaci√≥n de la iteraci√≥n es que permite que todos participen en el proceso. Si las tareas se escriben en un sistema durante la reuni√≥n de planificaci√≥n de la iteraci√≥n, alguien tiene sus dedos en el teclado. Hay un tremendo poder en tener control sobre el teclado. Es mejor que todas las conversaciones involucren al mecan√≥grafo, o no se ingresar√° nada en el plan de publicaci√≥n. Peor a√∫n, quienquiera que tenga el teclado puede cambiar lo que se ingresa en el plan de lanzamiento. Dos ejemplos atestiguan este poder. En el primer caso, el equipo discuti√≥ un art√≠culo en particular y decidi√≥ que deber√≠a estimarse en doce horas. El teclado estaba bajo el control de una combinaci√≥n de gerente de proyecto y l√≠der t√©cnico. Ingres√≥ una estimaci√≥n de ocho en el sistema porque \"no hay forma de que tome tanto tiempo\", a pesar de que era muy poco probable que fuera √©l quien hiciera la tarea.","service":"user-service"}
{"level":"info","message":"En el segundo caso, el equipo que yo estaba entrenando discuti√≥ c√≥mo se implementar√≠a una nueva funci√≥n: ¬øser√≠a c√≥digo Java del lado del servidor o un procedimiento almacenado en la base de datos? Todos menos el l√≠der del equipo, que ten√≠a el teclado, estuvieron de acuerdo en que se implementar√≠a a trav√©s de procedimientos almacenados. Se le pidi√≥ que creara una tarea de \"agregar procedimientos almacenados\" en su hoja de c√°lculo. En su lugar, escribi√≥ \"Escribir c√≥digo de almacenamiento de datos\". Su mensaje fue claro: este problema no se ha resuelto. Compare estas dos situaciones con una reuni√≥n de planificaci√≥n de iteraci√≥n en la que cualquiera puede agarrar una tarjeta y escribir una tarea en cualquier momento. El uso de tarjetas es un enfoque mucho m√°s democr√°tico y colaborativo y es probable que conduzca a mejores resultados a lo largo de la iteraci√≥n y el proyecto, no solo durante esa reuni√≥n. Las tareas no se asignan durante la planificaci√≥n de la iteraci√≥n aclarar una cosa que no se hace. Al planificar una iteraci√≥n, las tareas no se asignan a personas espec√≠ficas. Al comienzo de la iteraci√≥n, puede parecer obvio qui√©n trabajar√° en una tarea espec√≠fica; Sin embargo, seg√∫n el progreso de todo el equipo frente a todo el conjunto de tareas, lo que es obvio al principio puede no serlo.","service":"user-service"}
{"level":"info","message":"lo que sucede durante la iteraci√≥n. Por ejemplo, al planificar una iteraci√≥n, podemos suponer que nuestro administrador de base de datos completar√° la tarea de \"ajustar la consulta de b√∫squeda avanzada\" porque tiene las mejores habilidades de SQL en el equipo. Sin embargo, si no puede llegar a esta tarea, otra persona puede dar un paso al frente y hacerlo. Las personas no se registran para las tareas hasta que comienza la iteraci√≥n y, en general, se registran solo para una o dos tareas relacionadas a la vez. Las nuevas tareas no se inician hasta que se completan las previamente seleccionadas. No hay nada que ganar y bastante que perder al asignar personas a tareas espec√≠ficas durante la planificaci√≥n de la iteraci√≥n. Los proyectos funcionan mejor cuando fomentan una actitud de \"estamos todos juntos en esto\", cuando los miembros del equipo se dan la mano unos a otros sabiendo que se les devolver√° el favor. Cuando las personas se inscriben para tareas espec√≠ficas al comienzo de la iteraci√≥n, va en contra de fomentar un compromiso unificado para lograr los objetivos de la iteraci√≥n.","service":"user-service"}
{"level":"info","message":"El plan de lanzamiento contempla el lanzamiento del producto, generalmente de tres a seis meses al comienzo de un nuevo proyecto. Por el contrario, el plan de iteraci√≥n anticipa solo la duraci√≥n de una iteraci√≥n, generalmente de dos a cuatro semanas. Las historias de usuario del plan de lanzamiento se descomponen en tareas en el plan de iteraci√≥n. Donde las historias de usuario de un plan de lanzamiento se estiman en puntos de historia o d√≠as ideales, las tareas en el plan de iteraci√≥n se estiman en horas ideales. ¬øPor qu√© las tareas de una iteraci√≥n plan estimado en horas pero las historias de un plan de lanzamiento se estiman en puntos de historia o d√≠as ideales? Principalmente porque es posible hacerlo. El trabajo de una iteraci√≥n no es m√°s que unas pocas semanas, y el equipo debe tener un nivel razonable de comprensi√≥n del trabajo, especialmente despu√©s de discutirlo durante la reuni√≥n de planificaci√≥n de la iteraci√≥n. Esto les permite estimar de manera cre√≠ble las tareas de una iteraci√≥n en horas. Cada una de las historias de usuario que componen una versi√≥n representa m√∫ltiples tareas, son m√°s vagas y menos comprendidas, por lo que deben estimarse en unidades m√°s abstractas, como puntos de historia o d√≠as ideales. Estas diferencias principales entre un plan de versi√≥n y un plan de iteraci√≥n se resumen en la Tabla 14.2 .El objetivo principal de la planificaci√≥n de iteraciones es refinar las suposiciones hechas en el plan de lanzamiento de grano m√°s grueso. El plan de lanzamiento suele ser intencionalmente vago sobre el orden espec√≠fico en el que se trabajar√° en las historias de usuario. Adem√°s, en el momento de la planificaci√≥n de la iteraci√≥n, el equipo sabe m√°s que cuando se actualiz√≥ por √∫ltima vez el plan de lanzamiento. La planificaci√≥n de la iteraci√≥n a medida que comienza le permite al equipo hacer uso de su conocimiento reci√©n adquirido. De esta forma, la planificaci√≥n √°gil","service":"user-service"}
{"level":"info","message":"se convierte en un proceso de dos etapas. La primera etapa es el plan de lanzamiento, con sus asperezas e incertidumbres generales. La segunda etapa es el plan de iteraci√≥n. Un plan de iteraci√≥n todav√≠a tiene algunas asperezas y sigue siendo incierto. Sin embargo, debido a que se crea simult√°neamente con el inicio de una nueva iteraci√≥n, un plan de iteraci√≥n es m√°s detallado que un plan de lanzamiento. La creaci√≥n del plan de iteraci√≥n lleva al equipo a discusiones sobre el dise√±o del producto y el dise√±o del software. Las discusiones sobre el dise√±o de productos, por ejemplo, pueden tratar temas como la mejor combinaci√≥n de historias para optimizar el valor, la interpretaci√≥n de los comentarios al mostrar el software en funcionamiento a los clientes o la medida en que se debe implementar una funci√≥n deseada (es decir, el 20 % del total). caracter√≠stica y el esfuerzo entregan el 80% del valor?). Las discusiones sobre el dise√±o de software pueden, por ejemplo, involucrar el nivel de arquitectura apropiado en el que implementar una nueva funci√≥n, qu√© tecnolog√≠as se deben usar, si el c√≥digo existente se puede reutilizar, etc. Como resultado de estas discusiones, el equipo llega a una mejor comprensi√≥n de lo que debe construirse y lo que se construir√°, y tambi√©n crea una lista de las tareas necesarias para lograr su objetivo para la iteraci√≥n.","service":"user-service"}
{"level":"info","message":"En un nivel amplio, hay dos formas de planificar una iteraci√≥n, a las que me refiero como impulsada por la velocidad y impulsada por el compromiso. Diferentes equipos usan diferentes enfoques, y cada uno puede tener √©xito. Adem√°s, los dos enfoques generales se pueden combinar en diversos grados. En esta secci√≥n, consideraremos la planificaci√≥n de iteraciones impulsadas por la velocidad; a continuaci√≥n, nos centraremos en la planificaci√≥n de la iteraci√≥n basada en el compromiso. Los pasos involucrados en la planificaci√≥n de la iteraci√≥n basada en la velocidad se muestran en la figura 14.2. Primero, el equipo ajusta las prioridades en colaboraci√≥n. Es posible que hayan aprendido algo en la iteraci√≥n anterior que altere sus prioridades. A continuaci√≥n, identifican la velocidad objetivo para la siguiente iteraci√≥n. Luego, el equipo selecciona un objetivo de iteraci√≥n, que es una descripci√≥n general de lo que desean lograr durante la siguiente iteraci√≥n. Despu√©s de seleccionar un objetivo de iteraci√≥n, el equipo selecciona","service":"user-service"}
{"level":"info","message":"as historias de usuario de m√°xima prioridad que respaldan ese objetivo. Se seleccionan tantas historias como sea necesario para que la suma de sus estimaciones de d√≠a ideal o punto de historia sea igual a la velocidad objetivo. Finalmente, cada historia seleccionada se divide en tareas y cada tarea se estima. Estos pasos se describen con m√°s detalle en el resto de este cap√≠tulo.","service":"user-service"}
{"level":"info","message":"Ajuste las prioridadesImagine todas las historias de usuarios apiladas f√≠sicamente u ordenadas en una hoja de c√°lculo de modo que la historia m√°s valiosa est√© en la parte superior y la menos valiosa en la parte inferior. El proyecto podr√≠a progresar tomando siempre las historias de la parte superior de esta lista priorizada para comenzar cada iteraci√≥n. Sin embargo, las condiciones del negocio y del proyecto cambian r√°pidamente, por lo que siempre vale la pena reconsiderar r√°pidamente las prioridades. Una fuente de cambios en las prioridades es la reuni√≥n de revisi√≥n de la iteraci√≥n, que se lleva a cabo una vez finalizada una iteraci√≥n. Durante la revisi√≥n de la iteraci√≥n, las nuevas funciones y capacidades que se agregaron durante la iteraci√≥n se demuestran a las partes interesadas, la comunidad del proyecto ampliada y cualquier otra persona interesada. A menudo se reciben valiosos comentarios durante estas revisiones de iteraci√≥n. El propietario del producto, por lo general, no debe presentar nuevas ideas o cambios durante la revisi√≥n de la iteraci√≥n, porque ha estado involucrada diariamente durante la iteraci√≥n. Sin embargo, muchos otros (incluidos los clientes y usuarios potenciales) pueden ver los resultados de la iteraci√≥n por primera vez. A menudo tendr√°n buenas ideas nuevas que podr√≠an adelantarse a elementos que antes eran de alta prioridad. Como se describe en el Cap√≠tulo 9, \"Priorizaci√≥n de temas\", las historias de usuario y los temas se priorizan en funci√≥n de su valor financiero para el producto, su costo, la cantidad y la importancia de lo que el equipo necesita. aprender√°, y la cantidad de riesgo reducido. Idealmente, un equipo deber√≠a esperar hasta despu√©s de la reuni√≥n de revisi√≥n de la iteraci√≥n antes de","service":"user-service"}
{"level":"info","message":"discutiendo las prioridades para la pr√≥xima iteraci√≥n. Despu√©s de todo, lo que escuchan durante la revisi√≥n de la iteraci√≥n puede influir en ellos, y es dif√≠cil priorizar el trabajo de la pr√≥xima iteraci√≥n si no est√° completamente seguro de lo que se completar√° en esta iteraci√≥n. Sin embargo, en muchas organizaciones he encontrado √∫til mantener una reuni√≥n de priorizaci√≥n unos d√≠as antes del inicio de una nueva iteraci√≥n. Hago esto para adaptar la revisi√≥n de iteraci√≥n y las reuniones de planificaci√≥n de iteraci√≥n en el mismo d√≠a con mayor facilidad. Una revisi√≥n de iteraci√≥n suele tardar entre treinta y sesenta minutos. Para un producto grande con m√∫ltiples equipos, es bastante factible que el propietario del producto y otras partes interesadas clave necesarias para las discusiones de priorizaci√≥n puedan pasar medio d√≠a en las revisiones de iteraci√≥n. Agregue otras cuatro horas para planificar una iteraci√≥n y es posible que no haya tiempo para discutir las prioridades el mismo d√≠a. Por lo general, programo la reuni√≥n de priorizaci√≥n para dos d√≠as antes del final de la iteraci√≥n. En ese momento, normalmente est√° claro si habr√° trabajo sin terminar de la iteraci√≥n actual. Esto permite que el propietario del producto decida si terminar ese trabajo ser√° una prioridad para la pr√≥xima iteraci√≥n. El propietario del producto lleva a cabo la reuni√≥n de priorizaci√≥n e involucra a cualquier persona que crea que puede contribuir a una discusi√≥n sobre las prioridades del proyecto. Despu√©s de tener esta reuni√≥n, el propietario del producto generalmente puede ajustar r√°pidamente y sobre la marcha las prioridades en funci√≥n de cualquier cosa que suceda durante la revisi√≥n de la iteraci√≥n. Determinar la velocidad objetivo El siguiente paso en la planificaci√≥n de la iteraci√≥n impulsada por la velocidad es determinar la velocidad objetivo del equipo. La suposici√≥n predeterminada por la mayor√≠a de los equipos es que su velocidad en la siguiente iteraci√≥n ser√° igual a la velocidad de la iteraci√≥n m√°s reciente. Beck y Fowler (2000) llaman a esto el clima de ayer, porque nuestra mejor suposici√≥n del clima de hoy es que ser√° como el clima de ayer. Otros equipos prefieren usar un promedio m√≥vil sobre quiz√°s las √∫ltimas tres iteraciones. Si un equipo no ha trabajado juntos antes o es nuevo en su proceso √°gil, tendr√°n que pronosticar la velocidad. Las t√©cnicas para hacerlo se describen en el Cap√≠tulo 16, ‚ÄúEstimaci√≥n de la velocidad‚Äù. Identificar un objetivo de iteraci√≥n Con sus prioridades y la velocidad objetivo en mente, el equipo identifica un objetivo que les gustar√≠a lograr durante la iteraci√≥n. La meta describe sucintamente lo que les gustar√≠a lograr durante ese per√≠odo. Como ejemplo, SwimStatsteam puede seleccionar \"Todas las caracter√≠sticas demogr√°ficas est√°n terminadas\" como objetivo de iteraci√≥n. Otros objetivos de iteraci√≥n de ejemplo para SwimStats podr√≠an incluir lo siguiente:","service":"user-service"}
{"level":"info","message":"‚óÜ Avanzar en los informes. ‚óÜ Terminar todos los informes de tiempo de eventos. ‚óÜ Hacer que la seguridad funcione. El objetivo de la iteraci√≥n es una declaraci√≥n unificadora sobre lo que se lograr√° durante la iteraci√≥n. No tiene que ser muy espec√≠fico. Por ejemplo, \"Avanzar en los informes\" es un buen objetivo de iteraci√≥n. No tiene que ser m√°s espec√≠fico, como en \"Finalizar 15 informes\" o \"Hacer los informes de resultados de la competencia\". Si \"Avanzar en los informes\" es la mejor descripci√≥n de lo que se trabajar√° en la pr√≥xima iteraci√≥n, es una buena declaraci√≥n de ese objetivo. Seleccionar historias de usuario A continuaci√≥n, el propietario del producto y el equipo seleccionan las historias que se combinan para alcanzar el objetivo de la iteraci√≥n. Si el equipo de SwimStats seleccion√≥ un objetivo de iteraci√≥n de \"Todas las caracter√≠sticas demogr√°ficas est√°n terminadas\", trabajar√≠an en cualquier historia relacionada con la demograf√≠a que a√∫n no estuviera terminada. Esto podr√≠a incluir‚óÜ Como nadador, puedo actualizar mis datos demogr√°ficos.‚óÜ Como entrenador, puedo ingresar datos demogr√°ficos de cada uno de mis nadadores.‚óÜ Como entrenador, puedo importar un archivo de todos los datos demogr√°ficos.‚óÜ Como entrenador, Puedo exportar un archivo de todos los datos demogr√°ficos. Al seleccionar las historias en las que trabajar, el propietario del producto y el equipo consideran la prioridad de cada historia. Por ejemplo, si exportar un archivo de datos demogr√°ficos est√° casi al final de la lista de requisitos prioritarios para el producto, es posible que no se incluya en la iteraci√≥n. En ese caso, el objetivo de la iteraci√≥n podr√≠a haberse expresado mejor como \"Las caracter√≠sticas demogr√°ficas m√°s importantes est√°n terminadas\". Dividir las historias de usuario en tareas Una vez que se ha seleccionado el conjunto apropiado de historias de usuario, cada una se descompone en el conjunto de tareas necesarias para entregar la nueva funcionalidad. . Supongamos que la historia de usuario de mayor prioridad es \"Como entrenador, puedo asignar nadadores a eventos para una pr√≥xima competencia\". Esta historia de usuario se convertir√° en una lista de tareas, como: ‚óÜ Determinar las reglas que afectan a qui√©n se puede asignar a qu√© eventos. ‚óÜ Escribir casos de prueba de aceptaci√≥n que muestren c√≥mo deber√≠a funcionar esto. ‚óÜ Dise√±ar la interfaz de usuario.","service":"user-service"}
{"level":"info","message":"Obtenga retroalimentaci√≥n de la interfaz de usuario de los entrenadores.‚óÜ Codifique la interfaz de usuario.‚óÜ Codifique el nivel medio.‚óÜ Agregue nuevas tablas a la base de datos.‚óÜ Automatice las pruebas de aceptaci√≥n. Una pregunta com√∫n sobre la planificaci√≥n de la iteraci√≥n es qu√© se debe incluir. Se debe identificar una historia de usuario para un producto terminado y en funcionamiento. Si hay an√°lisis, dise√±o, dise√±o de interacci√≥n con el usuario u otras tareas necesarias, deben identificarse y estimarse. Debido a que el objetivo de cada iteraci√≥n es producir un producto potencialmente entregable, aseg√∫rese de incluir tareas para probar y documentar el producto. Incluir tareas de prueba es importante porque el equipo necesita pensar bien al comienzo de la iteraci√≥n sobre c√≥mo se probar√° una historia de usuario. Esto ayuda a involucrar a los evaluadores desde el comienzo de la iteraci√≥n, lo que mejora el comportamiento multifuncional del equipo. Incluya solo el trabajo que agrega valor a este proyecto El plan de iteraci√≥n debe identificar solo aquellas tareas que agregan valor inmediato al proyecto actual. Obviamente, eso incluye tareas que pueden considerarse an√°lisis, dise√±o, codificaci√≥n, pruebas, dise√±o de interfaz de usuario, etc. No incluya la hora de la ma√±ana cuando responda el correo electr√≥nico. S√≠, algunos de esos mensajes de correo electr√≥nico est√°n relacionados con el proyecto, pero tareas como \"responder correo electr√≥nico, 1 hora\" no deben incluirse en un plan de iteraci√≥n. De manera similar, suponga que necesita reunirse con el director de personal de la empresa sobre un nuevo proceso de revisi√≥n anual. Eso no deber√≠a incluirse en el plan de iteraci√≥n. Aunque los miembros del equipo del proyecto ser√°n revisados ‚Äã‚Äãusando el nuevo proceso, la reuni√≥n para discutirlo (y cualquier trabajo de seguimiento que necesite hacer) no est√° directamente relacionada con el desarrollo del producto. Por lo tanto, ninguna tarea asociada con √©l se convierte en parte del plan de iteraci√≥n. Sea espec√≠fico hasta que sea un h√°bito Los nuevos equipos √°giles a menudo no est√°n familiarizados o no son expertos en escribir pruebas unitarias automatizadas. Sin embargo, esta es una habilidad que trabajan para cultivar durante las primeras iteraciones. Durante ese per√≠odo, animo a los programadores a identificar y estimar expl√≠citamente las tareas de pruebas unitarias. Un programador puede, por ejemplo, identificar que la codificaci√≥n de una nueva funci√≥n llevar√° ocho horas y que escribir sus pruebas unitarias llevar√° cinco horas. M√°s tarde, una vez que las pruebas unitarias se hayan convertido en un h√°bito para los programadores, el programador escribir√≠a solo una tarjeta diciendo codificar la nueva funci√≥n y","service":"user-service"}
{"level":"info","message":"le dar√≠a una estimaci√≥n que incluyera el tiempo para automatizar las pruebas unitarias. Una vez que algo como las pruebas unitarias se convierte en un h√°bito, se puede incluir dentro de otra tarea. Hasta entonces, sin embargo, hacerlo expl√≠cito ayuda a mantener un alto conocimiento de la tarea. Las reuniones cuentan (mucho) Debe identificar, estimar e incluir tareas para las reuniones relacionadas con el proyecto. Al estimar la reuni√≥n, aseg√∫rese de incluir el tiempo de todos los participantes, as√≠ como el tiempo dedicado a la preparaci√≥n de la reuni√≥n. Suponga que el equipo programa una reuni√≥n para analizar los comentarios de los usuarios. Los siete miembros del equipo planean asistir a la reuni√≥n de una hora y el analista planea pasar dos horas prepar√°ndose para la reuni√≥n. El tiempo estimado para esta tarea es de nueve horas. Por lo general, ingreso esto en el plan de iteraci√≥n como una sola tarea de nueve horas, en lugar de una tarea separada para cada miembro del equipo. Errores Un equipo √°gil tiene el objetivo de corregir todos los errores en la iteraci√≥n en la que se descubren. Se vuelven capaces de lograr esto a medida que se vuelven m√°s competentes en el trabajo en iteraciones cortas, especialmente al confiar en pruebas automatizadas. Cuando un programador da una estimaci√≥n para codificar algo, esa estimaci√≥n incluye tiempo para corregir cualquier error encontrado en la implementaci√≥n o una tarea separada. (\"Corregir errores\") se identifica y estima. Prefiero identificar una sola tarea, pero no considerarla completa hasta que pasen todas las pruebas. Un defecto encontrado m√°s tarde (o no corregido durante la iteraci√≥n en la que se descubri√≥) se trata de la misma manera que una historia de usuario. La correcci√≥n del defecto deber√° priorizarse en una iteraci√≥n posterior de la misma manera que cualquier otra historia de usuario. Fuera de una iteraci√≥n, toda la idea de un defecto comienza a desaparecer. Arreglar un error y agregar una funci√≥n se convierten en dos formas de describir lo mismo. Manejo de dependencias A menudo, el desarrollo de una historia de usuario depender√° de la implementaci√≥n previa de otra. En la mayor√≠a de los casos, estas dependencias no son un problema importante. Por lo general, hay lo que considero un orden natural para implementar las historias de usuario, es decir, hay una secuencia que tiene sentido tanto para los desarrolladores como para el propietario del producto. No es un problema cuando hay dependencias entre las historias que conducen a desarrollarlas en su orden natural. . El orden natural suele ser el orden que asumi√≥ el equipo cuando estim√≥ las historias. Por ejemplo, SwimStatsteam probablemente asumir√≠a que se pueden agregar nadadores al sistema antes de que se puedan eliminar. Cuando las historias se trabajan en una secuencia distinta a la","service":"user-service"}
