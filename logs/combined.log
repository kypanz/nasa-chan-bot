{"level":"info","message":"Playing music Cyberpunk 2077 Radio Mix 6 by NightmareOwl (Electro/Cyberpunk)","service":"user-service"}
{"level":"info","message":"Playing music Cyberpunk 2077 Radio 24/7 by NightmareOwl (Cyberpunk Music/Midtempo/Electro)","service":"user-service"}
{"level":"info","message":"Playing music Cyberpunk 2077 Radio 24/7 by NightmareOwl (Cyberpunk Music/Midtempo/Electro)","service":"user-service"}
{"code":"ECONNRESET","level":"error","service":"user-service"}
{"level":"info","message":"Playing music Cyberpunk 2077 Radio 24/7 by NightmareOwl (Cyberpunk Music/Midtempo/Electro)","service":"user-service"}
{"level":"info","message":"Playing music Snoop Dogg, Eminem, Dr. Dre - Back In The Game ft. DMX, Eve, Jadakiss, Ice Cube, Method Man, The Lox","service":"user-service"}
{"code":"ECONNRESET","level":"error","service":"user-service"}
{"level":"info","message":"Playing music Los Bunkers Greatest Hits 2021 || Best Songs Los Bunkers full Album 2021","service":"user-service"}
{"level":"info","message":"Playing music Los Bunkers Greatest Hits 2021 || Best Songs Los Bunkers full Album 2021","service":"user-service"}
{"level":"info","message":"Playing music Cyberpunk 2077 - Best Electro & Techno Mix","service":"user-service"}
{"level":"info","message":"Playing music Cyberpunk - Music to rip and tear through Cyberpsychosis (Soundtrack Music Mix)","service":"user-service"}
{"level":"info","message":"Playing music Music For Work ‚Äî Night Productive Mix","service":"user-service"}
{"level":"info","message":"Playing music Music For Work ‚Äî Night Productive Mix","service":"user-service"}
{"level":"info","message":"Playing music Music For Work ‚Äî Night Productive Mix","service":"user-service"}
{"level":"info","message":"Playing music Cyberpunk: Edgerunners | ‚ÄúI Really Want to Stay At Your House‚Äù by Rosa Walton | Music Video","service":"user-service"}
{"level":"info","message":"Playing music 19990115","service":"user-service"}
{"level":"info","message":"Playing music Space Wonderer (Chillwave / Retrowave / Synthwave  Mix)","service":"user-service"}
{"level":"info","message":"Playing music Nazuna Nanakusa Phonk Music for your fake scenarios \ud83d\udd25 Best Aggressive Drift/House/Walk Phonk ‚Äª –§–æ–Ω–∫","service":"user-service"}
{"level":"info","message":"Playing music [Ïô∏Ìûô] Î™©Í±∏Ïù¥Îäî Î¨¥Í≤ÅÍ≤å, Î∞©ÏïÑÏá†Îäî Í∞ÄÎ≥çÍ≤å","service":"user-service"}
{"code":50006,"level":"error","method":"POST","rawError":{"code":50006,"message":"Cannot send an empty message"},"requestBody":{"files":[],"json":{"data":{"content":"","tts":false},"type":4}},"service":"user-service","status":400,"url":"https://discord.com/api/v10/interactions/1079330435861073963/aW50ZXJhY3Rpb246MTA3OTMzMDQzNTg2MTA3Mzk2MzpmYWs4bVgwa2ZlbkdHMmNnT2NvU0M4dWh0WkJWc01ZWlMySFFOMGQ3Q2FiUE4ycTBwUGJiRzEwSUFXVjRXdkgwTUR6cVlmTVREaEVGT0lUeUlqTEFIQTJQUWd0b1kyRkFoYWI4MzdSRWZ4STE3VGhndWZZNkJEbzhZTGxiSURteA/callback"}
{"level":"info","message":"testeando uno dos tres","service":"user-service"}
{"level":"info","message":"hola hola uno dos tres","service":"user-service"}
{"level":"info","message":"hola hola uno dos tres","service":"user-service"}
{"level":"info","message":"listo ahora el botsito tiene tts activado, no es la mejor voz pero funciona y es mejor que la de la otra guea xd","service":"user-service"}
{"level":"info","message":"voy a leer un par de cosas para testear, La votaci√≥n final sobre el tan esperado conjunto de normas sobre criptomonedas de la Uni√≥n Europea, conocido como el Reglamento sobre Mercados de Criptoactivos (MiCA, por sus siglas en ingl√©s), recientemente se aplaz√≥ hasta abril de 2023. No fue el primer retraso: anteriormente, los legisladores europeos reprogramaron el procedimiento de noviembre de 2022 a febrero de 2023.","service":"user-service"}
{"level":"info","message":"soy un puto crack, la semana que viene le voy a configurar un par de cosas para que tome el texto directamente del canal sin encesidad de ponerle el comando","service":"user-service"}
{"level":"error","service":"user-service"}
{"level":"error","service":"user-service"}
{"level":"info","message":"\"Active Processor Cores\" en la BIOS se refiere al n√∫mero de n√∫cleos del procesador que est√°n habilitados y disponibles para su uso por el sistema operativo y las aplicaciones en ejecuci√≥n. Algunas placas base permiten que se desactiven n√∫cleos de procesador espec√≠ficos en la configuraci√≥n de la BIOS, lo que puede ser √∫til para el diagn√≥stico de problemas o para mejorar la estabilidad del sistema.","service":"user-service"}
{"level":"info","message":"\"Active Processor Cores\" en la BIOS se refiere al n√∫mero de n√∫cleos del procesador que est√°n habilitados y disponibles para su uso por el sistema operativo y las aplicaciones en ejecuci√≥n. Algunas placas base permiten que se desactiven n√∫cleos de procesador espec√≠ficos en la configuraci√≥n de la BIOS, lo que puede ser √∫til para el diagn√≥stico de problemas o para mejorar la estabilidad del sistema.","service":"user-service"}
{"level":"info","message":"Ahora si, uno dos tres","service":"user-service"}
{"level":"info","message":"√Årbol transversal Un recorrido de alg√∫n √°rbol binario, es un algoritmo que itera a trav√©s de cada nodo en el tiempo exacto.  Recorrido en orden Un recorrido en orden del √°rbol es un algoritmo recursivo que sigue el sub√°rbol izquierdo; una vez que no quedan m√°s sub√°rboles para procesar, procesamos el sub√°rbol derecho. Los elementos se procesan en orden izquierda-ra√≠z-derecha. El algoritmo b√°sico es el siguiente:","service":"user-service"}
{"level":"info","message":"√Årbol transversal Un recorrido de alg√∫n √°rbol binario, es un algoritmo que itera a trav√©s de cada nodo en el tiempo exacto.  Recorrido en orden Un recorrido en orden del √°rbol es un algoritmo recursivo que sigue el sub√°rbol izquierdo; una vez que no quedan m√°s sub√°rboles para procesar, procesamos el sub√°rbol derecho. Los elementos se procesan en orden izquierda-ra√≠z-derecha. El algoritmo b√°sico es el siguiente:","service":"user-service"}
{"level":"info","message":"hol hola","service":"user-service"}
{"level":"info","message":"holaaa","service":"user-service"}
{"level":"info","message":"hola","service":"user-service"}
{"level":"info","message":"testeando la salida de voz","service":"user-service"}
{"level":"info","message":"Playing music Cyberpunk 2077 Radio 24/7 by NightmareOwl (Cyberpunk Music/Midtempo/Electro)","service":"user-service"}
{"level":"info","message":"Playing music Cyberpunk 2077 Radio 24/7 by NightmareOwl (Cyberpunk Music/Midtempo/Electro)","service":"user-service"}
{"level":"info","message":"Playing music Cyberpunk 2077 Radio 24/7 by NightmareOwl (Cyberpunk Music/Midtempo/Electro)","service":"user-service"}
{"level":"info","message":"Playing music Cyberpunk 2077 Radio 24/7 by NightmareOwl (Cyberpunk Music/Midtempo/Electro)","service":"user-service"}
{"code":"ECONNRESET","level":"error","service":"user-service"}
{"level":"info","message":"Playing music Cyberpunk 2077 Radio 24/7 by NightmareOwl (Cyberpunk Music/Midtempo/Electro)","service":"user-service"}
{"level":"info","message":"Playing music Slowed Sad Songs  | (\ud835\ude68\ud835\ude61\ud835\ude64\ud835\ude6c\ud835\ude5a\ud835\ude59 + \ud835\ude67\ud835\ude5a\ud835\ude6b\ud835\ude5a\ud835\ude67\ud835\ude57) songs playlist | sad songs for broken hearts","service":"user-service"}
{"code":"ECONNRESET","level":"error","service":"user-service"}
{"level":"info","message":"Playing music Slowed Sad Songs  | (\ud835\ude68\ud835\ude61\ud835\ude64\ud835\ude6c\ud835\ude5a\ud835\ude59 + \ud835\ude67\ud835\ude5a\ud835\ude6b\ud835\ude5a\ud835\ude67\ud835\ude57) songs playlist | sad songs for broken hearts","service":"user-service"}
{"level":"info","message":"Playing music Phonk music thats hit harder than bullets üí• Best Aggressive Drift/House Phonk ‚Äª –§–æ–Ω–∫","service":"user-service"}
{"level":"info","message":"que pasa pa","service":"user-service"}
{"level":"info","message":"whats goin on","service":"user-service"}
{"level":"info","message":"que andan haciendo","service":"user-service"}
{"level":"info","message":"dile al alparkom que desmute al bot","service":"user-service"}
{"level":"info","message":"Playing music Áú†„Çå„Å™„ÅÑÊôÇ„ÄÅËêΩ„Å°ÁùÄ„Åç„Åü„ÅÑÊôÇ„Å´ËÅ¥„ÅèÊõ≤„ÄÇcover„É°„Éâ„É¨„Éº","service":"user-service"}
{"level":"info","message":"Playing music Áú†„Çå„Å™„ÅÑÊôÇ„ÄÅËêΩ„Å°ÁùÄ„Åç„Åü„ÅÑÊôÇ„Å´ËÅ¥„ÅèÊõ≤„ÄÇcover„É°„Éâ„É¨„Éº","service":"user-service"}
{"level":"info","message":"Playing music –ü–ï–°–ù–ò –û–¢ –ö–û–¢–û–†–´–• –ù–ê–•–õ–´–ù–£–¢ –í–û–°–ü–û–ú–ò–ù–ê–ù–ò–Ø | –ü–µ—Å–Ω–∏ –ù–∞—à–µ–π –Æ–Ω–æ—Å—Ç–∏  | –ü–æ–¥—Ä–æ—Å—Ç–∫–æ–≤—ã–µ –ü–µ—Å–Ω–∏ | –ü–µ—Å–Ω–∏ –Ω–∞ –≤–µ—á–µ—Ä","service":"user-service"}
{"code":10062,"level":"error","method":"POST","rawError":{"code":10062,"message":"Unknown interaction"},"requestBody":{"files":[],"json":{"data":{"content":"works fine, playing music !","tts":false},"type":4}},"service":"user-service","status":404,"url":"https://discord.com/api/v10/interactions/1090808502525624382/aW50ZXJhY3Rpb246MTA5MDgwODUwMjUyNTYyNDM4MjpmWGJNTVI2VUxZZ0Nxc2xqVzBYUWFldXB1Mzg3YkJFYXJHUVU4MWNoTXU0THJlVHRxN0p0T2dEV0l0c0lHSlh2YncxaVF2bGxQbGtOc0NUaWd5c2NHR1EwZ2ZWNkFTT2p3QzFPMHpFcG9YWktSc2tKNUF3clNZU0RMT0lqZEkzMg/callback"}
{"level":"info","message":"Playing music –ü–ï–°–ù–ò –û–¢ –ö–û–¢–û–†–´–• –ù–ê–•–õ–´–ù–£–¢ –í–û–°–ü–û–ú–ò–ù–ê–ù–ò–Ø | –ü–µ—Å–Ω–∏ –ù–∞—à–µ–π –Æ–Ω–æ—Å—Ç–∏  | –ü–æ–¥—Ä–æ—Å—Ç–∫–æ–≤—ã–µ –ü–µ—Å–Ω–∏ | –ü–µ—Å–Ω–∏ –Ω–∞ –≤–µ—á–µ—Ä","service":"user-service"}
{"level":"info","message":"Playing music –ø–ª–µ–π–ª–∏—Å—Ç –¥–ª—è —Ç—É—Å–æ–≤–æ–∫","service":"user-service"}
{"level":"info","message":"Playing music –ø–ª–µ–π–ª–∏—Å—Ç –¥–ª—è —Ç—É—Å–æ–≤–æ–∫","service":"user-service"}
{"level":"info","message":"Playing music –ø–ª–µ–π–ª–∏—Å—Ç –¥–ª—è —Ç—É—Å–æ–≤–æ–∫","service":"user-service"}
{"level":"info","message":"Playing music LOUIEJAYXX - EDGE","service":"user-service"}
{"level":"info","message":"Playing music LOUIEJAYXX - EDGE","service":"user-service"}
{"level":"info","message":"testing","service":"user-service"}
{"code":10062,"level":"error","method":"POST","rawError":{"code":10062,"message":"Unknown interaction"},"requestBody":{"files":[],"json":{"data":{"content":"asdasd","tts":false},"type":4}},"service":"user-service","status":404,"url":"https://discord.com/api/v10/interactions/1090813978466328586/aW50ZXJhY3Rpb246MTA5MDgxMzk3ODQ2NjMyODU4NjpRajJkTjZEZk5BNnQzcUNMbnVIcXhYRGN5bE1MUlNveE13S25wV3BRSlc5N1Y4UDBJNVR0Z0h5aWp2WVBCS3lmdnZEV3NhREdLMms1TVFSWmsycFlVbkVqV2JPbmp6SjhmUlZhMFlkUUw1ODRiRENzVlB5OWJENVhxdzRBQ0tnVA/callback"}
{"level":"info","message":"testinggg","service":"user-service"}
{"level":"info","message":"Playing music LOUIEJAYXX - EDGE","service":"user-service"}
{"level":"info","message":"Playing music LOUIEJAYXX - EDGE","service":"user-service"}
{"level":"info","message":"testing","service":"user-service"}
{"level":"info","message":"Playing music LOUIEJAYXX - EDGE","service":"user-service"}
{"level":"info","message":"Playing music LOUIEJAYXX - EDGE","service":"user-service"}
{"level":"info","message":"Playing music LOUIEJAYXX - EDGE","service":"user-service"}
{"level":"info","message":"Playing music LOUIEJAYXX - EDGE","service":"user-service"}
{"level":"info","message":"Playing music LOUIEJAYXX - EDGE","service":"user-service"}
{"level":"info","message":"Playing music LOUIEJAYXX - EDGE","service":"user-service"}
{"level":"info","message":"Playing music LOUIEJAYXX - EDGE","service":"user-service"}
{"level":"info","message":"Playing music LOUIEJAYXX - EDGE","service":"user-service"}
{"level":"info","message":"Playing music LOUIEJAYXX - EDGE","service":"user-service"}
{"level":"info","message":"aaaaaa testing","service":"user-service"}
{"level":"info","message":"Playing music –ú—É–∑—ã–∫–∞. –ì—Ä—É—Å—Ç–Ω–∞—è –º—É–∑—ã–∫–∞.","service":"user-service"}
{"level":"info","message":"Playing music –ú—É–∑—ã–∫–∞. –ì—Ä—É—Å—Ç–Ω–∞—è –º—É–∑—ã–∫–∞.","service":"user-service"}
{"level":"info","message":"Playing music –ú—É–∑—ã–∫–∞. –ì—Ä—É—Å—Ç–Ω–∞—è –º—É–∑—ã–∫–∞.","service":"user-service"}
{"level":"info","message":"Playing music –ú—É–∑—ã–∫–∞. –ì—Ä—É—Å—Ç–Ω–∞—è –º—É–∑—ã–∫–∞.","service":"user-service"}
{"level":"info","message":"Playing music \"Sadness helps me understand myself\" - a playlist","service":"user-service"}
{"level":"info","message":null,"service":"user-service"}
{"level":"info","message":"testing","service":"user-service"}
{"level":"info","message":"hacking","service":"user-service"}
{"level":"info","message":"hacking","service":"user-service"}
{"code":"InteractionAlreadyReplied","level":"error","service":"user-service"}
{"code":"InteractionAlreadyReplied","level":"error","service":"user-service"}
{"code":"InteractionAlreadyReplied","level":"error","service":"user-service"}
{"level":"info","message":"hacking","service":"user-service"}
{"level":"info","message":"hacking","service":"user-service"}
{"level":"info","message":"hacking","service":"user-service"}
{"errors":[["iconURL",{"errors":[{"given":"null","name":"Error","validator":"s.nullish"},{"constraint":"s.string.url","expected":"expected to match a URL","given":"null","name":"Error"}]}]],"level":"error","service":"user-service"}
{"level":"error","service":"user-service"}
{"errors":[{"given":"null","name":"Error","validator":"s.nullish"},{"constraint":"s.string.url","expected":"expected to match a URL","given":"null","name":"Error"}],"level":"error","service":"user-service"}
{"errors":[{"given":"null","name":"Error","validator":"s.nullish"},{"constraint":"s.string.url","expected":"expected to match a URL","given":"null","name":"Error"}],"level":"error","service":"user-service"}
{"errors":[{"given":"null","name":"Error","validator":"s.nullish"},{"constraint":"s.string.url","expected":"expected to match a URL","given":"null","name":"Error"}],"level":"error","service":"user-service"}
{"errors":[{"given":"null","name":"Error","validator":"s.nullish"},{"constraint":"s.string.url","expected":"expected to match a URL","given":"null","name":"Error"}],"level":"error","service":"user-service"}
{"errors":[{"given":"null","name":"Error","validator":"s.nullish"},{"constraint":"s.string.url","expected":"expected to match a URL","given":"null","name":"Error"}],"level":"error","service":"user-service"}
{"errors":[{"given":"null","name":"Error","validator":"s.nullish"},{"constraint":"s.string.url","expected":"expected to match a URL","given":"null","name":"Error"}],"level":"error","service":"user-service"}
{"code":10062,"level":"error","method":"POST","rawError":{"code":10062,"message":"Unknown interaction"},"requestBody":{"files":[],"json":{"data":{"content":"hacking","tts":false},"type":4}},"service":"user-service","status":404,"url":"https://discord.com/api/v10/interactions/1107101809027334254/aW50ZXJhY3Rpb246MTEwNzEwMTgwOTAyNzMzNDI1NDpMc2hBS1FBa2JEMjdzRkNkTFlWQThMVk85S1lpZTdZT0p3ckZQbTZUeVkxcDVGZU5XRnlxUjkyWm9aSzl0ZlJ3Y2xaS1JnQUNIYU9nUVRBUVRlbFdEQ2pZUXBLU01raUt3QXNWUkV3YW9weldRakFwZ3QyYXlKREF4SWJudWhCZQ/callback"}
{"level":"info","message":"bitcoin","service":"user-service"}
{"level":"info","message":"tesla","service":"user-service"}
{"code":10062,"level":"error","method":"POST","rawError":{"code":10062,"message":"Unknown interaction"},"requestBody":{"files":[],"json":{"data":{"content":"bitcoin","tts":false},"type":4}},"service":"user-service","status":404,"url":"https://discord.com/api/v10/interactions/1107103120967872552/aW50ZXJhY3Rpb246MTEwNzEwMzEyMDk2Nzg3MjU1MjpSWFlaRUdpSDBVejRUcXNOdzJkNVkySld1bk8xN3NkYzR5VGpTM1R3M0FRcDF5b3BQeElPMndqOUNMVFA5ZlQ5YzhKUmRETk80Ujl3WEExYkxpdEFjWVpic1NYYjdPUHY4NHZPdm53blB1bEJmVmRpdDdsVkk3ZnNBdnpJVnBDSw/callback"}
{"code":10062,"level":"error","method":"POST","rawError":{"code":10062,"message":"Unknown interaction"},"requestBody":{"files":[],"json":{"data":{"content":"tesla","tts":false},"type":4}},"service":"user-service","status":404,"url":"https://discord.com/api/v10/interactions/1107104430832234507/aW50ZXJhY3Rpb246MTEwNzEwNDQzMDgzMjIzNDUwNzpEMjU1Sjl6NzU1cmhkZUFOY29SN1d6RW5OaFlnM1BpcTg3WDQ1RTZ5eGF2ZjgwdW91dW9takl0dUtOZGVPelJiMFRVTFR3TVAyUWdiQVBqUnpGTktNRkR5dEhDYU1pbkIzWjJyR2w0WXNtRFhPQlAyaUFISktKSnhjMGNXRE9zSg/callback"}
{"errors":[{"given":"null","name":"Error","validator":"s.nullish"},{"constraint":"s.string.url","expected":"expected to match a URL","given":"null","name":"Error"}],"level":"error","service":"user-service"}
{"errors":[{"given":"null","name":"Error","validator":"s.nullish"},{"constraint":"s.string.url","expected":"expected to match a URL","given":"null","name":"Error"}],"level":"error","service":"user-service"}
{"errors":[{"given":"null","name":"Error","validator":"s.nullish"},{"constraint":"s.string.url","expected":"expected to match a URL","given":"null","name":"Error"}],"level":"error","service":"user-service"}
{"code":10062,"level":"error","method":"POST","rawError":{"code":10062,"message":"Unknown interaction"},"requestBody":{"files":[],"json":{"data":{"content":"cars","tts":false},"type":4}},"service":"user-service","status":404,"url":"https://discord.com/api/v10/interactions/1107105944866934824/aW50ZXJhY3Rpb246MTEwNzEwNTk0NDg2NjkzNDgyNDo0WW92bldaQXpoWFJlUkdBZFlXYW9pb1lWZ3Nja3RyM3ozWTdmT0duTW8zRGRFQkJFSFo3Tk1sVm04UWY5cWRCY3RWNEx4Rk5mbmpDQkc4VG5NM0dGMU9CaHVxT3JlUXBHRTUxdGxaUTNwaE5zRjJzemRZRWJScHhpZmRXZGZmdg/callback"}
{"code":10062,"level":"error","method":"POST","rawError":{"code":10062,"message":"Unknown interaction"},"requestBody":{"files":[],"json":{"data":{"content":"nasa","tts":false},"type":4}},"service":"user-service","status":404,"url":"https://discord.com/api/v10/interactions/1107106644845920327/aW50ZXJhY3Rpb246MTEwNzEwNjY0NDg0NTkyMDMyNzpjUE94SEZQM2VvblQxMUdOWGpqQmJLalVQbGRnd2xLQVNYRHdEMENhaGhDWk5TSWdPdHJDYmdYUXpLM09mZjBOSHFWZG4xclFHVUt2UlY4WDMzWDFoVlJjejg4UkI3aDhmaHRrR1hUVkxUZUs1NWpZbURqZlBlUXBsbkd5UUlIWg/callback"}
{"level":"info","message":"algoritms","results":[{"author":"Stack Overflow","content":"I have a Simple algorithm for testing that takes 2 numbers as an input and returns the sum as an output.\r\nI usually just write the algorithm in the view but i want to try an execute the algorithm as ‚Ä¶ [+833 chars]","description":"I have a Simple algorithm for testing that takes 2 numbers as an input and returns the sum as an output.\nI usually just write the algorithm in the view but i want to try an execute the algorithm as a task using ThreadPoolExecutor.\nMy example:\nfrom concurrent.‚Ä¶","publishedAt":"2023-05-01T06:24:15Z","source":{"id":null,"name":"Stackoverflow.com"},"title":"How to run tasks in django?","url":"https://stackoverflow.com/questions/76144945/how-to-run-tasks-in-django","urlToImage":"https://cdn.sstatic.net/Sites/stackoverflow/Img/apple-touch-icon@2.png?v=73d79a89bded"}],"service":"user-service"}
{"errors":[{"given":"?w=1200&strip=all","name":"Error","validator":"s.nullish"},{"constraint":"s.string.url","expected":"expected to match a URL","given":"?w=1200&strip=all","name":"Error"}],"level":"error","service":"user-service"}
{"code":10062,"level":"error","method":"POST","rawError":{"code":10062,"message":"Unknown interaction"},"requestBody":{"files":[],"json":{"data":{"content":"games","tts":false},"type":4}},"service":"user-service","status":404,"url":"https://discord.com/api/v10/interactions/1107110347179048990/aW50ZXJhY3Rpb246MTEwNzExMDM0NzE3OTA0ODk5MDpLcWM4anhBcVhXVkp0VnVVRnZWbG1Rd0JWd1hkQjg1T0NjekZkejY4NWJYaGFPdjYwZzRvY2NYZUJQZTVxRGdMeW4walpkVFNodEJiSElXV2F4dTFRWk1XVGNaMkVNYmluR2RXTnA4elZsSGNCQWxtcE9CZGRjaTJEZFREejdCbQ/callback"}
{"level":"info","message":"Playing music 2 HOURS Dark Cyberpunk / EBM / Industrial Bass Mix 'SYNTHETICA'","service":"user-service"}
{"level":"info","service":"user-service"}
{"level":"info","service":"user-service"}
{"level":"info","service":"user-service"}
{"level":"info","service":"user-service"}
{"level":"info","service":"user-service"}
{"code":10062,"level":"error","method":"POST","rawError":{"code":10062,"message":"Unknown interaction"},"requestBody":{"files":[],"json":{"data":{"content":"hacking","tts":false},"type":4}},"service":"user-service","status":404,"url":"https://discord.com/api/v10/interactions/1111168538925867038/aW50ZXJhY3Rpb246MTExMTE2ODUzODkyNTg2NzAzODo2V0FUeDJEOFhKNW9RcUM2a2ZNdFFCMFZFazUxR3JxemY2M0RydktmeEJXZHZYSjF5WDV6UXY2eWVPZGtoZzBMMUQyRnF6azNXNmo5ZWRiSTlXZXJJT0h6R1NSMDlhdHNNbnNRN1BSMk1wV2N2UXdwVjBVVEpYVnUwWEhUOUlGVw/callback"}
{"level":"info","message":"LAS PANDILLAS DE RANSOMWARE TIENEN durante mucho tiempo buscaron puntos de dolor donde sus demandas de extorsi√≥n tienen la mayor influencia. Ahora, una investigaci√≥n de NBC News ha dejado en claro c√≥mo se ve ese modelo de negocio despiadado cuando se dirige a los ni√±os: la fuga gigante de archivos confidenciales del grupo Minneapolis del sistema escolar de Minneapolis expone a miles de ni√±os en su punto m√°s vulnerable, completo con informes conductuales y psicol√≥gicos sobre estudiantes individuales y documentaci√≥n altamente sensible de casos en los que supuestamente han sido abusados por maestros y personal.  Llegaremos a eso. Pero primero, el colaborador de WIRED, Kim Zetter, dio la noticia esta semana de que los piratas inform√°ticos rusos que llevaron a cabo la famosa operaci√≥n de espionaje de SolarWinds fueron detectado en la red del Departamento de Justicia de los Estados Unidos seis meses antes de lo informado anteriormente‚Äî pero el Departamento de Justicia no se dio cuenta de la escala completa de la campa√±a de pirater√≠a que luego se revelar√≠a.   Mientras tanto, la reportera de WIRED, Lily Hay Newman, estuvo en la conferencia de ciberseguridad de RSA en San Francisco, donde nos trajo historias de c√≥mo los investigadores de seguridad interrumpi√≥ a los operadores del malware Gootloader que vendi√≥ el acceso a las redes de v√≠ctimas a grupos de ransomware y otros ciberdelincuentes, y c√≥mo Google Cloud se asoci√≥ con Intel para buscar y reparar vulnerabilidades de seguridad serias que subyacen a servidores cr√≠ticos en la nube. Tambi√©n captur√≥ una advertencia en una charla del director de ciberseguridad de la NSA, Rob Joyce, quien le dijo a la industria de la ciberseguridad que \"se agachara\" y prep√°rese para que surjan grandes cambios de herramientas de IA como ChatGPT, que sin duda ser√° manejado tanto por atacantes como por defensores por igual.","service":"user-service"}
{"level":"info","message":"pero el Departamento de Justicia no se dio cuenta de la escala completa de la campa√±a de pirater√≠a que luego se revelar√≠a.   Mientras tanto, la reportera de WIRED, Lily Hay Newman, estuvo en la conferencia de ciberseguridad de RSA en San Francisco, donde nos trajo historias de c√≥mo los investigadores de seguridad interrumpi√≥ a los operadores del malware Gootloader que vendi√≥ el acceso a las redes de v√≠ctimas a grupos de ransomware y otros ciberdelincuentes, y c√≥mo Google Cloud se asoci√≥ con Intel para buscar y reparar vulnerabilidades de seguridad serias que subyacen a servidores cr√≠ticos en la nube. Tambi√©n captur√≥ una advertencia en una charla del director de ciberseguridad de la NSA, Rob Joyce, quien le dijo a la industria de la ciberseguridad que \"se agachara\" y prep√°rese para que surjan grandes cambios de herramientas de IA como ChatGPT, que sin duda ser√° manejado tanto por atacantes como por defensores por igual.","service":"user-service"}
{"level":"info","message":"hola","service":"user-service"}
{"level":"info","message":"hola","service":"user-service"}
{"level":"info","message":"pero el Departamento de Justicia no se dio cuenta de la escala completa de la campa√±a de pirater√≠a que luego se revelar√≠a.   Mientras tanto, la reportera de WIRED, Lily Hay Newman, estuvo en la conferencia de ciberseguridad de RSA en San Francisco, donde nos trajo historias de c√≥mo los investigadores de seguridad interrumpi√≥ a los operadores del malware Gootloader que vendi√≥ el acceso a las redes de v√≠ctimas a grupos de ransomware y otros ciberdelincuentes, y c√≥mo Google Cloud se asoci√≥ con Intel para buscar y reparar vulnerabilidades de seguridad serias que subyacen a servidores cr√≠ticos en la nube. Tambi√©n captur√≥ una advertencia en una charla del director de ciberseguridad de la NSA, Rob Joyce, quien le dijo a la industria de la ciberseguridad que \"se agachara\" y prep√°rese para que surjan grandes cambios de herramientas de IA como ChatGPT, que sin duda ser√° manejado tanto por atacantes como por defensores por igual.","service":"user-service"}
{"level":"error","service":"user-service"}
{"level":"error","service":"user-service"}
{"code":50035,"level":"error","method":"POST","rawError":{"code":50035,"errors":{"data":{"content":{"_errors":[{"code":"BASE_TYPE_MAX_LENGTH","message":"Must be 2000 or fewer in length."}]}}},"message":"Invalid Form Body"},"requestBody":{"files":[],"json":{"data":{"content":"Comando cibern√©tico interrumpi√≥ a los iran√≠es que pirateaban un sitio web de elecciones estadounidenses En una rara divulgaci√≥n desclasificada en un panel en la Conferencia RSA de esta semana, El general William Hartman revel√≥ que el Comando Cibern√©tico de los Estados Unidos hab√≠a interrumpido una operaci√≥n de pirater√≠a iran√≠ que apuntaba a un sitio web de elecciones locales antes de las elecciones de 2020. Seg√∫n Hartman, quien dirige la Fuerza de Misi√≥n Nacional del Comando Cibern√©tico, la intrusi√≥n no podr√≠a haber afectado los recuentos de votos reales o las m√°quinas de votaci√≥n, pero ‚Äî si los propios piratas inform√°ticos de Cyber Command no hubieran criticado la operaci√≥n ‚Äî podr√≠an haberse utilizado potencialmente para publicar resultados falsos como parte de un esfuerzo de desinformaci√≥n.   Hartman nombr√≥ a los piratas inform√°ticos iran√≠es como un grupo conocido como Pioneer Kitten, tambi√©n conocido a veces como UNC757 o Parisite, pero no nombr√≥ el sitio web espec√≠fico de elecciones al que apuntaron. Hartman agreg√≥ que la operaci√≥n de pirater√≠a se encontr√≥ gracias a las operaciones Hunt Forward de Cyber Command, en las que piratea redes extranjeras para descubrir e interrumpir preventivamente a los adversarios que atacan a los Estados Unidos.  Instagram y Facebook siguen siendo una vida con traficantes de sexo infantil Despu√©s de una investigaci√≥n de dos a√±os, El guardi√°n esta semana public√≥ una exposici√≥n desgarradora sobre el uso de Facebook e Instagram como coto de caza para depredadores infantiles, muchos de los cuales trafican con ni√±os como v√≠ctimas de abuso sexual por dinero en los dos servicios de redes sociales. A pesar de las afirmaciones de la empresa matriz de los servicios, Meta, de que est√° monitoreando de cerca sus servicios para materiales de abuso sexual infantil o tr√°fico sexual, los Guardi√°n encontr√≥ casos horribles de ni√±os cuyas cuentas fueron secuestradas por traficantes y utilizadas para anunciarlos para la victimizaci√≥n sexual.   Un fiscal que habl√≥ con El guardi√°n dijo que hab√≠a visto que los delitos de trata de ni√±os en las redes sociales aumentaban en aproximadamente un 30 por ciento cada a√±o entre 2019 y 2022. Muchas de las v√≠ctimas ten√≠an tan solo 11 o 12 a√±os, y la mayor√≠a eran negras, latinas o LGBTQ +.  Los hackers est√°n secuestrando cuentas de correo electr√≥nico de AT&T para robar criptomonedas Un grupo de piratas inform√°ticos se ha hecho cargo de las cuentas de correo electr√≥nico de AT&T ‚Äî, el proveedor de telecomunicaciones ejecuta dominios de correo electr√≥nico, incluidos att.net, sbcglobal.net, bellsouth.net ‚Äî para hackear sus billeteras de criptomonedas, informa TechCrunch.   Un informador le dice a TechCrunch que los piratas inform√°ticos tienen acceso a una parte de la red interna de AT&T que les permite generar \"claves de correo\" que se utilizan para ofrecer acceso a una bandeja de entrada de correo electr√≥nico a trav√©s de aplicaciones de correo electr√≥nico como Thunderbird o Outlook. Los piratas inform√°ticos luego usan ese acceso para restablecer las contrase√±as de las v√≠ctimas en servicios de billetera de criptomonedas como Gemini y Coinbase, y, seg√∫n la fuente de TechCrunch, ya han acumulado entre $ 10 millones y $ 15 millones en cripto robados, aunque TechCrunch no pudo verificar esos n√∫meros.","tts":false},"type":4}},"service":"user-service","status":400,"url":"https://discord.com/api/v10/interactions/1111193171163090995/aW50ZXJhY3Rpb246MTExMTE5MzE3MTE2MzA5MDk5NTpycjNOMkR3eUFQMnJURklrdWpta0lXTHVKMXhNWkllZjNDcHhwYWp5Vk1LdllNSGVmaEhNYXBOcnIxQmNpNEg2NFpSSHhORVA3ZGQ4emc3U05PVTFXMnVmOGhJOFUwbWgxNFlrdVFOdnNYTXVTT2dhUGdoZzl4cmFRaTR6MUZ5OA/callback"}
{"code":"ENOENT","errno":-2,"level":"error","path":"acelerado.mp3","service":"user-service","syscall":"unlink"}
{"level":"error","service":"user-service"}
{"level":"error","service":"user-service"}
{"level":"error","service":"user-service"}
{"code":10062,"level":"error","method":"POST","rawError":{"code":10062,"message":"Unknown interaction"},"requestBody":{"files":[],"json":{"data":{"content":"blockchain","tts":false},"type":4}},"service":"user-service","status":404,"url":"https://discord.com/api/v10/interactions/1111217629856792619/aW50ZXJhY3Rpb246MTExMTIxNzYyOTg1Njc5MjYxOTpJd3FRTkpuUHRGRmVhM0Z1SkVMcW5DWXRpd25WYm1GOTBFY1A1aUtwZDF3bHoxSkZKOTJreW0waVFSRlpiRDhzVEdOajVKZlVDTzByUjFjbHBXWUR6NGw2eGU0c1dmcEdMbTk1SmZpQWZBcFgwZk42SjV5T292WFI5eUpqOVNZbA/callback"}
{"level":"info","message":"Mejor detecci√≥n y prevenci√≥n de fraudes La combinaci√≥n de blockchain y IA tambi√©n puede mejorar la detecci√≥n y prevenci√≥n de fraudes mediante la creaci√≥n de soluciones de an√°lisis y almacenamiento de datos m√°s seguras y transparentes. Por ejemplo, blockchain se puede usar para almacenar datos de transacciones de manera segura y transparente, mientras que la IA se puede usar para analizar esos datos y detectar patrones de actividad fraudulenta.","service":"user-service"}
{"level":"info","message":"Soluciones de salud mejoradas Al combinar las capacidades de almacenamiento de datos seguras y transparentes de blockchain con la capacidad de AI para analizar y aprender de los datos, las organizaciones de atenci√≥n m√©dica pueden crear nuevas soluciones que mejoren los resultados de los pacientes y reduzcan los costos. Por ejemplo, blockchain se puede usar para almacenar de forma segura los registros de salud del paciente, mientras que la IA se puede usar para analizar esos datos y hacer recomendaciones sobre las opciones de tratamiento.  Experiencias mejoradas del cliente Finalmente, la combinaci√≥n de blockchain y IA tambi√©n puede mejorar las experiencias de los clientes al crear soluciones m√°s personalizadas y eficientes. Por ejemplo, blockchain se puede usar para almacenar de forma segura los datos del cliente, mientras que la IA se puede usar para analizar esos datos y hacer recomendaciones personalizadas basadas en las preferencias y el comportamiento de los clientes ‚Äô.","service":"user-service"}
{"level":"info","message":"Aplicaciones del mundo real La combinaci√≥n de blockchain y IA tiene el potencial de revolucionar muchas industrias y crear nuevas soluciones y capacidades. Estas son algunas de las aplicaciones del mundo real de esta poderosa combinaci√≥n:  Gesti√≥n de la cadena de suministro. Una de las aplicaciones m√°s prometedoras de blockchain y IA est√° en gesti√≥n de la cadena de suministro. Al combinar el libro mayor descentralizado de blockchain con la capacidad de AI para analizar y predecir datos, las empresas pueden crear soluciones de gesti√≥n de la cadena de suministro m√°s eficientes y transparentes. Por ejemplo, las empresas pueden usar blockchain para rastrear el movimiento de mercanc√≠as y verificar su autenticidad, mientras que la IA se puede usar para analizar esos datos y predecir cu√°ndo y d√≥nde es probable que ocurran cuellos de botella y demoras.  Salud Otra aplicaci√≥n prometedora de blockchain y IA es en la atenci√≥n m√©dica. Al combinar las capacidades de almacenamiento de datos seguras y transparentes de blockchain con la capacidad de AI para analizar y aprender de los datos, las organizaciones de atenci√≥n m√©dica pueden crear nuevas soluciones que mejoren los resultados de los pacientes y reduzcan los costos. Por ejemplo, blockchain se puede usar para almacenar de forma segura los registros de salud del paciente, mientras que la IA se puede usar para analizar esos datos y hacer recomendaciones sobre las opciones de tratamiento.  Servicios financieros Blockchain y AI tambi√©n se est√°n utilizando en servicios financieros para crear nuevas soluciones y capacidades. Por ejemplo, blockchain se puede usar para crear sistemas de pago seguros y transparentes, mientras que la IA se puede usar para analizar datos de transacciones y detectar patrones de actividad fraudulenta.  Energ√≠a y servicios p√∫blicos The combination of blockchain and AI is also being used in the energy and utilities sector to create more efficient and sustainable solutions. For example, blockchain can be used to create decentralized energy grids, while AI can be used to analyze energy usage patterns and make predictions about future demand.","service":"user-service"}
{"level":"info","message":"Gesti√≥n de identidad Finalmente, blockchain y AI se est√°n utilizando en la gesti√≥n de identidad para crear soluciones m√°s seguras y transparentes. Por ejemplo, blockchain se puede usar para almacenar y verificar de forma segura los datos de identidad, mientras que la IA se puede usar para analizar esos datos y detectar actividades fraudulentas.","service":"user-service"}
{"level":"info","message":"Desaf√≠os y limitaciones Si bien la combinaci√≥n de blockchain y IA es muy prometedora, tambi√©n hay varios desaf√≠os y limitaciones que deben superarse para que estas tecnolog√≠as alcancen su m√°ximo potencial. Estos son algunos de los desaf√≠os y limitaciones clave:  Calidad y acceso a datos. Uno de los principales desaf√≠os de usar IA con blockchain es garantizar la calidad y accesibilidad de los datos utilizados para capacitar modelos de aprendizaje autom√°tico. Blockchain puede ayudar a garantizar la autenticidad y la seguridad de los datos, pero si los datos est√°n incompletos o sesgados, puede conducir a predicciones inexactas o injustas.  Escalabilidad Tanto blockchain como AI requieren una potencia inform√°tica significativa, y escalar estas tecnolog√≠as puede ser un desaf√≠o. Las redes Blockchain pueden congestionarse y ralentizarse a medida que se agregan m√°s transacciones, mientras que los algoritmos de IA pueden volverse computacionalmente caros a medida que aumenta la cantidad de datos y la complejidad de los modelos.  Interoperabilidad Actualmente hay muchas plataformas blockchain diferentes y herramientas de IA disponibles, y asegurando interoperabilidad entre estos sistemas puede ser un desaf√≠o. Sin estandarizaci√≥n e interoperabilidad, puede ser dif√≠cil crear soluciones integrales y sin interrupciones que puedan ser f√°cilmente adoptadas por empresas y organizaciones.  Reglamento Como con cualquier tecnolog√≠a emergente, la regulaci√≥n puede ser un desaf√≠o. Blockchain y AI plantean muchas preguntas legales y √©ticas sobre la privacidad, propiedad y responsabilidad de los datos. Sin regulaciones claras y consistentes, puede ser dif√≠cil para las empresas y organizaciones adoptar estas tecnolog√≠as con confianza.  Adopci√≥n Finalmente, uno de los mayores desaf√≠os que enfrenta la combinaci√≥n de blockchain y IA es la adopci√≥n. Si bien existen muchos beneficios potenciales para estas tecnolog√≠as, muchas empresas y organizaciones dudan en invertir en tecnolog√≠as nuevas y no comprobadas. Como resultado, la adopci√≥n generalizada de blockchain y soluciones de IA puede llevar tiempo.","service":"user-service"}
{"level":"info","message":"Posibilidades futuras A pesar de los desaf√≠os y limitaciones que enfrenta la combinaci√≥n de blockchain y IA, existen muchas posibilidades interesantes para el futuro de estas tecnolog√≠as. Aqu√≠ hay algunas √°reas potenciales de crecimiento e innovaci√≥n:  IA descentralizada Un √°rea potencial de crecimiento es el desarrollo de sistemas de IA descentralizados que utilizan tecnolog√≠a blockchain para permitir el intercambio y an√°lisis de datos seguros y transparentes. Esto podr√≠a permitir enfoques m√°s colaborativos y de c√≥digo abierto para el desarrollo de IA, al tiempo que aborda cuestiones de privacidad y propiedad de datos.  Contratos inteligentes Otra √°rea de crecimiento es el uso de contratos inteligentes para automatizar procesos comerciales complejos y la toma de decisiones. Al combinar algoritmos de IA con contratos inteligentes, puede ser posible crear sistemas aut√≥nomos y autoejecutables que puedan operar independientemente de la intervenci√≥n humana.","service":"user-service"}
{"level":"info","message":"Gesti√≥n de la cadena de suministro Blockchain y AI tambi√©n podr√≠an usarse para revolucionar la gesti√≥n de la cadena de suministro mediante la creaci√≥n de sistemas m√°s eficientes y transparentes para el seguimiento y la gesti√≥n de bienes y materiales. Al utilizar el libro mayor inmutable de blockchain y las capacidades predictivas de la IA, es posible optimizar las cadenas de suministro y reducir el desperdicio y las ineficiencias.  Asistencia sanitaria personalizada La combinaci√≥n de blockchain y IA tambi√©n podr√≠a tener implicaciones significativas para la atenci√≥n m√©dica personalizada. Al utilizar blockchain para almacenar y compartir de forma segura los datos del paciente, y la IA para analizar esos datos y generar ideas, Es posible desarrollar tratamientos m√°s personalizados y efectivos para una amplia gama de afecciones.  Identidad digital Finalmente, blockchain y AI podr√≠an usarse para crear sistemas de identidad digital m√°s seguros y confiables. Al utilizar el libro mayor descentralizado y a prueba de manipulaciones de blockchain, y las capacidades de an√°lisis biom√©trico y conductual de AI, Es posible desarrollar soluciones de identidad digital m√°s s√≥lidas y confiables que puedan usarse en una amplia gama de industrias y aplicaciones.  Conclusi√≥n La combinaci√≥n de blockchain e IA representa una poderosa fuerza para la innovaci√≥n y la transformaci√≥n en una amplia gama de industrias y aplicaciones. Si bien estas tecnolog√≠as tienen sus diferencias y desaf√≠os, tambi√©n comparten muchas similitudes y ofrecen posibilidades interesantes de colaboraci√≥n e integraci√≥n. Desde la gesti√≥n de la cadena de suministro hasta la atenci√≥n m√©dica personalizada y m√°s all√°, las posibles aplicaciones de blockchain y IA son pr√°cticamente ilimitadas, ofreciendo la oportunidad de crear m√°s seguro, eficiente, y sistemas innovadores que pueden beneficiarnos a todos. A medida que estas tecnolog√≠as contin√∫en evolucionando y madurando, ser√° fascinante ver qu√© nuevas posibilidades surgen y qu√© impacto tendr√°n en nuestro mundo.","service":"user-service"}
{"level":"info","message":"testing","service":"user-service"}
{"level":"info","message":"asd","service":"user-service"}
{"level":"info","message":"1062427226617946112","service":"user-service"}
{"level":"info","message":"Cuando env√≠a una transacci√≥n a la cadena de bloques Ethereum, ¬øa d√≥nde va? ¬øQu√© es una transacci√≥n pendiente y qu√© sucede antes de que se extraiga? ¬øQu√© es un mempool? ¬øPor qu√© algunas de mis transacciones tienen √©xito y otras fracasan?  Nos sumergiremos profundamente en el flujo de una transacci√≥n en la red Ethereum, desde el momento en que presiona ‚Äú, env√≠e ‚Äù hasta el punto en que la transacci√≥n se extraiga por completo. Discutiremos qu√© podr√≠a salir mal y c√≥mo el conjunto de herramientas de desarrollador de Alchemy podr√≠a ayudarlo a depurar y ganar visibilidad en este proceso.  Aunque esta gu√≠a es espec√≠fica de Ethereum, ¬°los principios b√°sicos se aplicar√°n b√°sicamente a todas las cadenas de bloques!  ¬øQu√© es una transacci√≥n de Ethereum? Una transacci√≥n de Ethereum, en su forma m√°s simple, es una solicitud de un usuario para codificar nueva informaci√≥n en el estado permanente de la cadena de bloques. El contenido de esta solicitud generalmente toma una de algunas formas:   Una simple transferencia de valor de la cuenta p√∫blica del usuario a otra parte ( p. enviando ETH a un comerciante ) Codificar un nuevo contrato inteligente en la cadena de bloques p√∫blica al que pueden acceder otros terceros ( p. iniciar un nuevo contrato inteligente de loter√≠a ) Enviar informaci√≥n a un contrato inteligente existente para comprometerse con el contrato ( p. ingresar su nombre y fondos en un contrato inteligente de loter√≠a ) ¬øQu√© es un Mempool?  Antes de que podamos entender el flujo de transacciones en Ethereum, ¬°primero debemos entender qu√© es el mempool! Un mempool es una sala de espera en un nodo Ethereum para transacciones no confirmadas, configuradas espec√≠ficamente para actuar como un √°rea de preparaci√≥n. Dependiendo del cliente que est√© utilizando, tambi√©n podr√≠a llamarse TX-POOL o TX-QUEUE.   Las transacciones enviadas a un nodo aterrizar√°n primero en el grupo de miembros y permanecer√°n all√≠ hasta que la red las confirme por completo. El mempool maneja algunos pasos clave del proceso, que incluyen:   Ejecutar una serie de pruebas de validaci√≥n para garantizar que la transacci√≥n sea exitosa una vez que se env√≠e a un minero. Algunas de las validaciones que puede realizar el nodo incluyen: ¬øHay fondos disponibles para cubrir el costo del gas? ¬øEs v√°lida la firma de la transacci√≥n? ¬øEs el nonce el pr√≥ximo en orden para esta direcci√≥n de remitente dada? Solicitar que la lista de transacciones se procese en funci√≥n de sus precios de gas. Los precios m√°s altos de la gasolina significan que la transacci√≥n probablemente ser√° priorizada por el minero. Compartir las transacciones pendientes con los grupos de miembros de nodos pares que luego contin√∫an reenviando a otros grupos de miembros, permitiendo que toda la red vea la lista de transacciones pendientes. Cuando se extrae un bloque, se confirmar√°n las transacciones en toda la red con los precios m√°s altos del gas.","service":"user-service"}
{"level":"info","message":"¬øC√≥mo se ve el flujo de transacciones de Ethereum?  Ahora que hemos cubierto el grupo de miembros, ¬øqu√© pasos implica enviar una transacci√≥n de un usuario para almacenar permanentemente esta transacci√≥n en la cadena de bloques?   Un usuario genera una nueva transacci√≥n, firma la transacci√≥n con su clave privada y la env√≠a a un nodo en la cadena de bloques llamando al m√©todo eth_sendTransaction o eth_sendRawTransaction como expuesto, t√≠picamente a trav√©s de un servicio como La API Supernode de Alchemy. La transacci√≥n se env√≠a al grupo de miembros de un nodo. El mempool ejecuta una serie de pruebas de validaci√≥n. Si la transacci√≥n pasa estas validaciones, ingresar√° un estado pendiente. El nodo transmitir√° la transacci√≥n a los otros nodos en blockchain, donde terminar√° en sus correspondientes mempools.   Una vez que un nodo extrae un nuevo bloque en la cadena de bloques, las transacciones pendientes ~ 200 con los precios m√°s altos de la gasolina se incluir√°n en el siguiente bloque en la cadena de bloques. Estas transacciones se eliminar√°n del grupo de miembros y el nuevo bloque y estado de grupo de miembros se propagar√°n a trav√©s de la red Despu√©s de confirmar de 5 a 7 bloques m√°s, las posibilidades de que la cadena de bloques se reorganice para seguir otra bifurcaci√≥n de bloques ( con un conjunto diferente de transacciones confirmadas ) se vuelven cada vez m√°s peque√±as. En este punto, es seguro asumir que la transacci√≥n est√° permanentemente en la cadena de bloques.","service":"user-service"}
{"level":"info","message":"¬øQu√© podr√≠a salir mal con una transacci√≥n pendiente de Ethereum?  1). El Mempool podr√≠a estar lleno Comencemos simple. ¬°Hay l√≠mites en el tama√±o del mempool ( a menos que est√© utilizando una herramienta como Alchemy! ), Tanto en todo el nodo como por direcci√≥n en el nodo. Por lo general, para Geth, son 4096 transacciones pendientes, y Geth abandonar√° las transacciones pendientes m√°s antiguas a favor de las m√°s nuevas.   2). Tus par√°metros pueden ser inv√°lidos Cuando realice una transacci√≥n, deber√° incluir una variedad de par√°metros relevantes, tales como:   ¬øCu√°l es la direcci√≥n de env√≠o y la direcci√≥n de destino? ¬øCu√°l es el valor a transferir? ¬øCu√°nto gas estoy dispuesto a usar para la transacci√≥n?  ¬øCu√°l deber√≠a ser el n√∫mero actual de mi transacci√≥n? Si ha cometido un error al ingresar estos, el nodo generalmente devolver√° un c√≥digo de error que explica el problema. Si no puede entender el mensaje de error o encontrar la respuesta a trav√©s de Google, no dude en enviarnos un mensaje sobre discordia e intentaremos ayudarte!  3). Su precio de gas podr√≠a ser demasiado bajo Para determinar qu√© transacciones priorizar, las transacciones de Ethereum deben presentarse con un precio de gas. Como una subasta regular, un precio de gas m√°s alto significa que es m√°s probable que su transacci√≥n se incluya en el siguiente bloque, y un precio de gas demasiado bajo significa que nunca podr√≠a llegar a la cadena de bloques.   Debido a que el precio del gas fluct√∫a r√°pida e impredecible en el transcurso de un d√≠a en funci√≥n de la demanda, es muy importante que establezca este campo correctamente. Tienes algunas opciones aqu√≠:   Si est√° enviando una sola transacci√≥n manualmente, puede visitar el Sitio web de la estaci√≥n de servicio ETH para ver los precios m√°s recientes del gas y establecer su precio en consecuencia. Si est√° enviando solicitudes a un proveedor de nodos como Alchemy, la especificaci√≥n Ethereum JSON-RPC expone un punto final llamado eth_estimateGas eso le da una estimaci√≥n de cu√°nto gas necesitar√° para extraer su transacci√≥n! Puede usar esto para automatizar la fijaci√≥n de precios de gas de forma program√°tica. Si desea recibir notificaciones autom√°ticas cuando los precios del gas suben por encima o caen por debajo de un precio determinado, le proporcionamos una herramienta llamada Notificaciones de precio de gas en Alchemy Notify que puede alertarlo espec√≠ficamente en esas situaciones! Debido a que es un gancho web, es bastante simple integrarse en su c√≥digo para enviar transacciones autom√°ticamente cuando los precios de la gasolina son bajos.","service":"user-service"}
{"level":"info","message":"4). Tu Nonce podr√≠a ser incorrecto Ah, la pregunta candente en la cabeza de todos: ¬øqu√© diablos es un nonce y por qu√© lo necesito?? Pregunta totalmente v√°lida y nos alegra que lo haya hecho.   En pocas palabras, el nonce es el n√∫mero de transacciones enviadas desde una direcci√≥n determinada. Si ha confirmado con √©xito cinco transacciones ( no 0-4 ), la no parte de su pr√≥xima transacci√≥n pendiente ser√° 5.   Los nonces siguen algunas reglas:   Los nonces deben ocurrir en orden. Una transacci√≥n con nonce 4 ocurrir√° estrictamente antes de una transacci√≥n con nonce 5. Las piezas no se pueden duplicar o omitir - hay exactamente una nonza por transacci√≥n exitosa. Si no tiene una transacci√≥n con nonce 5, no puede enviar una con nonce 6. Del mismo modo, no puede enviar dos transacciones con nonce 5, solo una pasar√°. ¬øPor qu√© los necesitamos? Los n√∫meros son necesarios desde una perspectiva criptogr√°fica para garantizar que las transacciones desde una direcci√≥n determinada se realicen en el orden en que las envi√≥, y que sus transacciones est√©n protegidas de la problema de doble gasto.   En la pr√°ctica, el nonce es simplemente un par√°metro que debe establecer cuando crea una transacci√≥n. Esto le permite tener un control manual de grano fino sobre el orden de sus transacciones.  Para un ejemplo de la vida real, diga que desea comprar un NFT en un mercado y luego enviar una peque√±a tarifa de buscador ‚Äú a Bob por ayudarlo a descubrirlo. En este caso, solo querr√≠a pagarle a Bob si compr√≥ con √©xito el NFT. Sin nonces, no tendr√≠a forma de enviar ambas transacciones Y asegurarse de que ocurrieran en un pedido en particular. Usando nonces, simplemente puede etiquetar una transacci√≥n con nonce N y otra con nonce N + 1!  Sin embargo, este control de grano fino significa que debe enviar sus transacciones con la informaci√≥n correcta cada vez! Si su transacci√≥n est√° atascada, deber√° verificar su nonce para asegurarse de que est√© configurada correctamente de acuerdo con las reglas descritas anteriormente.","service":"user-service"}
{"level":"info","message":"5). Tu bloque podr√≠a ser bifurcado Te encantar√° este: incluso si tu transacci√≥n se extrae correctamente, est√°s todav√≠a no en claro üò° .  Debido a que la cadena de bloques est√° descentralizada, diferentes conjuntos de nodos en la red pueden tener diferentes vistas de la red. En particular, ocasionalmente dos mineros extraen un nuevo bloque aproximadamente al mismo tiempo, y los nodos de pares saltan a las dos nuevas cadenas al mismo ritmo. En ese caso, las dos nuevas cadenas crecer√°n en paralelo, ¬°pero eventualmente una de ellas ganar√° un poco m√°s de consenso!   Cuando toda la red intercambia a una de las cadenas y abandona la segunda, las transacciones ya ‚Äú minadas ‚Äù en la cadena anterior se bifurcan y, por lo tanto, no son v√°lidas. Los bloques bifurcados tambi√©n se conocen como bloques de t√≠o ‚Äú ‚Äù.  Eso significa que incluso despu√©s de haber extra√≠do su transacci√≥n, ¬°todav√≠a podr√≠a ser invalidada por un tenedor de bloque! Puedes ver un historia de bloques bifurcados en Etherscan aqu√≠. Afortunadamente en Ethereum mainnet no son muy comunes y generalmente tienen menos de 5 bloques de profundidad, pero es por eso que su transacci√≥n nunca es ‚Äú completamente ‚Äù confirmada por un protocolo de negociaci√≥n de DeFi hasta despu√©s de un m√≠nimo de 5 a 7 confirmaciones de bloque.  ¬øQu√© herramientas puedo usar para administrar mis transacciones pendientes de Mempool y Ethereum? El vigilante de Alchemy Mempool Digamos que envi√≥ una transacci√≥n hace cuarenta minutos al grupo de miembros de un nodo, pero no la ha visto confirmada en la cadena de bloques. Desea informaci√≥n sobre su estado actual, el precio del gas con el que lo envi√≥ y la posibilidad de verificarlo dos veces. ¬øQu√© haces?   Acceder al estado de sus transacciones de mempool fue ( y sigue siendo ) un desastre. Debido a que la √∫nica interfaz en el estado de su memoria es a trav√©s de la API Ethereum JSON-RPC, los desarrolladores pasaban horas consultando los diversos nodos a los que enviaron transacciones, fusionarse y examinar p√°ginas de registros e intentar reconstruir todo el estado de su memoria a mano, todo para una sola consulta.  As√≠ es como se ve la llamada promedio a un grupo de miembros ocupado:","service":"user-service"}
{"level":"info","message":"Lo que es peor, cuando los desarrolladores comienzan a enviar sus solicitudes a m√∫ltiples nodos para escalar, existen serios problemas de coherencia, ya que las transacciones se originan en un solo nodo, las solicitudes para una transacci√≥n en particular deben enrutarse al mismo nodo cada vez que interact√∫a con √©l.  En respuesta a estos desaf√≠os, construimos el Observador de Mempool - Una herramienta que simplifica mucho esta complejidad. Primero, manejamos todo el enrutamiento de nodos para que, aunque pueda estar aprovechando docenas de nodos de escala, su memoria t√©cnica siempre aparece como una sola entidad, con solicitudes de memoria enrutadas correctamente al nodo correcto dentro de nuestra infraestructura.  En segundo lugar, le brindamos algunas herramientas muy agradables para proporcionar una visi√≥n en tiempo real del estado de sus transacciones. Las transacciones se marcan como minadas, pendientes o descartadas. Cada registro de transacci√≥n incluye la duraci√≥n que la transacci√≥n pas√≥ pendiente, la cantidad de gas requerida y el acceso a detalles adicionales.","service":"user-service"}
{"level":"info","message":"El explorador de la alquimia ¬øQu√© pasa si ha enviado veinte transacciones diferentes a un nodo simult√°neamente a trav√©s de un script, pero ve que algunas de ellas ni siquiera llegan al nodo? ¬øC√≥mo podr√≠a rastrear las respuestas fallidas y encontrar patrones para determinar la causa?   Similar a lo anterior, generalmente como desarrollador necesitar√≠a rastrear p√°ginas de registros para determinar un patr√≥n. En respuesta, hemos creado una herramienta de exploraci√≥n de solicitudes / respuestas que le permite rastrear el estado de las solicitudes JSON-RPC enviadas a trav√©s de nuestra API!","service":"user-service"}
{"level":"info","message":"Nuestro Alchemy Explorer le permite buscar a trav√©s de solicitudes y respuestas hist√≥ricas enviadas a trav√©s de nuestra infraestructura en cualquier lugar desde hace 1 segundo hasta 7 d√≠as! No m√°s b√∫squeda de registros: tienes tecnolog√≠a moderna a tu alcance.   En estas solicitudes, puede filtrar las consultas por todo tipo de par√°metros, como el tipo de m√©todo, las respuestas HTTP o los errores espec√≠ficos del nodo! Puede ver solicitudes en funci√≥n de sus marcas de tiempo, la duraci√≥n de la solicitud y muchas m√°s opciones.  ¬øPor qu√© deber√≠a usar la alquimia para administrar mis transacciones? Alchemy es un proveedor de nodos, lo que significa que gestionamos toda la infraestructura asociada con el env√≠o y la recepci√≥n de solicitudes a la cadena de bloques Ethereum ( entre algunas otras. ). Aqu√≠ hay informaci√≥n sobre por qu√© necesita un proveedor de nodos.   Una vez que env√≠e sus solicitudes a trav√©s de nuestro sistema, obtendr√° todos los beneficios que hemos discutido anteriormente para las transacciones pendientes: un grupo de miembros escalable, herramientas de tablero, ganchos web de precio de gas.   Adem√°s de eso, te daremos:   Acceso a Supernode, nuestra infraestructura de nodo patentada que resuelve problemas de escalabilidad y consistencia que afectan a la cadena de bloques. Acceso a nuestro Panel de control, que lo ayuda a construir y monitorear sus aplicaciones al proporcionar herramientas para explorar sus solicitudes como las discutidas anteriormente. Access to Alchemy Notify, una herramienta que proporciona notificaciones push ( webhooks ) para eventos como transacciones que ocurren en blockchain. Acceso a nuestras API mejoradas, que le permiten realizar solicitudes desde blockchain que de otro modo son computacionalmente caras o imposibles.  Y mucho m√°s, incluido el acceso a estas caracter√≠sticas en una variedad de cadenas, como Flujo, Crypto.org, y L2 como Pol√≠gono, Optimismo, y Arbitro!","service":"user-service"}
{"level":"info","message":"Comenzando con la alquimia Desbloquear las herramientas Supernode y desarrollador de Alchemy es incre√≠blemente simple; de hecho, ¬°solo deber√≠a ser una sola l√≠nea de c√≥digo! Si ha estado usando web3.js o ethers.js, es tan simple como creando una cuenta de Alchemy gratis, generando una clave API y reemplazando la instanciaci√≥n con algo como esto:","service":"user-service"}
{"level":"info","message":"Si desea un tutorial completo, consulte nuestro Comenzando con la documentaci√≥n de Alchemy aqu√≠! Y finalmente, siempre estamos disponibles para ayudar las 24 horas del d√≠a, los 7 d√≠as de la semana en nuestro Discord de alquimia. Pase y saluda: ¬°nos encantar√≠a ayudarlo en su viaje en el desarrollo de blockchain!","service":"user-service"}
{"level":"info","message":"‚ÄúSi puedes elegir entre dos cosas y no puedes decidirte, elige ambas.‚Äù‚ÄîGregory CorsoMientras escribo esto, estoy sentado en una habitaci√≥n de hotel. La habitaci√≥n tiene una cama, un ba√±o y un escritorio, y est√° razonablemente limpia. Cada una de estas caracter√≠sticas es un atributo b√°sico que espero de cada habitaci√≥n de hotel. Si ninguno de estos estuviera ausente, no me quedar√≠a en el hotel. Este hotel tambi√©n tiene una cama que es m√°s c√≥moda que la mayor√≠a, incluye acceso gratuito a Internet inal√°mbrico, es m√°s grande que la mayor√≠a de las habitaciones de hotel y tiene un gimnasio. Realmente aprecio estas caracter√≠sticas adicionales, pero no son obligatorias para que me hospede en un hotel. Sin embargo, cuantas m√°s caracter√≠sticas como esta ofrezca el hotel, m√°s estoy dispuesto a pagar por una habitaci√≥n aqu√≠. Finalmente, este hotel me deleit√≥ de dos maneras: cada cinta de correr en el gimnasio tiene un televisor integrado y una botella de agua gratis en mi habitaci√≥n todos los d√≠as. Podr√≠a agrupar las caracter√≠sticas de esta habitaci√≥n de hotel en las siguientes categor√≠as:‚óÜ Imprescindibles: una cama, un ba√±o, un escritorio, limpio‚óÜ Cuanto m√°s, mejor: comodidad de la cama, tama√±o de la habitaci√≥n, variedad y cantidad de equipamiento en el gimnasio‚óÜ Emocionante: televisores integrados en las cintas de correr , botella de agua gratis en myroom todos los d√≠as","service":"user-service"}
{"level":"info","message":"La separaci√≥n de las funciones del producto en las tres categor√≠as anteriores puede proporcionar una gran cantidad de informaci√≥n sobre c√≥mo priorizar el trabajo para el lanzamiento de un nuevo producto. El proceso para hacerlo fue originado por Noriaki Kano, cuyo enfoque nos permite separar las funciones en tres categor√≠as:‚óÜ Umbral , o caracter√≠sticas imprescindibles ‚óÜ Caracter√≠sticas lineales ‚óÜ Excitadores y deleitantes Las caracter√≠sticas de umbral son aquellas que deben estar presentes en el producto para que tenga √©xito. A menudo se las denomina caracter√≠sticas imprescindibles. Estos son la cama, el ba√±o, el escritorio y la limpieza de mi habitaci√≥n de hotel. Mejorar el rendimiento o la cantidad de una caracter√≠stica de umbral tendr√° poco impacto en la satisfacci√≥n del cliente. Por ejemplo, siempre que el ba√±o del hotel satisfaga mis necesidades b√°sicas, no me importa de qu√© est√©n hechas las encimeras. Una caracter√≠stica lineal es aquella en la que ‚Äúcuanto m√°s , mejor‚Äù es cierto. Cuanto m√°s grande sea la habitaci√≥n del hotel, mejor. Estas se denominan funciones lineales porque la satisfacci√≥n del cliente se correlaciona linealmente con la cantidad de la funci√≥n. Cuanto mejor se desempe√±e una de estas caracter√≠sticas (o cuanto m√°s haya), m√°s satisfechos estar√°n los clientes. Debido a esto, el precio del producto a menudo se relaciona con atributos lineales. Si el hotel tiene mancuernas y dos buenas cintas para correr, ser√© m√°s feliz que si solo tiene un escalador viejo y oxidado. Ser√© a√∫n m√°s feliz si tambi√©n tiene entrenadores el√≠pticos y bicicletas de spinning. Y, lo que es importante para el hotel, es m√°s probable que regrese y pague un sobreprecio por sus habitaciones. Por √∫ltimo, los excitantes y los deleitantes son aquellas caracter√≠sticas que brindan una gran satisfacci√≥n, a menudo agregando un sobreprecio a un producto. Sin embargo, la falta de un excitador o deleitante no disminuir√° la satisfacci√≥n del cliente por debajo de lo neutral. La televisi√≥n integrada en la cinta de correr del hotel me emocion√≥. No me habr√≠a sentido insatisfecho si el hotel no los ofreciera porque no sab√≠a que nadie los ten√≠a. De hecho, los estimulantes y deleitantes a menudo se denominan necesidades desconocidas porque los clientes o usuarios no saben que necesitan estas funciones hasta que las ven. La relaci√≥n entre estos tres tipos de caracter√≠sticas diferentes se muestra en la Figura 11.1. La flecha que atraviesa la parte inferior derecha de este diagrama muestra que una vez que se ha implementado una cierta cantidad de una caracter√≠stica imprescindible, la satisfacci√≥n del cliente no puede aumentarse agregando m√°s de esa caracter√≠stica. Adem√°s, no importa cu√°nto se agregue una funci√≥n imprescindible, la satisfacci√≥n del cliente nunca supera el punto medio.","service":"user-service"}
{"level":"info","message":"Debido a que se requieren funciones imprescindibles para que un producto funcione en su segmento de mercado, se debe hacer hincapi√© en priorizar el desarrollo de todas las funciones de umbral. Las caracter√≠sticas imprescindibles de un producto no necesitan desarrollarse en las primeras iteraciones de un lanzamiento. Sin embargo, debido a que los usuarios consideran que estas funciones son obligatorias, deben estar disponibles antes de que se lance el producto. Tenga en cuenta, sin embargo, que la implementaci√≥n parcial de funciones imprescindibles puede ser adecuada, porque las ganancias en la satisfacci√≥n del cliente disminuyen r√°pidamente una vez que se ha establecido un nivel b√°sico de soporte para las funciones de umbral. Por ejemplo, estoy escribiendo este libro con Adobe FrameMaker, que habla de la boca para afuera sobre una funci√≥n de deshacer al permitir un nivel de deshacer. Personalmente, para m√≠, avanzaron bastante en el eje de satisfacci√≥n del cliente con una funci√≥n de deshacer de un nivel, pero hubiera preferido mucho m√°s.","service":"user-service"}
{"level":"info","message":"El √©nfasis secundario debe ponerse en completar tantas caracter√≠sticas lineales como sea posible. Debido a que cada una de estas caracter√≠sticas conduce directamente a una mayor satisfacci√≥n del cliente, cuantas m√°s de estas caracter√≠sticas se puedan incluir, mejor (excluyendo, por supuesto, situaciones como un producto que ya est√° inflado con demasiadas caracter√≠sticas). Finalmente, y si el tiempo lo permite, se debe priorizar al menos unas cuantas delicias para que se incluyan en el plan de lanzamiento. Tenga en cuenta que las funciones tienden a migrar hacia abajo en el diagrama de Kano con el tiempo. Hace poco tiempo, el acceso inal√°mbrico a Internet en una habitaci√≥n de hotel era una delicia. Ahora es una caracter√≠stica lineal en camino de convertirse en una caracter√≠stica de umbral. Evaluaci√≥n de temas en el modelo Kano La forma m√°s f√°cil de utilizar un modelo Kano en un proyecto √°gil es pensar en cada tema y hacer una suposici√≥n informada sobre el tipo de cada uno. Sin embargo, una forma mucho mejor es hablar con los clientes o usuarios para determinar el tipo de cada tema. Esto es sorprendentemente f√°cil porque se puede hacer con un cuestionario escrito y es posible que deba encuestar a veinte o treinta usuarios para priorizar con precisi√≥n los requisitos (Griffin y Hauser 1993). Kano propuso determinar la categor√≠a de una funci√≥n haciendo dos preguntas: una pregunta sobre c√≥mo se sentir√≠a el usuario si la funci√≥n estuviera presente en el producto y una pregunta sobre c√≥mo se sentir√≠a el usuario si no estuviera presente. La primera de estas preguntas se conoce como la forma funcional, porque se refiere al caso en que una funci√≥n est√° presente . La segunda pregunta se conoce como forma disfuncional, porque se refiere a cuando la funci√≥n no est√° presente. Cada pregunta se responde en la misma escala de cinco puntos.1. Me gusta as√≠.2. Espero que sea as√≠.3. Soy neutral.4. Puedo vivir con eso de esa manera.5. No me gusta de esa manera. Como ejemplo, volvamos al sitio web de SwimStats. Supongamos que estamos contemplando tres caracter√≠sticas nuevas: ‚óÜ La capacidad de ver un gr√°fico de los tiempos de un nadador en un evento durante la temporada pasada. ‚óÜ La capacidad de que los nadadores publiquen perfiles autobiogr√°ficos.","service":"user-service"}
{"level":"info","message":"La posibilidad de que cualquier miembro registrado del sitio suba fotos. Para determinar qu√© tipo de caracter√≠sticas son, encuestamos a los posibles usuarios y les preguntamos:‚óÜ Si puede graficar los tiempos de un nadador en un evento durante la √∫ltima temporada, ¬øc√≥mo se siente?‚óÜ Si no puedes graficar los tiempos de un nadador en un evento durante la temporada pasada, ¬øc√≥mo te sientes?‚óÜ Si los nadadores pueden publicar perfiles autobiogr√°ficos, ¬øc√≥mo te sientes?‚óÜ Si los nadadores no pueden publicar perfiles autobiogr√°ficos, ¬øc√≥mo te sientes?‚óÜ Si puedes subir fotos , ¬øc√≥mo te sientes?‚óÜ Si no puedes subir fotos, ¬øc√≥mo te sientes? El primer par de estas preguntas y las respuestas hipot√©ticas de un usuario se muestran en la Figura 11.2.","service":"user-service"}
{"level":"info","message":"Al observar la Figura 11.2, es evidente que es posible que un usuario d√© respuestas inconsistentes. Un usuario podr√≠a, por ejemplo, decir que le gusta graficar los tiempos de un evento de un nadador y que tambi√©n le gusta no tener la misma funci√≥n. Hay veinticinco combinaciones posibles de respuestas a las preguntas funcionales y","service":"user-service"}
{"level":"info","message":"formas disfuncionales de una pregunta. Necesitamos una forma de ver ambas respuestas simult√°neamente y evaluar la opini√≥n de un usuario. Categorizaci√≥n de respuestas El m√©todo para hacer esto se muestra en la figura 11.3. Al cruzar la respuesta a la pregunta funcional con la respuesta a la pregunta disfuncional, las respuestas de un posible usuario pueden reducirse a un solo significado. Entonces, si un usuario dice que espera poder graficar tiempos de eventos y que no le gustar√≠a si no fuera as√≠ (que son las respuestas dadas en la Figura 11.2), hacemos una referencia cruzada de esas respuestas y obtenemos que considera que la funci√≥n es obligatoria. En su mente, graficar los tiempos de los eventos es una caracter√≠stica imprescindible.","service":"user-service"}
{"level":"info","message":"Claro, puedo explicarte qu√© son las preguntas funcionales y las preguntas disfuncionales en el contexto de la estimaci√≥n y planificaci√≥n √°gil.  En la metodolog√≠a √°gil, especialmente en enfoques como Scrum, se fomenta la colaboraci√≥n y la comunicaci√≥n efectiva entre los miembros del equipo. Las preguntas funcionales y disfuncionales son una forma de clasificar las preguntas que se realizan durante el proceso de estimaci√≥n y planificaci√≥n para identificar si est√°n contribuyendo de manera positiva o negativa al objetivo general del equipo.  Las preguntas funcionales son aquellas que ayudan a obtener informaci√≥n relevante y necesaria para lograr un entendimiento com√∫n y tomar decisiones efectivas. Estas preguntas est√°n orientadas hacia el logro de los objetivos del proyecto y el entendimiento de los requisitos y expectativas de los stakeholders. Por ejemplo, algunas preguntas funcionales podr√≠an ser:  ¬øCu√°l es el objetivo principal de esta funcionalidad? ¬øCu√°les son las restricciones o requisitos cr√≠ticos? ¬øC√≥mo podemos descomponer esta tarea en elementos m√°s peque√±os? Estas preguntas funcionales promueven la colaboraci√≥n y la claridad, lo que facilita la estimaci√≥n precisa y la planificaci√≥n efectiva.  Por otro lado, las preguntas disfuncionales son aquellas que no contribuyen de manera positiva al proceso de estimaci√≥n y planificaci√≥n. Estas preguntas pueden distraer al equipo, generar confusi√≥n o desviarse del objetivo principal. Algunos ejemplos de preguntas disfuncionales podr√≠an ser:  ¬øPor qu√© siempre tenemos que hacer las cosas de esta manera? ¬øPor qu√© no podemos agregar m√°s funciones a este sprint? ¬øCu√°nto tiempo lleva realizar esto en comparaci√≥n con otros proyectos? Estas preguntas disfuncionales pueden ralentizar el proceso de estimaci√≥n y planificaci√≥n, crear un ambiente negativo o desviar el enfoque del equipo.  En el gr√°fico cruzado al que haces referencia, es probable que se muestren las preguntas funcionales y disfuncionales en un eje horizontal y vertical, respectivamente. El objetivo es identificar y fomentar el uso de preguntas funcionales mientras se evita o minimiza el uso de preguntas disfuncionales.  Recuerda que el enfoque √°gil se basa en la colaboraci√≥n, la comunicaci√≥n efectiva y la adaptaci√≥n continua. Al promover las preguntas funcionales y minimizar las preguntas disfuncionales, se crea un entorno propicio para el √©xito del proyecto y la satisfacci√≥n del equipo.","service":"user-service"}
{"level":"info","message":"If we repeat this process over twenty to thirty users, their answers can be aggregated and their distributions determined as is shown in Table 11.1. From examining this table, we can tell that graphing event times is a one-dimensional (linear) feature and that uploading photos is a must-have feature","service":"user-service"}
{"level":"info","message":"Si repetimos este proceso sobre veinte o treinta usuarios, sus respuestas pueden agregarse y sus distribuciones determinarse como se muestra en la Tabla 11.1. Al examinar esta tabla, podemos decir que graficar tiempos de eventos es una funci√≥n unidimensional (lineal) y que cargar fotos es una funci√≥n imprescindible.","service":"user-service"}
{"level":"info","message":"Ocasionalmente encontrar√° una caracter√≠stica, como publicar perfiles autobiogr√°ficos en la Tabla 11.1, que tiene valores altos para dos respuestas. Esto indica que diferentes tipos de clientes y usuarios tienen diferentes expectativas. En estos casos, debe considerar analizar las respuestas en funci√≥n de alg√∫n factor que diferencie a su subpoblaci√≥n de clientes o usuarios. Puede, por ejemplo, separar las respuestas de los usuarios de peque√±as empresas de las de los usuarios de grandes empresas. O puede optar por separar las respuestas seg√∫n el puesto de trabajo dentro de una empresa o por segmento de la industria.","service":"user-service"}
{"level":"info","message":"Karl Wiegers (1999) has recommended an approach that is similar to Kano‚Äôs in that it considers both the positive benefit of the presence of a feature and the negative impact of its absence. Rather than use questionnaires, this approach relies on expert judgment. Collaboratively, but led by the product owner, the team assesses each feature being considered for the next release. Each feature is assessed in terms of the benefits it will bring if implemented, as well as the penalty that will be incurred if it is not implemented. As with estimates of story points and ideal time, the estimates of benefits and penalties are relative. A scale of 1 to 9 is used. Table 11.2, which again uses the SwimStats features, shows how this works. The benefit of including graphs of a swimmer‚Äôs event times over a season is estimated at 8. This feature is slightly less valuable than uploading photos but is much more valuable than the ability for swimmers to post autobiographical profiles. As for the relative penalties if these features are absent, there is very little penalty if users cannot upload photos. (In Kano‚Äôs terms, uploading photos is probably an exciter‚Äîusers would like it but would not reject the product if it were absent.) There is more of a penalty if event times cannot be graphed or autobiographies posted.","service":"user-service"}
{"level":"info","message":"Karl Wiegers (1999) ha recomendado un enfoque similar al de Kano en el sentido de que considera tanto el beneficio positivo de la presencia de una caracter√≠stica como el impacto negativo de su ausencia. En lugar de utilizar cuestionarios, este enfoque se basa en el juicio de expertos. En colaboraci√≥n, pero dirigido por el propietario del producto, el equipo eval√∫a cada funci√≥n que se est√° considerando para la pr√≥xima versi√≥n. Cada caracter√≠stica se eval√∫a en t√©rminos de los beneficios que traer√° si se implementa, as√≠ como la penalizaci√≥n en la que se incurrir√° si no se implementa. Al igual que con las estimaciones de los puntos de la historia y el tiempo ideal, las estimaciones de los beneficios y las penalizaciones son relativas. Se utiliza una escala del 1 al 9. La tabla 11.2, que nuevamente usa las funciones de SwimStats, muestra c√≥mo funciona esto. El beneficio de incluir gr√°ficos de los tiempos de los eventos de un nadador durante una temporada se estima en 8. Esta funci√≥n es un poco menos valiosa que cargar fotos, pero es mucho m√°s valiosa que la capacidad de los nadadores de publicar perfiles autobiogr√°ficos. En cuanto a las penalizaciones relativas si estas funciones est√°n ausentes, existe una penalizaci√≥n muy peque√±a si los usuarios no pueden cargar fotos. (En los t√©rminos de Kano, cargar fotos es probablemente un est√≠mulo: a los usuarios les gustar√≠a, pero no rechazar√≠an el producto si no estuviera). Hay una penalizaci√≥n mayor si no se pueden graficar los tiempos de los eventos o publicar autobiograf√≠as.","service":"user-service"}
{"level":"info","message":"Para cada funci√≥n, el beneficio y la sanci√≥n relativos se suman y se ingresan en la columna Valor total. Si lo desea, puede ponderar los beneficios y las sanciones. Por ejemplo, para ponderar el beneficio relativo como el doble de importante que la sanci√≥n relativa, multiplique el Beneficio relativo por 2 antes de sumarlo a la Sanci√≥n relativa para obtener el Valor total. La suma del Total La columna de valor (en este caso, 33) representa el valor total de la entrega de todas las funciones. Para calcular la contribuci√≥n relativa de cada funci√≥n, divida su valor total por la suma de la columna Valor total. Por ejemplo, graficar tiempos de eventos tiene un valor de 14. El valor total de todas las caracter√≠sticas es 33. Dividir 14 por 33 da como resultado 0.42 o 42%. Esto significa que graficar los tiempos de los eventos representa el 42 % del valor total de todas las caracter√≠sticas enumeradas. La siguiente columna, Estimaci√≥n, contiene el punto de la historia o la estimaci√≥n de los d√≠as ideales. Exactamente como con el Valor total, la columna Estimaci√≥n se suma (61, en este caso) y el porcentaje de cada estimaci√≥n se calcula en la columna % Costo. En este ejemplo, la representaci√≥n gr√°fica de los tiempos de los eventos se estima en 32 puntos de historia o d√≠as ideales. Los tres combinados son 61 puntos de historia o d√≠as ideales. Por lo tanto, graficar los tiempos de los eventos representa el 53 % del costo total de estas tres historias ( ). La √∫ltima columna, Prioridad, se calcula dividiendo el Valor % por el Costo %. Los n√∫meros m√°s altos representan prioridades m√°s altas porque crear√°n m√°s valor por el esfuerzo invertido en ellos. Puede ver esto en la Tabla 11.2 mirando la funci√≥n para publicar perfiles autobiogr√°ficos. Esta caracter√≠stica genera un poco m√°s de la mitad del valor de graficar tiempos de eventos (un valor total de 8 en comparaci√≥n con 14), pero lo hace a un cuarto del costo (una estimaci√≥n de 8 en comparaci√≥n con 32). -relaci√≥n de costos, la publicaci√≥n de perfiles autobiogr√°ficos es la caracter√≠stica de mayor prioridad en este an√°lisis.","service":"user-service"}
{"level":"info","message":"La importancia de incluir la penalizaci√≥n relativa Es posible que sienta la tentaci√≥n de eliminar la columna de la penalizaci√≥n relativa. No. Al igual que con el enfoque de Kano, puede ser muy √∫til observar las funciones desde la perspectiva de c√≥mo los usuarios se ver√°n afectados por la presencia de la funci√≥n y por la ausencia de la funci√≥n. Uno de mis clientes en la industria de servicios financieros proporciona una buena ejemplo de la importancia de considerar la pena relativa. El propietario del producto de su equipo pudo priorizar la mayor√≠a de las funciones con bastante facilidad. Sin embargo, una funci√≥n que ten√≠a que priorizar no aportar√≠a ning√∫n valor a la empresa m√°s que mantener la empresa en cumplimiento con ciertas nuevas regulaciones gubernamentales. Ella brome√≥ diciendo que el √∫nico inconveniente de no implementar la funci√≥n era que el director ejecutivo podr√≠a pasar alg√∫n tiempo en prisi√≥n. Y ella (porque no era la CEO) estaba de acuerdo con ese riesgo si eso significaba incluir otras funciones en el producto. Este es un claro ejemplo de una funci√≥n con un beneficio relativo de 1 pero una penalizaci√≥n relativa de 9.","service":"user-service"}
{"level":"info","message":"Retrocedamos un momento y recordemos por qu√© estamos haciendo esto. En el cap√≠tulo anterior, aprendimos que hay cuatro factores que se deben considerar al priorizar funciones.1. La cantidad y la importancia del aprendizaje y los nuevos conocimientos creados mediante el desarrollo de las caracter√≠sticas.2. La cantidad de riesgo eliminado al desarrollar las caracter√≠sticas.3. El valor financiero de tener las caracter√≠sticas.4. El costo de desarrollar (y tal vez admitir) las nuevas funciones. El cap√≠tulo anterior, \"Priorizaci√≥n de temas\", describi√≥ la importancia de tener en cuenta el aprendizaje y la reducci√≥n de riesgos en la priorizaci√≥n general de una funci√≥n. Este cap√≠tulo present√≥ dos enfoques para priorizar la conveniencia de las funciones: An√°lisis de Kano y ponderaci√≥n relativa. En el an√°lisis de Kano, las caracter√≠sticas se segregan en caracter√≠sticas imprescindibles, caracter√≠sticas lineales y excitadores. Esto se hace haciendo a los usuarios potenciales dos preguntas sobre cada funci√≥n: c√≥mo se sentir√≠an si la funci√≥n estuviera presente y c√≥mo se sentir√≠an si no estuviera presente.","service":"user-service"}
{"level":"info","message":"La ponderaci√≥n relativa proporciona un enfoque para evaluar los beneficios de implementar una caracter√≠stica, las sanciones de no implementarla y el costo en un solo valor que representa la prioridad de una caracter√≠stica. Preguntas de discusi√≥n1. ¬øCu√°les son los m√©ritos relativos del an√°lisis de Kano y la ponderaci√≥n relativa en su organizaci√≥n actual?2. ¬øQu√© excitantes est√°n entrando en su proyecto actual?3. ¬øTiene su proyecto actual la combinaci√≥n correcta de excitadores, caracter√≠sticas lineales y caracter√≠sticas imprescindibles?","service":"user-service"}
{"level":"info","message":"‚ÄúHoy en d√≠a no programamos el software m√≥dulo por m√≥dulo; programamos el software funci√≥n por funci√≥n‚Äù.‚ÄîMary PoppendieckA medida que las historias de los usuarios llegan a la cima del plan de lanzamiento, lo que significa que se implementar√°n pronto, a menudo es necesario dividirlas. Despu√©s de todo, si implementar una historia de usuario en particular tomar√° m√°s tiempo que la iteraci√≥n, no hay m√°s remedio que dividir la historia en dos o m√°s historias. Aprender a ver formas de dividir historias no es una habilidad particularmente dif√≠cil de adquirir, pero requiere pr√°ctica y experiencia. Cuantas m√°s historias de usuario diferentes haya dividido en el pasado, m√°s f√°cil se vuelve. Con eso en mente, este cap√≠tulo ofrece consejos sobre c√≥mo dividir historias al proporcionar una serie de ejemplos. A partir de estos ejemplos, se extraen una serie de pautas que se pueden usar para dividir otras historias. Los consejos de este cap√≠tulo se pueden usar cada vez que se necesite dividir una historia. Sin embargo, las pautas est√°n dirigidas espec√≠ficamente a las historias de usuarios o caracter√≠sticas que parecen dif√≠ciles. para dividir. Cu√°ndo dividir una historia de usuario Hay ocasiones en las que puede ser necesario dividir una historia de usuario en varias partes m√°s peque√±as. Primero, una historia de usuario debe dividirse cuando es demasiado grande para caber en una sola iteraci√≥n. A veces, una historia de usuario no cabe en una iteraci√≥n porque es m√°s grande que una iteraci√≥n completa. Claramente, una historia en esta situaci√≥n necesita ser dividida.","service":"user-service"}
{"level":"info","message":"Alternativamente, una historia puede ser lo suficientemente peque√±a como para caber dentro de una iteraci√≥n, pero no encajar√° dentro de la iteraci√≥n que se est√° planificando porque no queda suficiente espacio. El equipo puede sentir que tendr√° tiempo para desarrollar una parte de una historia en la iteraci√≥n, pero no la historia completa. En segundo lugar, puede ser √∫til dividir una gran historia de usuario (una √©pica) si se necesita una estimaci√≥n m√°s precisa. Por ejemplo, uno de mis clientes estaba contemplando nuevas funciones que proporcionar√≠an un mejor acceso a su sistema a los representantes de servicio al cliente (CSR) que trabajaban en otras empresas. La primera pregunta que tuvo que responder el propietario del producto fue si val√≠a la pena seguir con estas funciones. En lugar de escribir un mont√≥n de historias de usuarios individuales, escribi√≥ una historia m√°s grande y describi√≥ la visi√≥n detr√°s de esa historia al equipo. Lo estimaron en puntos de historia de assetenta. Eso fue lo suficientemente bueno para que ella supiera que quer√≠a agregar estas caracter√≠sticas. Sab√≠a que hab√≠a mucha incertidumbre en la estimaci√≥n, pero incluso si la estimaci√≥n se desviaba en un 100 %, val√≠a la pena realizar estas funciones. Si setenta puntos de la historia la hubieran puesto en el l√≠mite de incluir o no las funciones de RSE en el lanzamiento, podr√≠a haber optado por dividir la historia grande y hacer que el equipo estimara las m√∫ltiples historias m√°s peque√±as. gran historia de usuario es por los datos que ser√°n compatibles. Por ejemplo, en un proyecto reciente, el equipo estaba desarrollando un producto para recopilar informaci√≥n financiera. Comenzaron con una historia de usuario √©pica: \"Como usuario, puedo ingresar la informaci√≥n de mi balance\". Un balance en este caso podr√≠a incluir una gran cantidad de campos. En el nivel m√°s alto, incluye activos y pasivos. Los activos incluyen elementos tales como efectivo, valores, bienes ra√≠ces, autom√≥viles, pr√©stamos, etc. El sistema era tal que el usuario pod√≠a interactuar con este balance en varios niveles de detalle. Un usuario podr√≠a ingresar un solo valor que represente todos sus activos. O podr√≠a ingresar informaci√≥n un poco m√°s detallada (un valor total de todos los pr√©stamos, por ejemplo) o informaci√≥n mucho m√°s detallada (un desglose de todos los pr√©stamos). Teniendo en cuenta la cantidad de campos en la pantalla y las interacciones entre ellos, esto era mucho m√°s de lo que el equipo cre√≠a que pod√≠a completar en una sola iteraci√≥n de dos semanas. El equipo dividi√≥ esta historia por el tipo de datos que el usuario pod√≠a ingresar. Su primera historia fue \"Como usuario, puedo ingresar datos de resumen del balance general\". Esta historia era muy peque√±a (casi demasiado peque√±a), ya que solo cubr√≠a la creaci√≥n del formulario b√°sico y dos campos: uno para activos y otro para pasivos. Su siguiente historia fue \"Como usuario, puedo ingresar datos de balance categorizados\". Esta historia cubri√≥ el siguiente nivel de detalle (como efectivo, valores, bienes ra√≠ces, pr√©stamos, etc.). Cuando esta historia fue","service":"user-service"}
{"level":"info","message":"implementado, habr√≠a dos docenas de campos de entrada en la pantalla. Su siguiente historia cubr√≠a la validaci√≥n de datos: \"Como usuario, quiero que los valores que ingrese sean validados para no cometer errores\". Discutieron lo que esto significaba y acordaron que se permitir√≠an montos positivos y negativos, que se podr√≠an ingresar decimales pero que los montos se redondear√≠an autom√°ticamente al d√≥lar m√°s cercano, etc. informaci√≥n del pr√©stamo.‚Äù Esta historia permitir√≠a a un usuario ingresar hasta 100 pr√©stamos (este n√∫mero fue discutido, acordado y anotado como una condici√≥n de satisfacci√≥n en la tarjeta de la historia). Esta historia era m√°s grande de lo que parece porque abordaba una serie de problemas de la interfaz de usuario, como la forma en que se mostrar√≠an en la pantalla las nuevas filas de datos de pr√©stamos. La historia era mucho m√°s grande que las otras que se hab√≠an separado de la historia original. Sin embargo, incluso esta historia era mucho m√°s peque√±a que la historia original porque esta ped√≠a respaldar datos detallados solo para pr√©stamos. La historia del pr√©stamo se us√≥ como patr√≥n para muchas otras historias de usuarios que se separaron del original, como \"Como usuario, puedo ingresar informaci√≥n detallada sobre mis propiedades inmobiliarias\" y \"Como usuario, puedo ingresar informaci√≥n detallada sobre mis propiedades\". tenencias de efectivo, incluidas cuentas corrientes y de ahorro‚Äù. Al dividir la historia inicial de esta manera, el equipo cre√≥ alrededor de una docena de historias de usuarios a partir de la inicial. Cada una de las nuevas historias estaba ahora dentro del tama√±o que podr√≠an completar en una iteraci√≥n de dos semanas. Esto lleva a nuestra primera directriz:","service":"user-service"}
{"level":"info","message":"Dividir grandes historias a lo largo de los l√≠mites de los datos respaldados por la historia.","service":"user-service"}
{"level":"info","message":"Dividir una historia de usuario a lo largo de los l√≠mites de los datos es un enfoque muy √∫til y uno que definitivamente deber√≠a tener en su bolsa de trucos. Como otro ejemplo, hace algunos a√±os estaba trabajando con un equipo que desarrollaba un subsistema de fax automatizado. El equipo se enfrent√≥ con algunas historias de usuarios importantes sobre c√≥mo se pod√≠a configurar el sistema. Las historias se hicieron mucho m√°s peque√±as al dividir el soporte para n√∫meros de tel√©fono de EE. UU. e internacionales. En algunos casos, una historia grande se puede hacer mucho m√°s peque√±a eliminando el manejo de condiciones excepcionales o de error de la historia principal. Suponga que est√° trabajando en un sistema para procesar pagos de pr√©stamos y tiene esta historia de usuario: \"Como prestatario, quiero pagar mi pr√©stamo\". Cuando el equipo analiza esta historia, el propietario del producto se√±ala que si el prestatario env√≠a inadvertidamente un cheque por m√°s del monto pendiente del pr√©stamo, se debe imprimir un cheque de reembolso y","service":"user-service"}
{"level":"info","message":"devuelto por correo al prestatario. A√±ade que esto s√≥lo se aplica a importes superiores a 2 ¬§. Esta historia podr√≠a dividirse escribiendo las siguientes historias: ‚óÜ Como prestatario, quiero pagar mi pr√©stamo. Nota: Permitir sobrepagos.‚óÜ Como prestatario, si accidentalmente pago demasiado, obtengo un reembolso si supera los ¬§2. Dividir los l√≠mites operativos Hace poco trabaj√© con un equipo que ten√≠a la tarea de desarrollar una pantalla de b√∫squeda muy compleja. Hab√≠a docenas de campos en la mitad superior de la pantalla, un generador de consultas de nivel intermedio que ensamblaba consultas de bases de datos formuladas en funci√≥n de lo que se hab√≠a ingresado, y luego una cuadr√≠cula de visualizaci√≥n de datos complejos en la parte inferior de la pantalla. Todo este trabajo fue inicialmente descrito por una sola historia de usuario. Hice que el equipo dividiera el trabajo en tres partes que se distribuyeron en tres iteraciones. En la primera iteraci√≥n, dise√±aron la interfaz de usuario b√°sica, incluida aproximadamente la mitad de los campos de criterios de b√∫squeda que estaban en la parte superior de la pantalla. Tambi√©n escribieron las partes del generador de consultas que funcionaban con esos campos. La parte inferior de la pantalla era para contener la cuadr√≠cula de visualizaci√≥n de datos complejos. Esto fue demasiado para hacer en una iteraci√≥n de dos semanas. Entonces, al final de la primera iteraci√≥n, esa parte de la pantalla mostraba un mensaje simple como \"Esta b√∫squeda encontr√≥ 312 coincidencias\". Esto ciertamente no fue muy √∫til para un usuario que quer√≠a saber qu√© conten√≠an esas 312 coincidencias. Sin embargo, represent√≥ un progreso significativo y lo hizo visible para todas las partes interesadas del proyecto. La segunda iteraci√≥n de este proyecto agreg√≥ la cuadr√≠cula de visualizaci√≥n de datos, y la tercera iteraci√≥n agreg√≥ los campos de criterios de b√∫squeda restantes en la parte superior de la pantalla. Estas iteraciones se priorizaron de esta manera porque hab√≠a mucha incertidumbre acerca de cu√°nto tiempo llevar√≠a desarrollar la cuadr√≠cula de visualizaci√≥n de datos. Se consider√≥ mejor eliminar esa incertidumbre en la segunda iteraci√≥n que dejarla hasta la tercera. Debido a que el equipo ya hab√≠a logrado una s√≥lida comprensi√≥n de lo que era necesario para crear el generador de consultas, consideraron que ese trabajo era de bajo riesgo. Esto nos lleva a nuestra siguiente directriz:","service":"user-service"}
{"level":"info","message":"Dividir historias grandes en funci√≥n de las operaciones que se realizan dentro de la historia.","service":"user-service"}
{"level":"info","message":"Un enfoque com√∫n para hacer esto es dividir una historia a lo largo de los l√≠mites de las operaciones CRUD comunes: Crear, Leer, Actualizar y Eliminar. Para ver c√≥mo funciona esto, suponga que est√° trabajando en el sistema SwimStats y que el equipo est√° listo para desarrollar esta historia: ‚ÄúComo entrenador, puedo manejar a los nadadores de mi equipo‚Äù. El equipo habla con los entrenadores/usuarios y descubre que esto significa que el entrenador quiere agregar nuevos nadadores, editar los datos existentes de los nadadores y eliminar a los nadadores que han dejado el equipo. Esta historia inicial se puede dividir f√°cilmente en tres historias: ‚óÜ Como entrenador, puedo agregar nuevos nadadores a mi equipo. ‚óÜ Como entrenador, puedo editar informaci√≥n sobre nadadores que ya est√°n en mi equipo. ‚óÜ Como entrenador, puedo eliminar nadadores que ya no est√°n en mi equipo. Estas historias se corresponden muy de cerca con las partes Crear, Actualizar y Eliminar de CRUD. Dividir una gran historia en estas tres historias es un patr√≥n muy com√∫n y conduce a nuestra siguiente gu√≠a:","service":"user-service"}
{"level":"info","message":"Dividir historias grandes en operaciones CRUD separadas.","service":"user-service"}
{"level":"info","message":"Hay muchas caracter√≠sticas ortogonales o transversales en una aplicaci√≥n t√≠pica. La seguridad, el manejo de errores y el registro, por ejemplo, abarcan todas las dem√°s funciones de una aplicaci√≥n. Una historia que es demasiado grande para caber en una iteraci√≥n a menudo se puede reducir aisl√°ndola de una o m√°s de estas preocupaciones transversales. Por ejemplo, muchas aplicaciones contienen pantallas que se comportan de manera diferente seg√∫n los privilegios del usuario actual. Si eso es demasiado para desarrollar en una sola iteraci√≥n, desarrolle las pantallas en una sola iteraci√≥n y agregue soporte para privilegios espec√≠ficos del usuario en una iteraci√≥n posterior. En un proyecto reciente, un cliente necesitaba dividir una historia que implicaba buscar datos y mostrar los resultados. Cada b√∫squeda abarcar√≠a toda la base de datos, pero solo se mostrar√≠an los resultados que el usuario ten√≠a privilegios para ver. La soluci√≥n del equipo fue ignorar esta restricci√≥n de seguridad y, en la primera iteraci√≥n de esta funci√≥n, los usuarios pod√≠an ver el conjunto de resultados completo. Como otro ejemplo, suponga que el equipo planea trabajar en una historia que dice \"Como usuario, debo iniciar sesi√≥n\". con un nombre de usuario y contrase√±a antes de usar el sistema.‚Äù El equipo analiza la historia y elabora una lista de restricciones sobre la contrase√±a: debe tener al menos ocho caracteres, debe incluir al menos un d√≠gito,","service":"user-service"}
{"level":"info","message":"no debe incluir caracteres repetidos tres o m√°s veces, debe cifrarse cuando se transmite y almacena, etc. Nada de esto puede llevar mucho tiempo, pero en conjunto puede hacer que la historia sea un poco demasiado grande para caber en una iteraci√≥n. Esto se puede resolver eliminando las precauciones de seguridad de la historia de inicio de sesi√≥n y creando versiones no seguras y seguras de la historia. La segunda historia podr√≠a enumerar las precauciones de seguridad planificadas, como la longitud de la contrase√±a, las restricciones de caracteres, etc. Probablemente no elegir√≠a lanzar el producto con solo la primera historia no segura desarrollada, pero podr√≠a ser valioso dividir la gran historia inicial de esta manera. Esto lleva a nuestra siguiente gu√≠a:","service":"user-service"}
{"level":"info","message":"Considere eliminar preocupaciones transversales (como seguridad, registro, manejo de errores, etc.) y cree dos versiones de la historia: una con y otra sin apoyo para la preocupaci√≥n transversal.","service":"user-service"}
{"level":"info","message":"En el desarrollo de software, a menudo olvidamos (o ignoramos) el consejo de Kernighan y Plauger (1974) de \"Haz que funcione, luego hazlo m√°s r√°pido\". Hace unos a√±os estaba en un proyecto para mostrar gr√°ficos de precios del mercado de valores. Los usuarios de la web solicitar√≠an un gr√°fico con el s√≠mbolo de cotizaci√≥n de la acci√≥n. Nuestro c√≥digo luego recuperar√≠a el historial de precios de esa acci√≥n (en cualquiera de una variedad de per√≠odos de tiempo desde el d√≠a actual hasta los √∫ltimos cinco a√±os) y mostrar√≠a un gr√°fico de l√≠neas de la acci√≥n. Entre las condiciones de satisfacci√≥n asociadas con esa caracter√≠stica estaban las que cubr√≠an la precisi√≥n de la l√≠nea, el manejo de los datos faltantes y el desempe√±o. Para cumplir con el objetivo de rendimiento, necesitar√≠amos almacenar en cach√© los gr√°ficos solicitados con m√°s frecuencia, regenerando cada uno una vez por minuto. Debido a que el almacenamiento en cach√© ser√≠a una parte importante del esfuerzo para ofrecer esta nueva funci√≥n, la separamos en una nueva historia de usuario y la programamos para la siguiente iteraci√≥n. De manera m√°s general, este mismo enfoque se puede aplicar a cualquier requisito no funcional, lo que lleva a nuestra siguiente directriz:","service":"user-service"}
{"level":"info","message":"Considere dividir una historia grande separando los aspectos funcionales y no funcionales en historias separadas.","service":"user-service"}
{"level":"info","message":"Por ejemplo, este enfoque se puede aplicar si una nueva caracter√≠stica debe consumir menos de una cantidad definida de memoria, dibujarse con menos de un n√∫mero de formas o usar un recurso cr√≠tico por menos de una cantidad de tiempo definida. Historias divididas de prioridad mixta Ocasionalmente, una historia comprende varias subhistorias m√°s peque√±as que tienen diferente prioridad. Supongamos que un proyecto incluye una historia t√≠pica de inicio de sesi√≥n: \"Como usuario, debo iniciar sesi√≥n en el sistema\". El propietario del producto expresa sus condiciones de satisfacci√≥n para esta historia, e incluyen lo siguiente:‚óÜ Si el usuario ingresa un nombre de usuario y una contrase√±a v√°lidos, se le otorga acceso.‚óÜ Si el usuario ingresa una contrase√±a no v√°lida tres veces seguidas, se le niega acceso hasta que llame al servicio de atenci√≥n al cliente.‚óÜ Si se niega el acceso al usuario, se le env√≠a un correo electr√≥nico que indica que se intent√≥ usar su cuenta. Esta historia es demasiado grande para caber en una iteraci√≥n, por lo que debe dividirse. La historia se puede dividir buscando elementos de baja prioridad. En este caso, el propietario del producto no enviar√≠a el producto si no fuera compatible con la funcionalidad principal de inicio de sesi√≥n. Sin embargo, podr√≠a estar dispuesto a lanzar el producto sin un mecanismo de tiempo de espera de reintento o sin enviar un correo electr√≥nico sobre el intento de acceso. Esto lleva a otra pauta sobre la divisi√≥n de historias:","service":"user-service"}
{"level":"info","message":"Separe una historia grande en historias m√°s peque√±as si las historias m√°s peque√±as tienen diferentes prioridades.","service":"user-service"}
{"level":"info","message":"A veces, nos encontramos con una caracter√≠stica que es dif√≠cil de dividir. En estos casos, es tentador dividir la caracter√≠stica en sus tareas constituyentes. Para la mayor√≠a de los desarrolladores de software, considerar una caracter√≠stica y descomponerla en sus tareas constituyentes es un h√°bito tal que a menudo lo hacemos sin siquiera ser conscientes de ello. Por ejemplo, no divida una historia en lo siguiente: ‚óÜ Codifique la interfaz de usuario. ‚óÜ Escriba el nivel intermedio.","service":"user-service"}
{"level":"info","message":"La mejor manera de evitar esta tentaci√≥n es seguir el consejo de Hunt y Thomas (1999) de disparar una bala trazadora a trav√©s del sistema. Una bala trazadora viaja a trav√©s de todas las capas de una entidad. Eso puede significar entregar una interfaz de usuario parcial, un nivel intermedio parcial y una base de datos parcial. La entrega de un subconjunto cohesivo de todas las capas de una caracter√≠stica casi siempre es mejor que la entrega de una sola capa. Esto lleva a otra directriz:","service":"user-service"}
{"level":"info","message":"No divida una gran historia en tareas. En su lugar, trate de encontrar una manera de disparar una bala trazadora a trav√©s de la historia.","service":"user-service"}
{"level":"info","message":"Una vez que haya dividido una historia y la tenga en un tama√±o adecuado, no empeore las cosas agregando trabajo a la historia. A menudo, esto viene en forma de tentaci√≥n de cambios relacionados. Nos decimos a nosotros mismos: \"Mientras estoy en ese c√≥digo, tambi√©n podr√≠a ocuparme de estos otros cambios persistentes\". Es muy posible que sea apropiado corregir un error o abordar un problema antiguo mientras se trabaja en un problema separado en la misma parte del c√≥digo. Sin embargo, la prioridad de hacerlo debe considerarse de la misma manera en que se consideraron las prioridades para otras funciones. En otras palabras, ¬øqu√© es m√°s prioritario: pasar medio d√≠a arreglando un error de hace un a√±o o pasar la misma cantidad de tiempo en otra cosa? La respuesta es claramente contextual y se convierte en la directriz final de este cap√≠tulo:","service":"user-service"}
{"level":"info","message":"Evite empeorar las cosas agregando cambios relacionados a una funci√≥n de tama√±o adecuado, a menos que los cambios relacionados tengan una prioridad equivalente.","service":"user-service"}
{"level":"info","message":"Con todos estos consejos sobre la divisi√≥n de historias, puede ser tentador pensar que cada historia de usuario en la que se va a trabajar debe hacerse lo m√°s peque√±a posible. Ese no es el caso. Para los equipos que trabajan en iteraciones de dos semanas, es apropiado dividir las funciones de manera que cada una se pueda realizar en dos a cinco d√≠as m√°s o menos. (Las historias a√∫n pueden estimarse en puntos de historia, pero cuando un equipo necesite dividir las historias, sabr√°n aproximadamente cu√°ntos puntos de historia o d√≠as ideales equivalen a alrededor de dos a cinco d√≠as). Las historias deber√°n ser un poco m√°s peque√±as para las iteraciones de una semana. y","service":"user-service"}
{"level":"info","message":"puede, pero no es necesario, ser un poco m√°s grande para iteraciones m√°s largas. Las historias de estos tama√±os aproximados fluyen mejor a trav√©s de las iteraciones cortas de un proyecto √°gil. As√≠ como es posible que necesitemos dividir historias grandes, es posible que debamos combinar varias historias peque√±as. Las historias combinadas se estiman como un todo en lugar de individualmente. Cuando sea posible, intente combinar historias relacionadas, ya que eso har√° que sea m√°s f√°cil priorizarlas. Es muy com√∫n combinar varios informes de errores y tratarlos como un solo elemento.","service":"user-service"}
{"level":"info","message":"Puede ser √∫til dividir una historia que no encaja en una iteraci√≥n, ya sea porque es demasiado grande para cualquier iteraci√≥n o porque es demasiado grande para caber en el tiempo restante de una iteraci√≥n que se est√° planificando. Tambi√©n es √∫til dividir una historia grande si necesita proporcionar una estimaci√≥n m√°s precisa que la que se puede hacer de una historia grande. Una historia puede dividirse por el tipo de datos que admitir√°. Una historia tambi√©n se puede dividir en funci√≥n de las operaciones inherentes a la historia. La divisi√≥n de historias en las operaciones CRUD comunes (Crear, Leer, Actualizar, Eliminar) es com√∫n. Una historia se puede hacer m√°s peque√±a al segmentar cualquier preocupaci√≥n transversal, como la seguridad, el registro, el manejo de errores, etc. Una historia tambi√©n puede reducirse si se ignoran los objetivos de rendimiento durante la iteraci√≥n en la que la historia se vuelve funcional. El objetivo de rendimiento puede convertirse en su propia historia y satisfacerse en una iteraci√≥n posterior. Muchas historias describen dos o m√°s necesidades. Si estas necesidades tienen diferente prioridad, divida las historias de esa manera. Evite dividir una historia en las tareas de desarrollo que ser√°n necesarias para implementar la funci√≥n. Dividir el trabajo en sus tareas necesarias es un h√°bito para nosotros que es f√°cil para nosotros comenzar a dividir las historias de usuario de esa manera. Evite la tentaci√≥n de agrandar una gran historia al incluir cambios relacionados que no son necesarios para la entrega de la historia de usuario. Finalmente, recuerde que a veces es apropiado combinar historias de usuario, especialmente en el caso de correcciones de errores, que pueden ser demasiado peque√±os por s√≠ solos.","service":"user-service"}
{"level":"info","message":"1. ¬øCu√°les son algunas historias de usuarios sobre un proyecto actual o reciente que le resultaron dif√≠ciles de dividir? ¬øC√≥mo podr√≠as dividirlos ahora?2. ¬øQu√© problemas cree que se producen al dividir una historia en tareas y luego tratarlas como historias de usuario?","service":"user-service"}
{"level":"info","message":"Las dos partes anteriores cubrieron la estimaci√≥n del tama√±o de cada nueva pieza de funcionalidad deseada y luego la priorizaci√≥n para que el equipo tenga como objetivo construir el mejor producto posible. En esta parte del libro, nos enfocamos en crear un cronograma. En los siguientes dos cap√≠tulos, comenzamos analizando los pasos esenciales para planificar un lanzamiento y luego para planificar una iteraci√≥n. El siguiente cap√≠tulo ofrece consejos sobre c√≥mo seleccionar una longitud de iteraci√≥n adecuada. Adem√°s de conocer el tama√±o del trabajo que se completar√°, si queremos estimar cu√°nto tiempo es probable que tome un proyecto, debemos estimar la tasa de progreso del equipo a trav√©s de ese trabajo. Por lo tanto, estimar la velocidad es el tema del pr√≥ximo cap√≠tulo. Los dos cap√≠tulos finales de esta parte cubren situaciones de mayor complejidad o incertidumbre. El primero es c√≥mo planificar un proyecto cuando hay enormes implicaciones por estar equivocado con respecto al cronograma o cuando se debe estimar un cronograma preliminar con mucha anticipaci√≥n y con informaci√≥n muy limitada. Esta parte concluye con un cap√≠tulo que describe las cosas adicionales necesarias en la planificaci√≥n de un proyecto que involucra a varios equipos.","service":"user-service"}
{"level":"info","message":"‚ÄúUsted improvisa. te adaptas Lo superas‚Äù.‚ÄîClint Eastwood en Heartbreak RidgeLa planificaci√≥n del lanzamiento es el proceso de crear un plan de muy alto nivel que cubre un per√≠odo m√°s largo que una iteraci√≥n. Un lanzamiento t√≠pico cubrir√° quiz√°s de tres a seis meses y quiz√°s de tres a doce o m√°s iteraciones, dependiendo de cu√°n largas sean las iteraciones. Un plan de lanzamiento es importante por varias razones. En primer lugar, ayuda al propietario del producto y a todo el equipo a decidir cu√°nto se debe desarrollar y cu√°nto tiempo llevar√° antes de tener un producto que se pueda lanzar. Cuanto antes se pueda lanzar el producto (y mejor es cuando se lanza), m√°s pronto la organizaci√≥n comenzar√° a obtener un retorno de su inversi√≥n en el proyecto. En segundo lugar, un plan de lanzamiento transmite expectativas sobre lo que es probable que se desarrolle y en qu√© plazo. Muchas organizaciones necesitan esta informaci√≥n porque alimenta otras actividades de planificaci√≥n estrat√©gica. En tercer lugar, un plan de lanzamiento sirve como una gu√≠a hacia la que puede avanzar el equipo del proyecto. Sin el concepto de lanzamiento, los equipos se mueven sin cesar de una iteraci√≥n a la siguiente. Un plan de lanzamiento proporciona un contexto que permite que las iteraciones se combinen en un todo satisfactorio. Esta es una preocupaci√≥n fundamental con cualquier proceso iterativo, no solo con los √°giles. Un excursionista que desee llegar a la cima de una monta√±a puede dirigirse al pico m√°s alto que vea. Sin embargo, una vez que llega a esa cumbre, se entera de que era un pico falso. Una cumbre m√°s alta hab√≠a sido oscurecida por la que √©l hab√≠a alcanzado. El excursionista se dirige hacia la cumbre m√°s alta, solo para descubrir que tambi√©n es un pico falso, y ahora se ve una cumbre a√∫n m√°s alta. Esta forma bastante tortuosa de escalar una monta√±a puede aplicarse igualmente a proyectos iterativos. Afortunadamente, los problemas que crea se eliminan al tener un plan de lanzamiento que muestra la expectativa actual de un equipo de ad√≥nde desea llegar en √∫ltima instancia.","service":"user-service"}
{"level":"info","message":"Parte de la planificaci√≥n de un lanzamiento es determinar cu√°nto se puede lograr en qu√© fecha. En algunos casos, comenzamos con una fecha y vemos cu√°nto se puede terminar para entonces. En otros casos, comenzamos con un conjunto de historias de usuarios y vemos cu√°nto tiempo llevar√° desarrollarlas. En ambos casos, una vez que un equipo tiene una respuesta inicial, se eval√∫a frente a los objetivos de la organizaci√≥n para el proyecto: ¬øEl producto desarrollado generar√° la cantidad de dinero deseada? ¬øAhorrar√° suficiente dinero? ¬øCapturar√° el producto la cuota de mercado objetivo? Si no, tal vez un proyecto m√°s largo o m√°s corto pueda lograr un conjunto aceptable de objetivos. En un nivel superficial, determinar cu√°nto trabajo cabe en una versi√≥n y qu√© historias de usuario ser√°n es un proceso muy sencillo. Multiplicar el n√∫mero planificado de iteraciones por la velocidad esperada o conocida del equipo nos da la cantidad total de trabajo que se puede realizar. Luego seleccionamos la cantidad de historias de usuario que se ajustar√°n y listo. Suponga que deseamos enviar un nuevo producto en seis meses. Planeamos trabajar en iteraciones de dos semanas, por lo que habr√° trece iteraciones durante el proyecto. Esperamos que la velocidad del equipo sea de veinte puntos de historia o d√≠as ideales por iteraci√≥n. El tama√±o del proyecto total es entonces puntos de historia o d√≠as ideales. Luego, el propietario del producto y el equipo podr√≠an discutir todas las historias y priorizarlas para ofrecer el mayor valor posible sin pasar de 260. El plan de lanzamiento en s√≠ generalmente se documenta como una simple lista de las historias de usuarios que se desarrollar√°n durante el proyecto. Durante la planificaci√≥n del lanzamiento, no queremos crear un plan que indique qu√© desarrolladores trabajar√°n en qu√© historias de usuario o tareas, o la secuencia en la que se realizar√° el trabajo dentro de una iteraci√≥n. Crear un plan con ese nivel de detalle durante la planificaci√≥n del lanzamiento es peligroso y enga√±oso. Las decisiones sobre qui√©n trabaja en qu√© y la secuencia de actividades es mejor dejarlas en manos de las personas que trabajan en esas tareas y es mejor postergarlas tanto como sea posible. Adem√°s, recuerde que los elementos de un plan de lanzamiento son historias de usuario, que son descripciones de la funcionalidad que se entregar√°, no tareas de ingenier√≠a individuales que se realizar√°n. Durante la planificaci√≥n del lanzamiento, es demasiado pronto y es posible que algunas historias de usuarios no se entiendan lo suficiente como para desagregarlas en tareas de ingenier√≠a. Como ver√° en el Cap√≠tulo 14, \"Planificaci√≥n de la iteraci√≥n\", el equipo eventualmente desagregar√° el","service":"user-service"}
{"level":"info","message":"historias de usuario del plan de lanzamiento en sus tareas constituyentes. Pero no har√°n esto hasta el comienzo de la iteraci√≥n que contiene esas historias. Naturalmente, si su proyecto, organizaci√≥n y entorno de trabajo lo justifican, puede incluir informaci√≥n adicional en un plan de lanzamiento. Por ejemplo, es posible que desee comunicar algunos supuestos clave subyacentes al plan. En particular, es posible que desee establecer suposiciones sobre qui√©n est√° en el equipo, cu√°nto durar√°n las iteraciones, la fecha en que comenzar√° la primera iteraci√≥n y la fecha en que finalizar√° la √∫ltima iteraci√≥n. El Cap√≠tulo 21, \"Comunicaci√≥n sobre planes\", describir√° informaci√≥n √∫til adicional que quiz√°s desee incluir al comunicarse sobre un plan de lanzamiento. Los pasos generales para planificar un lanzamiento se muestran en la Figura 13.1. Cada uno de estos pasos se describir√° en las secciones siguientes.","service":"user-service"}
{"level":"info","message":"Determinar las Condiciones de Satisfacci√≥n Antes de comenzar a planificar un lanzamiento, es importante conocer los criterios por los cuales el proyecto ser√° evaluado como un √©xito o un fracaso. Para la mayor√≠a de los proyectos, la √∫ltima tarjeta de puntuaci√≥n es la cantidad de dinero ahorrado o generado. Como indicadores principales de si es probable que un proyecto logre estos objetivos financieros, la mayor√≠a de los proyectos utilizan el triunvirato de cronograma, alcance y recursos. Para la mayor√≠a de los proyectos, esto significa que las condiciones de satisfacci√≥n del propietario del producto est√°n definidas por una combinaci√≥n de objetivos de cronograma, alcance y recursos. El propietario del producto traer√° los objetivos deseados para cada uno de estos factores en casi todas las reuniones de planificaci√≥n de lanzamiento. El propietario de un producto puede querer desarrollar cuatro temas (con un valor de 200 puntos de historia) en tres meses sin agregar personal, por ejemplo. Aunque a menudo se identifica un objetivo para cada factor, generalmente un factor es preeminente. Los proyectos suelen estar basados ‚Äã‚Äãen fechas o funciones. Un proyecto basado en fechas es aquel que debe lanzarse en una fecha determinada pero para el cual el conjunto de funciones es negociable. Un proyecto basado en funciones es uno que probablemente nos gustar√≠a lanzar lo antes posible, pero para el cual consideramos que es m√°s importante completar un conjunto de funciones.","service":"user-service"}
{"level":"info","message":"Estime las historias de usuario Debido a que una estimaci√≥n representa el costo de desarrollar una historia de usuario, es importante que cada una haya sido estimada. Imagina que has decidido reemplazar todas las prendas de vestir de tu armario. Llegas al centro comercial y empiezas a comprar. Sin embargo, observa que se han quitado todas las etiquetas de precios y que no tiene forma de saber el costo de nada. Esto es lo que se siente ser un propietario de producto al que no se le proporcionan estimaciones. No es necesario estimar todo lo que un propietario de producto pueda desear. Solo es necesario tener una estimaci√≥n para cada caracter√≠stica nueva que tenga alguna posibilidad razonable de ser seleccionada para su inclusi√≥n en el pr√≥ximo lanzamiento. A menudo, el propietario de un producto tendr√° una lista de deseos que se extiende a dos, tres o m√°s lanzamientos en el futuro. No es necesario tener estimaciones sobre el trabajo m√°s distante. Seleccione una duraci√≥n de iteraci√≥n La mayor√≠a de los equipos √°giles trabajan en iteraciones de dos a cuatro semanas. Es posible ir un poco m√°s largo, y algunos equipos han experimentado con iteraciones a√∫n m√°s cortas. Al planificar un lanzamiento, ser√° necesario elegir una duraci√≥n de iteraci√≥n adecuada. En el Cap√≠tulo 15, \"Selecci√≥n de una duraci√≥n de iteraci√≥n\", se proporciona orientaci√≥n sobre c√≥mo hacerlo. equipo tiene experiencia trabajando juntos, su mejor apuesta es a menudo usar la velocidad que el equipo exhibi√≥ m√°s recientemente. Naturalmente, si la tecnolog√≠a o el dominio comercial ha cambiado dr√°sticamente, puede que no sea apropiado utilizar la velocidad anterior de un equipo. A√∫n as√≠, hay t√©cnicas que puede aplicar que le permiten hacer una estimaci√≥n informada de la velocidad basada en resultados anteriores. En el Cap√≠tulo 16, ‚ÄúEstimaci√≥n de la velocidad‚Äù, veremos tales t√©cnicas y tambi√©n exploraremos opciones para estimar la velocidad.","service":"user-service"}
{"level":"info","message":"Priorice las historias de usuarios La mayor√≠a de los proyectos tienen muy poco tiempo o demasiadas funciones. A menudo es imposible hacer todo lo que todos quieren en el tiempo permitido. Debido a esto, el propietario del producto debe priorizar las funciones que desea desarrollar. El propietario de un buen producto aceptar√° la responsabilidad √∫ltima de priorizar, pero escuchar√° los consejos del equipo de desarrollo, especialmente sobre la secuenciaci√≥n. Las historias de usuario se priorizan seg√∫n las pautas proporcionadas en la parte anterior de este libro. Seleccione historias y una fecha de lanzamiento En este punto, tiene una estimaci√≥n de la velocidad del equipo por iteraci√≥n y tiene una suposici√≥n sobre cu√°ntas iteraciones habr√°. Es hora de ver si se puede planificar un lanzamiento que cumpla con las condiciones de satisfacci√≥n del proyecto. Si el proyecto est√° basado en funciones, podemos sumar las estimaciones de todas las funciones necesarias y dividirlas por la velocidad esperada. Esto nos dar√° la cantidad de iteraciones necesarias para completar la funcionalidad deseada. Si el proyecto est√° basado en fechas, podemos determinar la cantidad de iteraciones mirando un calendario. Multiplicar el n√∫mero de iteraciones por la velocidad esperada nos dir√° cu√°ntos puntos de historia o d√≠as ideales caben en el lanzamiento. Podemos contar esa cantidad de puntos o d√≠as ideales en la lista priorizada de historias de usuarios y ver cu√°nta funcionalidad se puede entregar en el tiempo deseado. La siguiente pregunta que se abordar√° es qu√© tan detallado ser√° el plan de lanzamiento. Algunos equipos en algunos entornos prefieren crear un plan de lanzamiento que muestre lo que esperan desarrollar durante cada iteraci√≥n. Otros equipos prefieren simplemente determinar lo que creen que se desarrollar√° durante el lanzamiento general, dejando los detalles de cada iteraci√≥n para m√°s adelante. Esto es algo que el equipo debe analizar y decidir durante la planificaci√≥n del lanzamiento. Hay ventajas y desventajas para cada enfoque. Obviamente, asignar funciones espec√≠ficas a iteraciones espec√≠ficas lleva m√°s tiempo.","service":"user-service"}
{"level":"info","message":"Sin embargo, los detalles adicionales que esto proporciona pueden ser √∫tiles cuando se coordina el trabajo entre varios equipos. Por otro lado, no asignar trabajo a iteraciones espec√≠ficas proporciona menos detalles, pero lleva mucho menos tiempo. Adem√°s, incluso si asignamos trabajo preliminarmente a iteraciones espec√≠ficas, lo hacemos con menos conocimiento del que tendremos al comienzo de cada iteraci√≥n. Sin duda, el plan cambiar√° a medida que vayamos conociendo m√°s a lo largo del proyecto. Por lo tanto, la inversi√≥n de tiempo y esfuerzo para asignar trabajo a iteraciones espec√≠ficas debe sopesarse frente a esto. A√∫n as√≠, en algunos proyectos tal vez valga la pena hacerlo. Lo que encuentro que es un buen compromiso es colocar trabajo espec√≠fico en las primeras tres iteraciones, tratando el resto del plan de lanzamiento como un cubo grande. Casi siempre vale la pena asignar trabajo espec√≠fico a la primera iteraci√≥n, especialmente si comienza de inmediato. Debido a que hay muchas preguntas de toma y daca y qu√© pasar√≠a si durante una sesi√≥n t√≠pica de planificaci√≥n de lanzamiento, queremos una manera f√°cil de manipular lo que est√° dentro y fuera del lanzamiento y sus iteraciones. La mejor manera de lograr esto, suponiendo que todos est√©n ubicados, es trabajar con tarjetas de notas de 3\" x 5\" o blocs adhesivos con historias de usuarios o funciones escritas en ellos. A diferencia del software, las tarjetas son tangibles y f√°ciles de compartir. Para planificar un lanzamiento, el propietario del producto selecciona sus elementos de m√°xima prioridad que encajar√°n en la primera iteraci√≥n. Las tarjetas se apilan o se organizan para indicar qu√© historias comprenden cada iteraci√≥n. La figura 13.2 muestra una forma de hacerlo. Las cartas se pueden colocar as√≠ sobre una mesa o una pared. Si est√° usando una pared, un tablero de corcho es muy efectivo, porque las tarjetas se pueden clavar en el tablero en lugar de pegarlas con cinta adhesiva a la pared. 13.2 y verifique que cada iteraci√≥n contenga la cantidad correcta de trabajo.","service":"user-service"}
{"level":"info","message":"En este punto, el plan de lanzamiento est√° hecho. Sin embargo, es importante que el plan de lanzamiento no se guarde en alg√∫n lugar o se coloque en un estante, para no volver a tocarlo nunca m√°s. El plan de lanzamiento debe revisarse y actualizarse con cierta frecuencia regular. Si la velocidad del equipo de desarrollo se ha mantenido bastante constante y la planificaci√≥n de la iteraci√≥n no ha presentado grandes sorpresas, es posible que desee pasar de cuatro a seis semanas sin actualizar formalmente el plan de lanzamiento. Por otro lado, muchos proyectos se benefician al establecer una regla de que el plan de lanzamiento se revisar√° despu√©s de cada iteraci√≥n. Para unir todo lo anterior, consideremos un ejemplo muy breve. Volveremos a utilizar el sitio web de SwimStats. A trav√©s de la investigaci√≥n de mercado, hemos descubierto que los entrenadores y nadadores de nuestro p√∫blico objetivo desean las caracter√≠sticas descritas en las siguientes historias de usuarios:‚óÜ Como entrenador, puedo definir sesiones de pr√°ctica.‚óÜ Como entrenador, puedo definir campos personalizados que quiero rastrear para cada nadador.‚óÜ Como nadador, puedo generar un informe que muestre mi mejora en todos los eventos desde una fecha pasada.‚óÜ Como nadador, puedo actualizar mi informaci√≥n demogr√°fica.‚óÜ Como entrenador, puedo enviar un correo electr√≥nico a todos los nadadores en el equipo.‚óÜ Como administrador del sistema, puedo configurar permisos y grupos de usuarios.‚óÜ Como entrenador, puedo comprar SwimStats y usarlo para mi equipo.‚óÜ Como nadador, puedo comparar mis tiempos con r√©cords nacionales.‚óÜ Como como entrenador, puedo ingresar los nombres y la informaci√≥n demogr√°fica de todos los nadadores de mi equipo.‚óÜ Como nadador, puedo ver mis mejores tiempos en cada evento.‚óÜ Como usuario, debo iniciar sesi√≥n y solo puedo ver los datos de que tengo permiso.‚óÜ Como nadador, puedo ver todos mis tiempos para un evento espec√≠fico. Determinaci√≥n de las condiciones de satisfacci√≥n La temporada de nataci√≥n de primavera comienza en cuatro meses. La primera versi√≥n del sitio web de SwimStats debe estar disponible un mes antes. Al propietario del producto le gustar√≠a tener tantas funciones como sea posible, pero este es un proyecto basado en fechas. Algo debe ser liberable en tres meses, incluso si es solo lo b√°sico para peque√±os equipos de nataci√≥n.","service":"user-service"}
{"level":"info","message":"Como puesta en marcha, el presupuesto tambi√©n es fijo. El proyecto debe realizarse con el programador, el administrador de la base de datos y el evaluador que ya forman parte del personal. Estimaci√≥n Los tres desarrolladores que trabajar√°n en el proyecto se re√∫nen con el propietario del producto. Hacen preguntas sobre las historias de los usuarios y el producto. propietario aclara la intenci√≥n de cada uno. El equipo elige estimar en puntos de historia y asigna las estimaciones que se muestran en la Tabla 13.1.","service":"user-service"}
{"level":"info","message":"Selecci√≥n de la duraci√≥n de la iteraci√≥n Debido a que todo el proyecto solo durar√° tres meses, los desarrolladores y el propietario del producto est√°n de acuerdo en que las iteraciones de cuatro semanas son demasiado largas. Ejecutar iteraciones de cuatro semanas simplemente no les dar√° suficientes puntos de control sobre el progreso del equipo ni suficientes oportunidades para que el propietario del producto dirija el proyecto ajustando las prioridades. Con base en los puntos que se presentar√°n en el Cap√≠tulo 15, ‚ÄúSelecci√≥n de una duraci√≥n de iteraci√≥n‚Äù, todos acuerdan ejecutar iteraciones de dos semanas. Estimaci√≥n de la velocidad Este proyecto ser√° trabajado por dos programadores y un evaluador. Utilizando las t√©cnicas que aprender√° en el Cap√≠tulo 16, \"Estimaci√≥n de la velocidad\", pronostican una velocidad de ocho puntos de historia por iteraci√≥n. Priorizaci√≥n de las historias de usuario El propietario del producto, seg√∫n la investigaci√≥n de mercado que se ha realizado, prioriza las historias. La lista de pisos priorizados, junto con la estimaci√≥n para cada piso, se muestra en la Tabla 13.1.","service":"user-service"}
{"level":"info","message":"Selecci√≥n de las historias de usuario Debido a que este es un proyecto basado en fechas, sabemos cu√°ntas iteraciones puede haber. El propietario del producto quiere un lanzamiento en tres meses, por lo que hay tiempo para seis iteraciones de dos semanas seguidas de una semana adicional en caso de que sea necesario. Con una velocidad estimada de ocho puntos por iteraci√≥n, esto significa que el lanzamiento se planificar√° para incluir puntos de historia. El propietario del producto podr√° seleccionar hasta cuarenta y ocho puntos de la Tabla 13.1 para incluirlos en el lanzamiento. El propietario del producto ha clasificado las historias de usuario de la Tabla 13.1 en orden descendente seg√∫n el valor que cree que tendr√° cada uno para el lanzamiento inicial. de SwimStats. El propietario del producto puede seleccionar hasta cuarenta y ocho puntos. Inicialmente indica que le gustar√≠a seleccionar las primeras ocho historias, a trav√©s de \"Como nadadora, puedo comparar mis tiempos con los r√©cords nacionales\". Esto es un total de cuarenta y seis puntos, lo suficientemente cerca de cuarenta y ocho que el propietario del producto acepta detenerse all√≠. Sin embargo, los desarrolladores se√±alan que la historia priorizada como la m√°s baja por el propietario del producto es necesaria: ‚ÄúComo administrador del sistema, yo puede configurar permisos y grupos de usuarios.‚Äù Esta noticia se estima en tres puntos, lo que situar√≠a el estreno en cuarenta y nueve y por encima de los cuarenta y ocho previstos. Los cuarenta y ocho puntos son una suposici√≥n bastante aproximada, y se planea una semana adicional despu√©s de la sexta iteraci√≥n. Algunos equipos pueden permitir cuarenta y nueve puntos en estas circunstancias. Sin embargo, el equipo de SwimStats decide no permitir cuarenta y nueve puntos. Si se agrega una historia de tres puntos, se debe eliminar al menos un punto del lanzamiento. El propietario del producto decide abandonar el ocho puntos \"Como nadador, puedo","service":"user-service"}
{"level":"info","message":"comparar mis tiempos con los r√©cords nacionales‚Äù. Esto reduce el lanzamiento a cuarenta y un puntos. El propietario del producto podr√≠a agregar la historia de tres puntos: \"Como entrenadora, puedo enviar un correo electr√≥nico a todos los nadadores del equipo\" al comunicado, pero decide no hacerlo. Si el equipo obtiene incluso un punto antes de lo previsto, preferir√≠a volver a agregar la historia de ocho puntos que dej√≥ caer. Esto hace el plan de lanzamiento final como se muestra en la Tabla 13.2.","service":"user-service"}
{"level":"info","message":"Un plan de lanzamiento es un plan de alto nivel que cubre un per√≠odo m√°s largo que una iteraci√≥n. Para la mayor√≠a de los equipos, un lanzamiento ocurre cada tres a seis meses, pero no es inusual tener lanzamientos con mayor o menor frecuencia, seg√∫n el tipo de software. En su nivel m√°s simple, la planificaci√≥n del lanzamiento es trivial: multiplique la velocidad esperada por el n√∫mero de iteraciones planificadas y luego seleccione historias cuyas estimaciones se suman para completar el lanzamiento. Un plan de lanzamiento no tiene que describir exactamente en qu√© se trabajar√° durante cada iteraci√≥n. De hecho, ese nivel de detalle rara vez se necesita. Para la mayor√≠a de los proyectos, es bastante adecuado identificar las historias en las que se trabajar√° en el primer par de iteraciones, dejando que las historias restantes se prioricen en iteraciones espec√≠ficas m√°s adelante.","service":"user-service"}
{"level":"info","message":"La planificaci√≥n del lanzamiento es un proceso iterativo que comienza con la identificaci√≥n de las condiciones de satisfacci√≥n del propietario del producto para el proyecto. Por lo general, incluyen metas para el cronograma, el alcance y los recursos. Si no se puede planificar un proyecto que cumpla con el conjunto de condiciones iniciales de satisfacci√≥n, se repite el proceso de planificaci√≥n para ver si se puede cumplir con un conjunto reducido de condiciones; tal vez la funcionalidad deseada se pueda entregar un poco m√°s tarde o con un equipo m√°s grande. Una vez que se ha creado un plan de lanzamiento, no se deja colgado en una pared para que se pudra. Por lo general, se actualiza al comienzo de cada iteraci√≥n. Preguntas de discusi√≥n 1. ¬øSu proyecto actual est√° basado en la fecha o en las caracter√≠sticas? ¬øQu√© lo hace as√≠? 2. En su organizaci√≥n o en su proyecto actual, ¬øcon qu√© frecuencia se debe actualizar un plan de lanzamiento?","service":"user-service"}
{"level":"info","message":"‚ÄúEs un error capital teorizar antes de tener datos‚Äù.‚ÄîSherlock Holmes, Scandal in Bohemia Un plan de lanzamiento es una excelente visi√≥n de alto nivel de c√≥mo un equipo intenta entregar el producto m√°s valioso que pueda. Sin embargo, un plan de lanzamiento proporciona solo la vista de alto nivel del producto que se est√° construyendo. No proporciona la vista m√°s detallada y a corto plazo que los equipos usan para impulsar el trabajo que ocurre dentro de una iteraci√≥n. Con un plan de iteraci√≥n, un equipo toma una mirada m√°s enfocada y detallada de lo que ser√° necesario para implementar completamente solo aquellas historias de usuario seleccionadas. para la nueva iteraci√≥n. Se crea un plan de iteraci√≥n en una reuni√≥n de planificaci√≥n de iteraci√≥n. A esta reuni√≥n deben asistir el propietario del producto, analistas, programadores, probadores, ingenieros de bases de datos, dise√±adores de interacci√≥n con el usuario, etc. Cualquier persona involucrada en tomar una idea en bruto y convertirla en un producto funcional debe estar presente. De manera tangible, un plan de iteraci√≥n puede ser tan simple como una hoja de c√°lculo o un conjunto de tarjetas con una tarea escrita a mano en cada tarjeta. En cualquier caso, las tareas y las historias deben organizarse de modo que sea posible saber qu√© tareas van con qu√© historias. Por ejemplo, consulte la Tabla 14.1, que muestra un plan de iteraci√≥n en una hoja de c√°lculo. Las tareas se muestran una por fila y est√°n sangradas debajo de la historia. a las que se aplican. Como alternativa a una hoja de c√°lculo, consulte la figura 14.1, que ilustra el uso de tarjetas de notas para la planificaci√≥n de iteraciones. Las tarjetas se pueden organizar como en esa figura en","service":"user-service"}
{"level":"info","message":"una mesa o piso, o peg√°ndolos con cinta adhesiva o fij√°ndolos a una pared. Para equipos coubicados, mi preferencia es hacer la planificaci√≥n de la iteraci√≥n con tarjetas de notas. El equipo puede salir de una reuni√≥n de planificaci√≥n de la iteraci√≥n e inmediatamente escribir las tarjetas en un sistema de software, si as√≠ lo desean, pero existen beneficios muy reales al usar tarjetas durante la reuni√≥n.","service":"user-service"}
{"level":"info","message":"Una de las ventajas m√°s significativas de usar tarjetas de notas durante la planificaci√≥n de la iteraci√≥n es que permite que todos participen en el proceso. Si las tareas se escriben en un sistema durante la reuni√≥n de planificaci√≥n de la iteraci√≥n, alguien tiene sus dedos en el teclado. Hay un tremendo poder en tener control sobre el teclado. Es mejor que todas las conversaciones involucren al mecan√≥grafo, o no se ingresar√° nada en el plan de publicaci√≥n. Peor a√∫n, quienquiera que tenga el teclado puede cambiar lo que se ingresa en el plan de lanzamiento. Dos ejemplos atestiguan este poder. En el primer caso, el equipo discuti√≥ un art√≠culo en particular y decidi√≥ que deber√≠a estimarse en doce horas. El teclado estaba bajo el control de una combinaci√≥n de gerente de proyecto y l√≠der t√©cnico. Ingres√≥ una estimaci√≥n de ocho en el sistema porque \"no hay forma de que tome tanto tiempo\", a pesar de que era muy poco probable que fuera √©l quien hiciera la tarea.","service":"user-service"}
{"level":"info","message":"En el segundo caso, el equipo que yo estaba entrenando discuti√≥ c√≥mo se implementar√≠a una nueva funci√≥n: ¬øser√≠a c√≥digo Java del lado del servidor o un procedimiento almacenado en la base de datos? Todos menos el l√≠der del equipo, que ten√≠a el teclado, estuvieron de acuerdo en que se implementar√≠a a trav√©s de procedimientos almacenados. Se le pidi√≥ que creara una tarea de \"agregar procedimientos almacenados\" en su hoja de c√°lculo. En su lugar, escribi√≥ \"Escribir c√≥digo de almacenamiento de datos\". Su mensaje fue claro: este problema no se ha resuelto. Compare estas dos situaciones con una reuni√≥n de planificaci√≥n de iteraci√≥n en la que cualquiera puede agarrar una tarjeta y escribir una tarea en cualquier momento. El uso de tarjetas es un enfoque mucho m√°s democr√°tico y colaborativo y es probable que conduzca a mejores resultados a lo largo de la iteraci√≥n y el proyecto, no solo durante esa reuni√≥n. Las tareas no se asignan durante la planificaci√≥n de la iteraci√≥n aclarar una cosa que no se hace. Al planificar una iteraci√≥n, las tareas no se asignan a personas espec√≠ficas. Al comienzo de la iteraci√≥n, puede parecer obvio qui√©n trabajar√° en una tarea espec√≠fica; Sin embargo, seg√∫n el progreso de todo el equipo frente a todo el conjunto de tareas, lo que es obvio al principio puede no serlo.","service":"user-service"}
{"level":"info","message":"lo que sucede durante la iteraci√≥n. Por ejemplo, al planificar una iteraci√≥n, podemos suponer que nuestro administrador de base de datos completar√° la tarea de \"ajustar la consulta de b√∫squeda avanzada\" porque tiene las mejores habilidades de SQL en el equipo. Sin embargo, si no puede llegar a esta tarea, otra persona puede dar un paso al frente y hacerlo. Las personas no se registran para las tareas hasta que comienza la iteraci√≥n y, en general, se registran solo para una o dos tareas relacionadas a la vez. Las nuevas tareas no se inician hasta que se completan las previamente seleccionadas. No hay nada que ganar y bastante que perder al asignar personas a tareas espec√≠ficas durante la planificaci√≥n de la iteraci√≥n. Los proyectos funcionan mejor cuando fomentan una actitud de \"estamos todos juntos en esto\", cuando los miembros del equipo se dan la mano unos a otros sabiendo que se les devolver√° el favor. Cuando las personas se inscriben para tareas espec√≠ficas al comienzo de la iteraci√≥n, va en contra de fomentar un compromiso unificado para lograr los objetivos de la iteraci√≥n.","service":"user-service"}
{"level":"info","message":"El plan de lanzamiento contempla el lanzamiento del producto, generalmente de tres a seis meses al comienzo de un nuevo proyecto. Por el contrario, el plan de iteraci√≥n anticipa solo la duraci√≥n de una iteraci√≥n, generalmente de dos a cuatro semanas. Las historias de usuario del plan de lanzamiento se descomponen en tareas en el plan de iteraci√≥n. Donde las historias de usuario de un plan de lanzamiento se estiman en puntos de historia o d√≠as ideales, las tareas en el plan de iteraci√≥n se estiman en horas ideales. ¬øPor qu√© las tareas de una iteraci√≥n plan estimado en horas pero las historias de un plan de lanzamiento se estiman en puntos de historia o d√≠as ideales? Principalmente porque es posible hacerlo. El trabajo de una iteraci√≥n no es m√°s que unas pocas semanas, y el equipo debe tener un nivel razonable de comprensi√≥n del trabajo, especialmente despu√©s de discutirlo durante la reuni√≥n de planificaci√≥n de la iteraci√≥n. Esto les permite estimar de manera cre√≠ble las tareas de una iteraci√≥n en horas. Cada una de las historias de usuario que componen una versi√≥n representa m√∫ltiples tareas, son m√°s vagas y menos comprendidas, por lo que deben estimarse en unidades m√°s abstractas, como puntos de historia o d√≠as ideales. Estas diferencias principales entre un plan de versi√≥n y un plan de iteraci√≥n se resumen en la Tabla 14.2 .El objetivo principal de la planificaci√≥n de iteraciones es refinar las suposiciones hechas en el plan de lanzamiento de grano m√°s grueso. El plan de lanzamiento suele ser intencionalmente vago sobre el orden espec√≠fico en el que se trabajar√° en las historias de usuario. Adem√°s, en el momento de la planificaci√≥n de la iteraci√≥n, el equipo sabe m√°s que cuando se actualiz√≥ por √∫ltima vez el plan de lanzamiento. La planificaci√≥n de la iteraci√≥n a medida que comienza le permite al equipo hacer uso de su conocimiento reci√©n adquirido. De esta forma, la planificaci√≥n √°gil","service":"user-service"}
{"level":"info","message":"se convierte en un proceso de dos etapas. La primera etapa es el plan de lanzamiento, con sus asperezas e incertidumbres generales. La segunda etapa es el plan de iteraci√≥n. Un plan de iteraci√≥n todav√≠a tiene algunas asperezas y sigue siendo incierto. Sin embargo, debido a que se crea simult√°neamente con el inicio de una nueva iteraci√≥n, un plan de iteraci√≥n es m√°s detallado que un plan de lanzamiento. La creaci√≥n del plan de iteraci√≥n lleva al equipo a discusiones sobre el dise√±o del producto y el dise√±o del software. Las discusiones sobre el dise√±o de productos, por ejemplo, pueden tratar temas como la mejor combinaci√≥n de historias para optimizar el valor, la interpretaci√≥n de los comentarios al mostrar el software en funcionamiento a los clientes o la medida en que se debe implementar una funci√≥n deseada (es decir, el 20 % del total). caracter√≠stica y el esfuerzo entregan el 80% del valor?). Las discusiones sobre el dise√±o de software pueden, por ejemplo, involucrar el nivel de arquitectura apropiado en el que implementar una nueva funci√≥n, qu√© tecnolog√≠as se deben usar, si el c√≥digo existente se puede reutilizar, etc. Como resultado de estas discusiones, el equipo llega a una mejor comprensi√≥n de lo que debe construirse y lo que se construir√°, y tambi√©n crea una lista de las tareas necesarias para lograr su objetivo para la iteraci√≥n.","service":"user-service"}
{"level":"info","message":"En un nivel amplio, hay dos formas de planificar una iteraci√≥n, a las que me refiero como impulsada por la velocidad y impulsada por el compromiso. Diferentes equipos usan diferentes enfoques, y cada uno puede tener √©xito. Adem√°s, los dos enfoques generales se pueden combinar en diversos grados. En esta secci√≥n, consideraremos la planificaci√≥n de iteraciones impulsadas por la velocidad; a continuaci√≥n, nos centraremos en la planificaci√≥n de la iteraci√≥n basada en el compromiso. Los pasos involucrados en la planificaci√≥n de la iteraci√≥n basada en la velocidad se muestran en la figura 14.2. Primero, el equipo ajusta las prioridades en colaboraci√≥n. Es posible que hayan aprendido algo en la iteraci√≥n anterior que altere sus prioridades. A continuaci√≥n, identifican la velocidad objetivo para la siguiente iteraci√≥n. Luego, el equipo selecciona un objetivo de iteraci√≥n, que es una descripci√≥n general de lo que desean lograr durante la siguiente iteraci√≥n. Despu√©s de seleccionar un objetivo de iteraci√≥n, el equipo selecciona","service":"user-service"}
{"level":"info","message":"as historias de usuario de m√°xima prioridad que respaldan ese objetivo. Se seleccionan tantas historias como sea necesario para que la suma de sus estimaciones de d√≠a ideal o punto de historia sea igual a la velocidad objetivo. Finalmente, cada historia seleccionada se divide en tareas y cada tarea se estima. Estos pasos se describen con m√°s detalle en el resto de este cap√≠tulo.","service":"user-service"}
{"level":"info","message":"Ajuste las prioridadesImagine todas las historias de usuarios apiladas f√≠sicamente u ordenadas en una hoja de c√°lculo de modo que la historia m√°s valiosa est√© en la parte superior y la menos valiosa en la parte inferior. El proyecto podr√≠a progresar tomando siempre las historias de la parte superior de esta lista priorizada para comenzar cada iteraci√≥n. Sin embargo, las condiciones del negocio y del proyecto cambian r√°pidamente, por lo que siempre vale la pena reconsiderar r√°pidamente las prioridades. Una fuente de cambios en las prioridades es la reuni√≥n de revisi√≥n de la iteraci√≥n, que se lleva a cabo una vez finalizada una iteraci√≥n. Durante la revisi√≥n de la iteraci√≥n, las nuevas funciones y capacidades que se agregaron durante la iteraci√≥n se demuestran a las partes interesadas, la comunidad del proyecto ampliada y cualquier otra persona interesada. A menudo se reciben valiosos comentarios durante estas revisiones de iteraci√≥n. El propietario del producto, por lo general, no debe presentar nuevas ideas o cambios durante la revisi√≥n de la iteraci√≥n, porque ha estado involucrada diariamente durante la iteraci√≥n. Sin embargo, muchos otros (incluidos los clientes y usuarios potenciales) pueden ver los resultados de la iteraci√≥n por primera vez. A menudo tendr√°n buenas ideas nuevas que podr√≠an adelantarse a elementos que antes eran de alta prioridad. Como se describe en el Cap√≠tulo 9, \"Priorizaci√≥n de temas\", las historias de usuario y los temas se priorizan en funci√≥n de su valor financiero para el producto, su costo, la cantidad y la importancia de lo que el equipo necesita. aprender√°, y la cantidad de riesgo reducido. Idealmente, un equipo deber√≠a esperar hasta despu√©s de la reuni√≥n de revisi√≥n de la iteraci√≥n antes de","service":"user-service"}
{"level":"info","message":"discutiendo las prioridades para la pr√≥xima iteraci√≥n. Despu√©s de todo, lo que escuchan durante la revisi√≥n de la iteraci√≥n puede influir en ellos, y es dif√≠cil priorizar el trabajo de la pr√≥xima iteraci√≥n si no est√° completamente seguro de lo que se completar√° en esta iteraci√≥n. Sin embargo, en muchas organizaciones he encontrado √∫til mantener una reuni√≥n de priorizaci√≥n unos d√≠as antes del inicio de una nueva iteraci√≥n. Hago esto para adaptar la revisi√≥n de iteraci√≥n y las reuniones de planificaci√≥n de iteraci√≥n en el mismo d√≠a con mayor facilidad. Una revisi√≥n de iteraci√≥n suele tardar entre treinta y sesenta minutos. Para un producto grande con m√∫ltiples equipos, es bastante factible que el propietario del producto y otras partes interesadas clave necesarias para las discusiones de priorizaci√≥n puedan pasar medio d√≠a en las revisiones de iteraci√≥n. Agregue otras cuatro horas para planificar una iteraci√≥n y es posible que no haya tiempo para discutir las prioridades el mismo d√≠a. Por lo general, programo la reuni√≥n de priorizaci√≥n para dos d√≠as antes del final de la iteraci√≥n. En ese momento, normalmente est√° claro si habr√° trabajo sin terminar de la iteraci√≥n actual. Esto permite que el propietario del producto decida si terminar ese trabajo ser√° una prioridad para la pr√≥xima iteraci√≥n. El propietario del producto lleva a cabo la reuni√≥n de priorizaci√≥n e involucra a cualquier persona que crea que puede contribuir a una discusi√≥n sobre las prioridades del proyecto. Despu√©s de tener esta reuni√≥n, el propietario del producto generalmente puede ajustar r√°pidamente y sobre la marcha las prioridades en funci√≥n de cualquier cosa que suceda durante la revisi√≥n de la iteraci√≥n. Determinar la velocidad objetivo El siguiente paso en la planificaci√≥n de la iteraci√≥n impulsada por la velocidad es determinar la velocidad objetivo del equipo. La suposici√≥n predeterminada por la mayor√≠a de los equipos es que su velocidad en la siguiente iteraci√≥n ser√° igual a la velocidad de la iteraci√≥n m√°s reciente. Beck y Fowler (2000) llaman a esto el clima de ayer, porque nuestra mejor suposici√≥n del clima de hoy es que ser√° como el clima de ayer. Otros equipos prefieren usar un promedio m√≥vil sobre quiz√°s las √∫ltimas tres iteraciones. Si un equipo no ha trabajado juntos antes o es nuevo en su proceso √°gil, tendr√°n que pronosticar la velocidad. Las t√©cnicas para hacerlo se describen en el Cap√≠tulo 16, ‚ÄúEstimaci√≥n de la velocidad‚Äù. Identificar un objetivo de iteraci√≥n Con sus prioridades y la velocidad objetivo en mente, el equipo identifica un objetivo que les gustar√≠a lograr durante la iteraci√≥n. La meta describe sucintamente lo que les gustar√≠a lograr durante ese per√≠odo. Como ejemplo, SwimStatsteam puede seleccionar \"Todas las caracter√≠sticas demogr√°ficas est√°n terminadas\" como objetivo de iteraci√≥n. Otros objetivos de iteraci√≥n de ejemplo para SwimStats podr√≠an incluir lo siguiente:","service":"user-service"}
{"level":"info","message":"‚óÜ Avanzar en los informes. ‚óÜ Terminar todos los informes de tiempo de eventos. ‚óÜ Hacer que la seguridad funcione. El objetivo de la iteraci√≥n es una declaraci√≥n unificadora sobre lo que se lograr√° durante la iteraci√≥n. No tiene que ser muy espec√≠fico. Por ejemplo, \"Avanzar en los informes\" es un buen objetivo de iteraci√≥n. No tiene que ser m√°s espec√≠fico, como en \"Finalizar 15 informes\" o \"Hacer los informes de resultados de la competencia\". Si \"Avanzar en los informes\" es la mejor descripci√≥n de lo que se trabajar√° en la pr√≥xima iteraci√≥n, es una buena declaraci√≥n de ese objetivo. Seleccionar historias de usuario A continuaci√≥n, el propietario del producto y el equipo seleccionan las historias que se combinan para alcanzar el objetivo de la iteraci√≥n. Si el equipo de SwimStats seleccion√≥ un objetivo de iteraci√≥n de \"Todas las caracter√≠sticas demogr√°ficas est√°n terminadas\", trabajar√≠an en cualquier historia relacionada con la demograf√≠a que a√∫n no estuviera terminada. Esto podr√≠a incluir‚óÜ Como nadador, puedo actualizar mis datos demogr√°ficos.‚óÜ Como entrenador, puedo ingresar datos demogr√°ficos de cada uno de mis nadadores.‚óÜ Como entrenador, puedo importar un archivo de todos los datos demogr√°ficos.‚óÜ Como entrenador, Puedo exportar un archivo de todos los datos demogr√°ficos. Al seleccionar las historias en las que trabajar, el propietario del producto y el equipo consideran la prioridad de cada historia. Por ejemplo, si exportar un archivo de datos demogr√°ficos est√° casi al final de la lista de requisitos prioritarios para el producto, es posible que no se incluya en la iteraci√≥n. En ese caso, el objetivo de la iteraci√≥n podr√≠a haberse expresado mejor como \"Las caracter√≠sticas demogr√°ficas m√°s importantes est√°n terminadas\". Dividir las historias de usuario en tareas Una vez que se ha seleccionado el conjunto apropiado de historias de usuario, cada una se descompone en el conjunto de tareas necesarias para entregar la nueva funcionalidad. . Supongamos que la historia de usuario de mayor prioridad es \"Como entrenador, puedo asignar nadadores a eventos para una pr√≥xima competencia\". Esta historia de usuario se convertir√° en una lista de tareas, como: ‚óÜ Determinar las reglas que afectan a qui√©n se puede asignar a qu√© eventos. ‚óÜ Escribir casos de prueba de aceptaci√≥n que muestren c√≥mo deber√≠a funcionar esto. ‚óÜ Dise√±ar la interfaz de usuario.","service":"user-service"}
{"level":"info","message":"Obtenga retroalimentaci√≥n de la interfaz de usuario de los entrenadores.‚óÜ Codifique la interfaz de usuario.‚óÜ Codifique el nivel medio.‚óÜ Agregue nuevas tablas a la base de datos.‚óÜ Automatice las pruebas de aceptaci√≥n. Una pregunta com√∫n sobre la planificaci√≥n de la iteraci√≥n es qu√© se debe incluir. Se debe identificar una historia de usuario para un producto terminado y en funcionamiento. Si hay an√°lisis, dise√±o, dise√±o de interacci√≥n con el usuario u otras tareas necesarias, deben identificarse y estimarse. Debido a que el objetivo de cada iteraci√≥n es producir un producto potencialmente entregable, aseg√∫rese de incluir tareas para probar y documentar el producto. Incluir tareas de prueba es importante porque el equipo necesita pensar bien al comienzo de la iteraci√≥n sobre c√≥mo se probar√° una historia de usuario. Esto ayuda a involucrar a los evaluadores desde el comienzo de la iteraci√≥n, lo que mejora el comportamiento multifuncional del equipo. Incluya solo el trabajo que agrega valor a este proyecto El plan de iteraci√≥n debe identificar solo aquellas tareas que agregan valor inmediato al proyecto actual. Obviamente, eso incluye tareas que pueden considerarse an√°lisis, dise√±o, codificaci√≥n, pruebas, dise√±o de interfaz de usuario, etc. No incluya la hora de la ma√±ana cuando responda el correo electr√≥nico. S√≠, algunos de esos mensajes de correo electr√≥nico est√°n relacionados con el proyecto, pero tareas como \"responder correo electr√≥nico, 1 hora\" no deben incluirse en un plan de iteraci√≥n. De manera similar, suponga que necesita reunirse con el director de personal de la empresa sobre un nuevo proceso de revisi√≥n anual. Eso no deber√≠a incluirse en el plan de iteraci√≥n. Aunque los miembros del equipo del proyecto ser√°n revisados ‚Äã‚Äãusando el nuevo proceso, la reuni√≥n para discutirlo (y cualquier trabajo de seguimiento que necesite hacer) no est√° directamente relacionada con el desarrollo del producto. Por lo tanto, ninguna tarea asociada con √©l se convierte en parte del plan de iteraci√≥n. Sea espec√≠fico hasta que sea un h√°bito Los nuevos equipos √°giles a menudo no est√°n familiarizados o no son expertos en escribir pruebas unitarias automatizadas. Sin embargo, esta es una habilidad que trabajan para cultivar durante las primeras iteraciones. Durante ese per√≠odo, animo a los programadores a identificar y estimar expl√≠citamente las tareas de pruebas unitarias. Un programador puede, por ejemplo, identificar que la codificaci√≥n de una nueva funci√≥n llevar√° ocho horas y que escribir sus pruebas unitarias llevar√° cinco horas. M√°s tarde, una vez que las pruebas unitarias se hayan convertido en un h√°bito para los programadores, el programador escribir√≠a solo una tarjeta diciendo codificar la nueva funci√≥n y","service":"user-service"}
{"level":"info","message":"le dar√≠a una estimaci√≥n que incluyera el tiempo para automatizar las pruebas unitarias. Una vez que algo como las pruebas unitarias se convierte en un h√°bito, se puede incluir dentro de otra tarea. Hasta entonces, sin embargo, hacerlo expl√≠cito ayuda a mantener un alto conocimiento de la tarea. Las reuniones cuentan (mucho) Debe identificar, estimar e incluir tareas para las reuniones relacionadas con el proyecto. Al estimar la reuni√≥n, aseg√∫rese de incluir el tiempo de todos los participantes, as√≠ como el tiempo dedicado a la preparaci√≥n de la reuni√≥n. Suponga que el equipo programa una reuni√≥n para analizar los comentarios de los usuarios. Los siete miembros del equipo planean asistir a la reuni√≥n de una hora y el analista planea pasar dos horas prepar√°ndose para la reuni√≥n. El tiempo estimado para esta tarea es de nueve horas. Por lo general, ingreso esto en el plan de iteraci√≥n como una sola tarea de nueve horas, en lugar de una tarea separada para cada miembro del equipo. Errores Un equipo √°gil tiene el objetivo de corregir todos los errores en la iteraci√≥n en la que se descubren. Se vuelven capaces de lograr esto a medida que se vuelven m√°s competentes en el trabajo en iteraciones cortas, especialmente al confiar en pruebas automatizadas. Cuando un programador da una estimaci√≥n para codificar algo, esa estimaci√≥n incluye tiempo para corregir cualquier error encontrado en la implementaci√≥n o una tarea separada. (\"Corregir errores\") se identifica y estima. Prefiero identificar una sola tarea, pero no considerarla completa hasta que pasen todas las pruebas. Un defecto encontrado m√°s tarde (o no corregido durante la iteraci√≥n en la que se descubri√≥) se trata de la misma manera que una historia de usuario. La correcci√≥n del defecto deber√° priorizarse en una iteraci√≥n posterior de la misma manera que cualquier otra historia de usuario. Fuera de una iteraci√≥n, toda la idea de un defecto comienza a desaparecer. Arreglar un error y agregar una funci√≥n se convierten en dos formas de describir lo mismo. Manejo de dependencias A menudo, el desarrollo de una historia de usuario depender√° de la implementaci√≥n previa de otra. En la mayor√≠a de los casos, estas dependencias no son un problema importante. Por lo general, hay lo que considero un orden natural para implementar las historias de usuario, es decir, hay una secuencia que tiene sentido tanto para los desarrolladores como para el propietario del producto. No es un problema cuando hay dependencias entre las historias que conducen a desarrollarlas en su orden natural. . El orden natural suele ser el orden que asumi√≥ el equipo cuando estim√≥ las historias. Por ejemplo, SwimStatsteam probablemente asumir√≠a que se pueden agregar nadadores al sistema antes de que se puedan eliminar. Cuando las historias se trabajan en una secuencia distinta a la","service":"user-service"}
{"code":10062,"level":"error","method":"POST","rawError":{"code":10062,"message":"Unknown interaction"},"requestBody":{"files":[],"json":{"data":{"content":"message","tts":false},"type":4}},"service":"user-service","status":404,"url":"https://discord.com/api/v10/interactions/1121990168761614346/aW50ZXJhY3Rpb246MTEyMTk5MDE2ODc2MTYxNDM0NjpDV2NhblRXcnZUMUtpNHowWkJzSHh0MWxUWTB3eTA3WldxcUk2MExPS05uUEY4aWtmbnphWDc3SEdLYzRVeWx2YU1Qb0FNbktsc01JSGVldzEwMWk4akxqb1BscnhWSWtPWU1zS1JsOGNXOWpPTGo4U0wzVjVxUTBnNUFvRkdPYw/callback"}
{"code":40060,"level":"error","method":"POST","rawError":{"code":40060,"message":"Interaction has already been acknowledged."},"requestBody":{"files":[],"json":{"data":{"content":"message","tts":false},"type":4}},"service":"user-service","status":400,"url":"https://discord.com/api/v10/interactions/1121990391198142594/aW50ZXJhY3Rpb246MTEyMTk5MDM5MTE5ODE0MjU5NDpTZnFGUGdtZDVWU0M2UGllU3BVQUZKbElsZTBPUnZvZ0ozQUlyenUwOEVveWZ1ZTJrelE2ZWhPQ1RFZGFQS1hEemU1d1Z6Slp5RDBCZVFlblN4ZExHZkJhVldYS0pEako5SkV3U3Jvb3ZGUGlDWURCQ0QyVmk2YUhFclBIRVBCcA/callback"}
{"code":40060,"level":"error","method":"POST","rawError":{"code":40060,"message":"Interaction has already been acknowledged."},"requestBody":{"files":[],"json":{"data":{"content":"message","tts":false},"type":4}},"service":"user-service","status":400,"url":"https://discord.com/api/v10/interactions/1121990447993196644/aW50ZXJhY3Rpb246MTEyMTk5MDQ0Nzk5MzE5NjY0NDpaM3hJRW56bkk0MlhjcUU3TVkwMEJFME5lSUtUTEtrbVdETTlNdHBZdWNMUlA5TkpCaXRyNHFQMlljM3B3bTVlcm5sZnpvcHVVWWZ1Z1QwM01LN1Y3d25oNVN1MFpSeXkzMzZGcGVQb3lSSGZjVXplMHRnVEhKMDdJZUNmTjJpYQ/callback"}
{"code":40060,"level":"error","method":"POST","rawError":{"code":40060,"message":"Interaction has already been acknowledged."},"requestBody":{"files":[],"json":{"data":{"content":"message","tts":false},"type":4}},"service":"user-service","status":400,"url":"https://discord.com/api/v10/interactions/1121990544684490793/aW50ZXJhY3Rpb246MTEyMTk5MDU0NDY4NDQ5MDc5MzpwaWJ3WlNnbkJCV2xEOE03MFo0VElSVnpWcG1xUHB5TEtDMDZ3Mnpub2s3NlVKNWhkdDQyZVdweG1uMmF4aG1FYlJlcWVlUGZmdnFNZjdqNnR6dTNVZzJnQTVxRUpQOUExYm5oUnhWTFB0WHlVMUFZTkZWNUk4dVB0WFRVNWtCcQ/callback"}
{"code":40060,"level":"error","method":"POST","rawError":{"code":40060,"message":"Interaction has already been acknowledged."},"requestBody":{"files":[],"json":{"data":{"content":"message","tts":false},"type":4}},"service":"user-service","status":400,"url":"https://discord.com/api/v10/interactions/1121990600410009662/aW50ZXJhY3Rpb246MTEyMTk5MDYwMDQxMDAwOTY2MjpnMXJMbDlvV0p6Q2sxejBHVTF1YVQ0eGdJYlRDalVITEdrRExlVXBWb1cxRDBXTGFUUWlyRVNsYUlINmtzdEVaVnZWdjl3anZIcVZENkVyRjJNWWdCRzhnVUJoVjE5Q2VZaWtVc1JzU0NTOHY1Tjl0SXJGSmpZUGt0cXl4Qm1zZQ/callback"}
{"code":40060,"level":"error","method":"POST","rawError":{"code":40060,"message":"Interaction has already been acknowledged."},"requestBody":{"files":[],"json":{"data":{"content":"message","tts":false},"type":4}},"service":"user-service","status":400,"url":"https://discord.com/api/v10/interactions/1121991180457091182/aW50ZXJhY3Rpb246MTEyMTk5MTE4MDQ1NzA5MTE4MjplQXNjR2RiNDh0cVdYNTI5VGp6WjlmUVZFUmxJWHZwdlR5S21mYldERzBLbm0xSk9wdDZueWpoN0JVODhJUUlFZ3p6Wk95bW1FSVdudGhCc3lsdEhTZnY2blZyR2lSc3JKYVZSd0VWTU5UQ3JtWlVUUGRsUTVIbXJYQnpqSFRUdg/callback"}
{"code":10062,"level":"error","method":"POST","rawError":{"code":10062,"message":"Unknown interaction"},"requestBody":{"files":[],"json":{"data":{"content":"message","tts":false},"type":4}},"service":"user-service","status":404,"url":"https://discord.com/api/v10/interactions/1121991208110133288/aW50ZXJhY3Rpb246MTEyMTk5MTIwODExMDEzMzI4ODpLZVlqMDlTTTQ3dHNkcWJ4b0tWOWZWMW04U0ZxU3dZYkE2dU1WU0NnVU1uVU1xdXg2Q2lpdWNKZVZ6T2JISEJvWUhRdlBDWkVHUUZBcHlsRWJjMWo0aXZhWWZld2RyUzk1UGNrR0FBVTFENW1YYlRDdHNucXZlZFpjTVdneDNRQQ/callback"}
{"code":10062,"level":"error","method":"POST","rawError":{"code":10062,"message":"Unknown interaction"},"requestBody":{"files":[],"json":{"data":{"content":"message","tts":false},"type":4}},"service":"user-service","status":404,"url":"https://discord.com/api/v10/interactions/1121991522997514311/aW50ZXJhY3Rpb246MTEyMTk5MTUyMjk5NzUxNDMxMTpvSlBFdlB3R05DUkwydjFMTHZzdUpmQ0pnZnBjdzBMRDFBbktkejJMRnVzTXFpeFhWR0FNQ0pobU93bE9PbjNYZWttdlhnUmVRakRtZGJvdjRUZU05VzU5Q2dmMmw1WGs2bDNxRWVBcDhBMkY1dVY0Qzg0Z1pZUW5QdjdIbDlMdA/callback"}
{"code":40060,"level":"error","method":"POST","rawError":{"code":40060,"message":"Interaction has already been acknowledged."},"requestBody":{"files":[],"json":{"data":{"content":"message","tts":false},"type":4}},"service":"user-service","status":400,"url":"https://discord.com/api/v10/interactions/1121991560024838236/aW50ZXJhY3Rpb246MTEyMTk5MTU2MDAyNDgzODIzNjpubk1hZjVPOFlpUWVSdkdTUDJZSEhBM1g4RENDMVpIWGhsWXNJSzQ2S0E0MTc3MWhHMkxuTDFkNEhRR2RySlZmU2I0TUNWU0pRVkFocGNMYlRLclk0UEpxWGp0UHdsRGRJNzVMMmpRSEFiVU1vOGM1M3J0a1EwZGtZejVmZnlmYQ/callback"}
{"code":10062,"level":"error","method":"POST","rawError":{"code":10062,"message":"Unknown interaction"},"requestBody":{"files":[],"json":{"data":{"content":"message","tts":false},"type":4}},"service":"user-service","status":404,"url":"https://discord.com/api/v10/interactions/1121992390228574208/aW50ZXJhY3Rpb246MTEyMTk5MjM5MDIyODU3NDIwODpzOWxnSU9DSUttUnJMdmxWZnZQYUtSbTRlNDY1QTFPSnpBOEJqdnhqeXN5YTdyRk5uWVVWR0dHMWVwMTJaVXV1VEpjbmRRTjUwdVI3SmI2TllZYVRXNnBQTDJoRm5KbUZVZVV2RFJEakd3SDVOaHVYWkUyemxRbmpydFFwaWgwcg/callback"}
{"code":40060,"level":"error","method":"POST","rawError":{"code":40060,"message":"Interaction has already been acknowledged."},"requestBody":{"files":[],"json":{"data":{"content":"message","tts":false},"type":4}},"service":"user-service","status":400,"url":"https://discord.com/api/v10/interactions/1121992586387783742/aW50ZXJhY3Rpb246MTEyMTk5MjU4NjM4Nzc4Mzc0MjphYXlXZUxvODlIMGVnUWt3cE5GWnZTNWlmWTRVVFhIa1hlVDdxeHpiRzQ4SXlFUkhnMnNZNmVJV1ZWdHRQa1JKcW03Ung1SmlzSU5HZFpDWklNdEJiUUh4ckU3YW94TXlyNkpBUEdnY2thY25FMjhTM3pJVEVySE1oRE54U1dyYg/callback"}
{"code":40060,"level":"error","method":"POST","rawError":{"code":40060,"message":"Interaction has already been acknowledged."},"requestBody":{"files":[],"json":{"data":{"content":"message","tts":false},"type":4}},"service":"user-service","status":400,"url":"https://discord.com/api/v10/interactions/1121993968901701672/aW50ZXJhY3Rpb246MTEyMTk5Mzk2ODkwMTcwMTY3MjpBa21nc04wQ1NGYVdhTFMxRnZpZWZ1SU1WQ0xGeU1KNlZ6RGlLUW44Tk9OZFR0ZURmRFNjM1dLNmNwWkxkSHBybm4ydjQ5UkV4d1c4S0hycFZ1bHJKdnJGb2I3NkZFY0hUZ1F1WElRRGxXeUxLT2hqQkhMOXRXdnpGdm1SZVRjRw/callback"}
{"code":10062,"level":"error","method":"POST","rawError":{"code":10062,"message":"Unknown interaction"},"requestBody":{"files":[],"json":{"data":{"content":"message","tts":false},"type":4}},"service":"user-service","status":404,"url":"https://discord.com/api/v10/interactions/1121994121058471976/aW50ZXJhY3Rpb246MTEyMTk5NDEyMTA1ODQ3MTk3Njo3MWM4OUxRYnR0NlJETUJTMDZoSXl5MlNONVpmUWN5YTIwZUp2eUtGUjRoeHVSQVFHZVd6UlhuNm9Oa0Z4c3JraGxMT2x1clNDdzhybXlZendBRGdaQ3dzMG5JVk9QU1QzcUpnakl4NmxaUjV4enFkRWNsV2VSdHVIZWViVjN6Ug/callback"}
{"code":10062,"level":"error","method":"POST","rawError":{"code":10062,"message":"Unknown interaction"},"requestBody":{"files":[],"json":{"data":{"content":"message","tts":false},"type":4}},"service":"user-service","status":404,"url":"https://discord.com/api/v10/interactions/1121994361064923167/aW50ZXJhY3Rpb246MTEyMTk5NDM2MTA2NDkyMzE2Nzo0QVNHTG9COU1oTU0xa0ZHWlZjMHRxZ0p5WllkakZaaEpLdlRJSjV2aXhtM0g3NldtemMySlh5ZU1vTFBUM2xHa1ZNWG8yUDFQa1NmTUJrVUhGUkljQjU2VEJSeTZucFJpQWIyQUJnTXEwQm1UWU1zNVpjSlhrYlgxYThwczBiRA/callback"}
{"code":10062,"level":"error","method":"POST","rawError":{"code":10062,"message":"Unknown interaction"},"requestBody":{"files":[],"json":{"data":{"content":"message","tts":false},"type":4}},"service":"user-service","status":404,"url":"https://discord.com/api/v10/interactions/1121994599905366066/aW50ZXJhY3Rpb246MTEyMTk5NDU5OTkwNTM2NjA2Njp0MWpTNGJhckxkYzFreDJtd0ljUVRwUlAyUlJ6SVdtRkprZTRZWUFnMXR2ME1CeURTaXlCMERpaHNSamVzbkpCSDlhYlV5NlhvSEN0MHBDYnJFZ3Z2eWRqSnhoTWN5ZlhuY3NmamJ2R3I5Y2d5eDN2WWl2OUZ6YzdCS2lKNlhhTw/callback"}
{"code":40060,"level":"error","method":"POST","rawError":{"code":40060,"message":"Interaction has already been acknowledged."},"requestBody":{"files":[],"json":{"data":{"content":"message","tts":false},"type":4}},"service":"user-service","status":400,"url":"https://discord.com/api/v10/interactions/1121994764498247770/aW50ZXJhY3Rpb246MTEyMTk5NDc2NDQ5ODI0Nzc3MDpVYU85MHFHWnR6U0hwRUtSNHVZaDF4WnFvTkFHMDdZM0IxVEp3RnZQaXA5eEpLTGlEcDV5YUo5WmlucXlTbGpMRzNteFBjemtiT281M3RvMmFsV09pY2prUm8xbzkxTFR6em1VMzVpV0J0Ylc2NkpkWG1FcnNKcUVSajA0TFpjTg/callback"}
{"code":10062,"level":"error","method":"POST","rawError":{"code":10062,"message":"Unknown interaction"},"requestBody":{"files":[],"json":{"data":{"content":"message","tts":false},"type":4}},"service":"user-service","status":404,"url":"https://discord.com/api/v10/interactions/1121994923978264598/aW50ZXJhY3Rpb246MTEyMTk5NDkyMzk3ODI2NDU5ODo4b2JpRTVYbWtZN21XYTI4Q1ZPYW53TXpMcmt2QmYxdEFwQVlGdE5ZTlJHRkhTQzVyaEUyM0M2bTl5NlVUc0hvanRuQXVrczhSRHU1NHpSbEVwa0F4UENXODc1a2ZwMnJibnZBZjRJdWhpbmxWZ2ZIdG1vQm5ERThnNDN0ZkNIYw/callback"}
{"code":10062,"level":"error","method":"POST","rawError":{"code":10062,"message":"Unknown interaction"},"requestBody":{"files":[],"json":{"data":{"content":"message","tts":false},"type":4}},"service":"user-service","status":404,"url":"https://discord.com/api/v10/interactions/1121995342695628810/aW50ZXJhY3Rpb246MTEyMTk5NTM0MjY5NTYyODgxMDpzbGlHMTJGOW1lQVVEVHE3OVAyRlpJSzd4U0htT0RRcGRXeThmdzNEZlJkeFZPMm5WYjhPdk5VMGF6eVFZa1FaWWx6ZWZ3RFBNcjg4TnhPTVhaVUV3UGxOOVlsOWk3NDBxWlpYd3ZIVWs4ZWZUdWY5c3NUNEFHeFZWTjJ2bVR1Wg/callback"}
{"code":40060,"level":"error","method":"POST","rawError":{"code":40060,"message":"Interaction has already been acknowledged."},"requestBody":{"files":[],"json":{"data":{"content":"message","tts":false},"type":4}},"service":"user-service","status":400,"url":"https://discord.com/api/v10/interactions/1121995557783740446/aW50ZXJhY3Rpb246MTEyMTk5NTU1Nzc4Mzc0MDQ0NjpmOXU0TjV6Y01PZG80Q2VXU3FNSHpQY0lURnhMRWwzYjlmSHBiY1RaNHV6V2pOME5GbnJTdmFhZWowQXNRYldaQlVJRkZuQ3ZEOEhuMUFqSGdMd3JNa203T3E5aTAwdVpIZWNPSjE5bUhkNVNEb2I1ZkJzM3BUNGFtZFE1UWJETg/callback"}
{"code":10062,"level":"error","method":"POST","rawError":{"code":10062,"message":"Unknown interaction"},"requestBody":{"files":[],"json":{"data":{"content":"message","tts":false},"type":4}},"service":"user-service","status":404,"url":"https://discord.com/api/v10/interactions/1121996663737815111/aW50ZXJhY3Rpb246MTEyMTk5NjY2MzczNzgxNTExMTpHUUF6TTlJUks4eFFLc1lGTHp6NWJpUXlpNWR3ZDd1MkJFUVJ0bFl0QWY3QTNMTXp0YTN4Q1JnTUlTVk45YkJ6dWQwTENnRGRlTW1EcFRGSGdFSmhqVlN6V1RsaEtnUXZTcFgyWVZwS3NTYmQ5ckRMOHJSb3h5ZWNGdE82QzZoSg/callback"}
{"level":"info","message":"Trabajando con directorios y archivos Ahora que podemos navegar de manera segura a trav√©s de la l√≠nea de comandos, es hora de dominar el arte de los archivos y directorios. Este puede ser un tema robusto; Tenemos varias formas de realizar las mismas tareas con Windows. Cubriremos algunos, pero tenga en cuenta que hay muchas otras formas de trabajar con archivos y directorios. Vamos a sumergirnos.  Directorios ¬øQu√© es un directorio? En este caso, es una estructura de carpetas global dentro del sistema de archivos de Windows. Nuestros archivos est√°n anidados dentro de esta estructura de carpetas, y podemos movernos utilizando comandos comunes que practicamos en la √∫ltima secci√≥n, como cd y dir.  Al volver a visitar nuestro concepto de pasillo desde la √∫ltima secci√≥n por un segundo cuando pensamos en directorios, podemos desglosarlo as√≠:  La unidad en s√≠ es un disco, pero tambi√©n es el directorio ra√≠z. Entonces piensa en el C: conducir como nuestro hotel. Ese hotel tiene muchos pisos diferentes llenos de pasillos. Este nivel incluir√≠a directorios como Windows, Users, Program Files, y cualquier otro directorio creado por el sistema operativo o los usuarios. Estos pisos tienen m√∫ltiples salas. Piense en cada sala como una carpeta anidada con nuestros directorios anteriores. Entonces, para el caso de los Usuarios, tendr√≠amos una carpeta para cada usuario conectado al host. En este punto, estamos a varios niveles en lo profundo del sistema de archivos. ( C: \\ Users \\ htb ) como ejemplo de un directorio. Esto contin√∫a con otros pasillos ( directorios ) a medida que se expande el uso del host y se instala m√°s software. Finalmente, encontramos la habitaci√≥n que est√°bamos buscando y echamos un vistazo. Piense en la puerta como un archivo dentro de la colmena del directorio. Visualizaci√≥n y listado de directorios Como dijimos en la secci√≥n anterior, podemos emitir el comando 'cd' cuando intentemos ver en qu√© directorio residimos actualmente. Para obtener una lista de los archivos que est√°n dentro de un directorio, podemos usar el dir comando, y tree proporciona una lista completa de todos los archivos y carpetas dentro de la ruta especificada. Por lo tanto, es agradable ver que ya tenemos una ventaja.","service":"user-service"}
{"level":"info","message":"En la sesi√≥n anterior, enumeramos el directorio para ver su contenido, luego emitimos el rd Git-Pulls comando. Desde la primera ventana de sesi√≥n, podemos ver que no ejecut√≥ el comando ya que el directorio no estaba vac√≠o. Rd tiene un interruptor /S que podemos utilizar para borrar el directorio y sus contenidos. Como queremos hacer desaparecer Git-Pulls, lo emitiremos en la segunda sesi√≥n cmd vista anteriormente. Los comandos que hemos emitido con rd son lo mismo que rmdir.  Eliminar directorios es bastante simple. Si se atasca tratando de eliminar un directorio y recibe una advertencia diciendo que el directorio no est√° vac√≠o, no se olvide de /S interruptor.  Modificando Modificar un directorio es m√°s complicado que cambiar un archivo. El directorio contiene datos para otros archivos o directorios. Tenemos varias opciones en cualquier caso. Move, Robocopy, y xcopy puede copiar y hacer cambios en los directorios y sus estructuras.  Para usar move, tenemos que emitir la sintaxis en este orden. Al mover directorios, tomar√° el directorio y cualquier archivo dentro y lo mover√° desde el source a la destination ruta especificada.","service":"user-service"}
{"level":"info","message":"Adem√°s, ah√≠ lo tenemos. El directorio example existe ahora dentro del directorio Documentos. Las siguientes dos opciones tienen m√°s capacidad en la forma en que pueden interactuar con archivos y directorios. Tomaremos un minuto para mirar xcopy ya que todav√≠a existe en los sistemas operativos Windows actuales, pero es esencial saber que ha quedado en desuso robocopy. Donde brilla xcopy es que puede eliminar el bit de solo lectura de los archivos al moverlos. La sintaxis para xcopy es xcopy source destination options. Como fue con el movimiento, podemos usar comodines para archivos fuente, no archivos de destino.","service":"user-service"}
{"level":"info","message":"Xcopy nos solicita durante el proceso y muestra el resultado. En nuestro caso, el directorio y cualquier archivo dentro se copiaron en el Escritorio. Utilizando el /E cambiar, le dijimos a Xcopy que copie cualquier archivo y subdirectorio para incluir directorios vac√≠os. Tenga en cuenta que esto no eliminar√° la copia en el directorio anterior. Al realizar la duplicaci√≥n, xcopy restablecer√° los atributos que ten√≠a el archivo. Si desea conservar los atributos del archivo (, como solo lectura u oculto ), puede usar el /K interruptor.  Desde la perspectiva de un hacker, xcopy puede ser extremadamente √∫til. Si deseamos mover un archivo, incluso un archivo del sistema, o algo bloqueado, xcopy puede hacerlo sin agregar otras herramientas al host. Como defensor, esta es una excelente manera de obtener una copia de un archivo y retener el mismo estado para su an√°lisis. Por ejemplo, desea obtener un archivo de solo lectura que se transfiri√≥ desde un CD o unidad flash, y ahora sospecha que realiza acciones sospechosas.  Robocopyes el predecesor de xcopy construido con mucha m√°s capacidad. Podemos pensar en Robocopy como la fusi√≥n de las mejores partes de copia, xcopy y movernos con algunas capacidades adicionales. Robocopy puede copiar y mover archivos localmente, a diferentes unidades, e incluso a trav√©s de una red, al tiempo que conserva los datos y atributos del archivo para incluir marcas de tiempo, propiedad, ACL, y cualquier bandera configurada como oculta o de solo lectura. Debemos tener en cuenta que Robocopy se realiz√≥ para directorios grandes y sincronizaci√≥n de unidades, por lo que no le gusta copiar o mover archivos singulares de forma predeterminada. Sin embargo, eso no quiere decir que sea incapaz. Cubriremos un poco de eso abajo.","service":"user-service"}
{"level":"info","message":"Robocopy tom√≥ todo en nuestro directorio de escritorio e hizo una copia en el directorio Documentos. Esto funciona sin ning√∫n problema porque tenemos permiso sobre la carpeta que estamos tratando de copiar actualmente. Como se discuti√≥ anteriormente, Robocopy tambi√©n puede funcionar con archivos de sistema, de solo lectura y ocultos. Como usuario, esto puede ser problem√°tico si no tenemos el SeBackupPrivilege y auditing privilege atributos. Esto podr√≠a evitar que dupliquemos o muevamos archivos y directorios. Sin embargo, hay un poco de soluci√≥n. Podemos utilizar el /MIR cambiar para permitirnos copiar los archivos que necesitamos temporalmente.","service":"user-service"}
{"level":"info","message":"Desde el resultado anterior, podemos ver que nuestros permisos son insuficientes. La utilizaci√≥n del interruptor / MIR completar√° la tarea por nosotros. Tenga en cuenta que marcar√° los archivos como una copia de seguridad del sistema y los ocultar√° de la vista. Podemos borrar los atributos adicionales si agregamos el /A-:SH cambiar a nuestro comando. Ten cuidado con el /MIR cambiar, ya que reflejar√° el directorio de destino a la fuente. Cualquier archivo que exista dentro del destino ser√° eliminado. Aseg√∫rese de colocar la nueva copia en una carpeta borrada. Arriba, tambi√©n usamos el /L interruptor. Este es un comando what-if. Procesar√° el comando que emite pero no lo ejecutar√°; solo te muestra el resultado potencial. Prob√©moslo a continuaci√≥n.","service":"user-service"}
{"level":"info","message":"Ejecutar nuestro comando y luego verificar el directorio nos muestra que los archivos se copiaron correctamente. Hay muchas maneras en que podemos utilizar Robocopia que necesita su propia secci√≥n. Experimente y juegue con la herramienta para desarrollar algunas de sus formas de mover directorios, copiar archivos e incluso jugar con atributos.  Archivos Muchos de los mismos comandos que utilizamos al administrar directorios tambi√©n se pueden usar con archivos. Windows tiene muchas m√°s herramientas integradas que podemos usar para toda nuestra diversi√≥n m√°gica de archivos. Cubriremos algunos de ellos aqu√≠. Primero debemos analizar c√≥mo ver los archivos y sus contenidos.  Listar archivos y ver sus contenidos Ya sabemos que podemos utilizar el dir comando para ver los archivos dentro de un directorio, junto con informaci√≥n espec√≠fica sobre ellos, dependiendo de los interruptores que usemos. A menudo es la forma m√°s f√°cil de ver qu√© archivos existen dentro de un directorio. Tambi√©n tenemos el tree /F comando para mostrarnos una salida que contenga todos los directorios y archivos dentro del √°rbol. Sin embargo, ¬øqu√© pasa si deseamos ver el contenido de un archivo? Podemos utilizar el more, openfiles, y type comandos.  Primero es more. Con esta herramienta integrada, podemos ver el contenido de un archivo o los resultados de otro comando impreso en una pantalla a la vez. Piense en ello como una forma de desplazar el texto del b√∫fer que de otro modo podr√≠a desbordar el b√∫fer terminal.","service":"user-service"}
{"level":"info","message":"En la salida anterior, emitimos el ipconfig /all comando que generalmente genera un mont√≥n de datos y se canaliza (|) a trav√©s de more para frenarlo. Esto es especialmente √∫til cuando se trata de archivos o comandos grandes que generan mucho texto, como systeminfo.  Con openfiles, podemos ver qu√© archivo en nuestra PC local o un host remoto tiene abierto y desde qu√© usuario. Este comando requiere privilegios de administrador en el host que est√° intentando ver. Con esta herramienta, podemos ver archivos abiertos, desconectar archivos abiertos e incluso evitar que los usuarios accedan a archivos espec√≠ficos. La capacidad de usar este comando no est√° habilitada de manera predeterminada en los sistemas Windows.  Typepuede mostrar el contenido de m√∫ltiples archivos de texto a la vez. Tambi√©n es posible utilizar la redirecci√≥n de incendios con el tipo tambi√©n. Es una herramienta simple pero extremadamente √∫til. Una cosa interesante sobre el tipo es que no bloquear√° los archivos, por lo que no hay preocupaci√≥n de estropear algo.","service":"user-service"}
{"level":"info","message":"Con el ejemplo anterior, agregamos el archivo passwords.txt al final del archivo secrets.txt con >>. Luego vimos el contenido de secrets.txt y podemos ver que nuestros datos se agregaron con √©xito.  Hemos estado discutiendo un tema relativamente simple, pero es una parte crucial del trabajo de cualquier administrador o hacker. Utilizando herramientas integradas como type y more hurgar en un sistema de archivos host es una forma r√°pida y razonablemente imperceptible de buscar contrase√±as, listas de empresas u otra informaci√≥n potencialmente confidencial.  Crear y modificar un archivo Crear y modificar un archivo desde la l√≠nea de comandos es relativamente f√°cil. Tenemos varias opciones que incluyen echo, fsutil, ren, rename, y replace. Primero, echo con la redirecci√≥n de salida nos permite modificar un archivo si ya existe o crear un nuevo archivo en el momento de la llamada.  Eco para crear y agregar archivos","service":"user-service"}
{"level":"info","message":"Nosotros utilizamos ren para cambiar el nombre de demo.txt a superdemo.txt. Se puede emitir como ren o cambiar el nombre. Son enlaces al mismo comando b√°sico.  Entrada / Salida Ya lo hemos visto varias veces, pero tomemos un minuto para hablar sobre E / S. Podemos utilizar el <, >, |, y & para enviar entrada y salida desde la consola y los archivos a donde los necesitamos. Con > podemos enviar la salida de un comando a un archivo.  Salida a un archivo","service":"user-service"}
{"level":"info","message":"Looking above, we can see that the output from our ipconfig /all command was pushed to details.txt. When we check the file, we see when it was created, and the content's output successfully inside. Using > this way will create the file if it does not exist, or it will overwrite the specified file's contents. To append to an already populated file, we can utilize >>.  Append to a File","service":"user-service"}
{"level":"info","message":"Mirando hacia arriba, podemos ver que la salida de nuestro ipconfig /all el comando fue empujado a detalles.txt. Cuando verificamos el archivo, vemos cu√°ndo se cre√≥ y la salida del contenido con √©xito en el interior. Usando > de esta manera crear√° el archivo si no existe, o sobrescribir√° el contenido del archivo especificado. Para agregar a un archivo ya poblado, podemos utilizar >>.","service":"user-service"}
{"level":"info","message":"Mirando hacia arriba, podemos ver que la salida de nuestro ipconfig /all el comando fue empujado a detalles.txt. Cuando verificamos el archivo, vemos cu√°ndo se cre√≥ y la salida del contenido con √©xito en el interior. Usando > de esta manera crear√° el archivo si no existe, o sobrescribir√° el contenido del archivo especificado. Para agregar a un archivo ya poblado, podemos utilizar >>.","service":"user-service"}
{"level":"info","message":"Creamos el archivo test.txt con una cadena, luego agregamos nuestra siguiente l√≠nea ( f g h i j k ¬øve c√≥mo funciona esto ahora? ) al archivo con >>. Est√°bamos alimentando la entrada de un comando anterior; alimentemos la entrada a un comando ahora. Lo lograremos con <.  Pase en un archivo de texto a un comando","service":"user-service"}
{"level":"info","message":"En la sesi√≥n anterior, tomamos el contenido de test.txt y lo alimentamos a nuestro comando de b√∫squeda. De esta manera, est√°bamos buscando la cuerda see. Podemos ver que retrocedi√≥ los resultados mostr√°ndonos la l√≠nea donde encontr√≥ see. Estos eran comandos bastante simples, pero recuerde que podemos usar < as√≠ para buscar palabras clave o cadenas en archivos de texto grandes, ordenar elementos √∫nicos y mucho m√°s. Esto puede ser extremadamente √∫til para nosotros como hacker en busca de informaci√≥n clave. Otra ruta que podemos tomar es alimentar la salida de un comando directamente a otro comando con el | llamado tuber√≠a.","service":"user-service"}
{"level":"info","message":"En la sesi√≥n anterior, tomamos el contenido de test.txt y lo alimentamos a nuestro comando de b√∫squeda. De esta manera, est√°bamos buscando la cuerda see. Podemos ver que retrocedi√≥ los resultados mostr√°ndonos la l√≠nea donde encontr√≥ see. Estos eran comandos bastante simples, pero recuerde que podemos usar < as√≠ para buscar palabras clave o cadenas en archivos de texto grandes, ordenar elementos √∫nicos y mucho m√°s. Esto puede ser extremadamente √∫til para nosotros como hacker en busca de informaci√≥n clave. Otra ruta que podemos tomar es alimentar la salida de un comando directamente a otro comando con el | llamado tuber√≠a.","service":"user-service"}
{"level":"info","message":"Con pipe, podr√≠amos emitir el comando ipconfig /all y enviarlo a find para buscar una cadena espec√≠fica. Sabemos que funcion√≥ porque devuelve nuestro resultado en la siguiente l√≠nea. Esto efectivamente tom√≥ la salida de nuestra consola y la redirigi√≥ a una nueva tuber√≠a. Si entiendes este concepto, puedes hacer cosas interminables.  Digamos que deseamos que se ejecuten dos comandos en sucesi√≥n. Podemos emitir el comando y seguirlo con & y luego nuestro pr√≥ximo comando. Esto asegurar√° que en este caso, nuestro comando A se ejecuta primero y luego la sesi√≥n ejecutar√° el comando B. No le importa si el comando tuvo √©xito o fall√≥. Simplemente los emite.","service":"user-service"}
{"level":"info","message":"Si nos importa el resultado o el estado de los comandos que se ejecutan, podemos utilizar && para decir ejecutar el comando A, y si tiene √©xito, ejecute el comando B. Esto puede ser √∫til si est√° haciendo algo que depende de los resultados, como nuestra sesi√≥n cmd a continuaci√≥n.","service":"user-service"}
{"level":"info","message":"Podemos ver eso en mi primera l√≠nea con &&, solicitamos cambiar nuestro directorio de trabajo, luego hacer eco de una cadena en un archivo si tuvo √©xito. Podemos decir que tuvo √©xito porque nuestro camino cmd cambi√≥ y cuando nosotros type el archivo, hizo eco de nuestra cadena en el archivo. Tambi√©n puedes lograr lo contrario de esto con ||. Al usar ( pipe pipe ), estamos diciendo que ejecute el comando A. Si falla, ejecute el comando B.  Hemos pasado mucho tiempo nivelando nuestras habilidades de creaci√≥n y modificaci√≥n de archivos. Ahora, ¬øqu√© pasa si queremos eliminar objetos del host? Miremos el del y erase comandos.  Eliminar archivos Del y borrado din√°mico","service":"user-service"}
{"level":"info","message":"Al utilizar del o erase, recuerde que podemos especificar un directorio, un nombre de archivo, una lista de nombres o incluso un atributo espec√≠fico al destino al intentar eliminar archivos. Arriba, enumeramos el directorio de ejemplos y luego lo eliminamos file-1. Suficientemente simple, ¬øverdad? Ahora borremos una lista de archivos.  Usar Del y Borrar para eliminar una lista de archivos","service":"user-service"}
{"level":"info","message":"Podemos ver en la sesi√≥n anterior que utilizamos borrar en lugar de del esta vez. Esto fue para mostrar la interoperabilidad de ambos comandos. Piense en ellos como enlaces simb√≥licos. Ambos comandos hacen lo mismo. Esta vez alimentamos borrar una lista de dos archivos, file-3 y file-5. Borr√≥ los archivos sin problemas.  Digamos que queremos deshacernos de un archivo oculto o de solo lectura. Podemos hacer eso con el /A: interruptor. /A puede eliminar archivos en funci√≥n de un atributo espec√≠fico. Veamos la ayuda para del r√°pidamente y veamos cu√°les son esos atributos.  Documentaci√≥n de Del Help","service":"user-service"}
{"level":"info","message":"Entonces, para eliminar un archivo de solo lectura, podemos usar A:R. Esto eliminar√° cualquier cosa dentro de nuestro camino que sea solo de lectura. Sin embargo, ¬øc√≥mo identificamos si un archivo es de solo lectura, oculto o tiene alg√∫n otro atributo? Dir puede venir al rescate nuevamente. Utilizando dir /A:R nos mostrar√° cualquier cosa con el atributo de solo lectura. Vamos a intentarlo.","service":"user-service"}
{"level":"info","message":"Observe que usamos * para especificar cualquier archivo. Ahora, cuando volvemos a mirar el directorio de ejemplos, falta el archivo-66, pero los archivos 2, 4 y 6 todav√≠a est√°n all√≠. Volvamos a dar un golpe con el atributo oculto. Para identificar si hay archivos ocultos dentro del directorio, podemos usar dir /A:H  Visualizaci√≥n de archivos ocultos","service":"user-service"}
{"level":"info","message":"¬øNot√≥ el nuevo archivo que no vimos antes? Ahora file-99 aparece en nuestro directorio enumerando archivos ocultos. Recuerde que al igual que Linux, puede ocultar archivos desde la vista de los usuarios. Con el atributo oculto, el archivo existe y se puede llamar, pero no ser√° visible dentro de una lista de directorios o desde la GUI a menos que los busque espec√≠ficamente. Para eliminar el archivo oculto, podemos realizar el mismo comando del que antes, simplemente cambiando el atributo de R a H.","service":"user-service"}
{"level":"info","message":"Ahora eliminamos con √©xito un archivo con el atributo oculto. Para borrar el directorio con el resto de su contenido, podemos alimentar el del comando con el nombre del directorio para eliminar el contenido y seguirlo con el rd comando para eliminar la estructura del directorio. Si un archivo reside dentro del directorio con el atributo de solo lectura u otro, utilizando el /F el interruptor forzar√° a eliminar el archivo.  Copiar y mover archivos Al igual que los directorios, tenemos varias opciones para copiar o mover archivos. Copy y move son las formas m√°s f√°ciles de lograr esto. Podemos usarlos para hacer copias de un archivo en el mismo directorio o moverlo a otro. Como tarea, esta es una de las m√°s simples que haremos.","service":"user-service"}
{"level":"info","message":"se asumi√≥ al estimar, durante la planificaci√≥n de la iteraci√≥n, el equipo a menudo tendr√° que incluir tareas adicionales que permitan trabajar en las historias en el nuevo orden. Como ejemplo, el orden natural para el sitio web de SwimStats ser√≠a completar las funciones que permiten nadadores al sistema y luego las funciones que permiten al usuario ver los tiempos m√°s r√°pidos de un nadador individual en cada evento. Es un poco inusual pensar en ver los tiempos m√°s r√°pidos de un nadador antes de tener las pantallas a trav√©s de las cuales se agregan los nadadores al sistema. Sin embargo, podr√≠a hacerse si el propietario del producto y el equipo quisieran desarrollar las caracter√≠sticas en ese orden. Para hacerlo, por supuesto, tendr√≠an que dise√±ar una base de datos suficiente para contener a los nadadores y sus tiempos. Tambi√©n tendr√≠an que poner al menos una nadadora y sus tiempos en la base de datos. Debido a que esto es parte de la funci√≥n que no quieren hacer primero, agregar√≠an al nadador (y sus tiempos) a la base de datos directamente en lugar de a trav√©s de cualquier interfaz de usuario y software que hayan desarrollado. Para que el equipo de SwimStats haga esto, durante la iteraci√≥n planificaci√≥n necesitar√°n identificar algunas tareas que no se habr√≠an identificado si estas dos historias se hubieran trabajado en su orden natural. Por ejemplo, si ya existiera la capacidad de agregar nadadores, el equipo no necesitar√≠a incluir una tarea de \"Dise√±ar tablas de base de datos para obtener informaci√≥n sobre nadadores individuales\". Sin embargo, debido a que las historias se est√°n trabajando fuera de su orden natural, deber√°n incluir esta tarea. ¬øSignifica eso que trabajar fuera del orden natural har√° que el proyecto tome m√°s tiempo? Dos respuestas: probablemente no, y no importa. Primero, el proyecto probablemente no llevar√° m√°s tiempo; todo lo que hemos hecho es cambiar algunas tareas de una historia de usuario a otra. El dise√±o de las tablas de nataci√≥n en este ejemplo habr√≠a sucedido tarde o temprano. Cuando llegue el momento de trabajar en la historia sobre la adici√≥n de nuevos nadadores al sistema, esa historia se har√° m√°s r√°pido porque parte de su trabajo ya est√° completo. Puede que le preocupe el impacto que tiene este cambio de tareas en las estimaciones dadas a las dos historias. Podemos, por ejemplo, haber desplazado un punto o un d√≠a ideal de trabajo de una historia a otra. En la mayor√≠a de los casos, esto no es gran cosa, y las diferencias desaparecer√°n en el transcurso del proyecto. En todo caso, he observado que esto es un cambio pesimista, en el que una historia de cinco puntos se convierte en una historia de seis puntos. Pero debido a que el equipo se da cr√©dito a s√≠ mismo por solo cinco puntos cuando terminan, subestiman un poco su velocidad. Debido a que el impacto es peque√±o con un sesgo ligeramente pesimista, por lo general no me preocupo por eso. Sin embargo, si le preocupan estos impactos o si el cambio de tareas es mucho m√°s significativo, recalcule","service":"user-service"}
{"level":"info","message":"las historias involucradas tan pronto como decida trabajar en ellas en un orden diferente al natural. trabajando en ellos fuera de su orden natural. Es posible que el equipo quiera trabajar en las historias en un orden particular para poder abordar un riesgo t√©cnico antes. O el propietario de un producto puede desear comentarios de usuarios anteriores sobre una historia que, de forma m√°s natural, se habr√≠a desarrollado m√°s tarde. Al desarrollar las historias fuera de su orden natural, el equipo puede obtener retroalimentaci√≥n temprana y potencialmente ahorrar uno o dos meses de reelaboraci√≥n cerca del final del proyecto (cuando es menos probable que el cronograma se adapte a dicho cambio). Trabajo que Es dif√≠cil de dividir Algunas funciones son especialmente dif√≠ciles de dividir en tareas. Por ejemplo, hace poco estuve en una reuni√≥n de planificaci√≥n discutiendo un peque√±o cambio en una funci√≥n heredada. Nadie se sent√≠a c√≥modo con su capacidad de pensar en todos los posibles impactos del cambio. Est√°bamos seguros de que algunas secciones del c√≥digo se ver√≠an afectadas, pero no est√°bamos seguros de si otras secciones lo estar√≠an. Los cambios fueron peque√±os en las secciones de las que est√°bamos seguros; los estimamos en un total de cuatro horas. Si las otras secciones se vieron afectadas, pensamos que la estimaci√≥n podr√≠a aumentar mucho m√°s, posiblemente hasta veinte horas. No pod√≠amos estar seguros sin mirar el c√≥digo, y no quer√≠amos detener una reuni√≥n de planificaci√≥n por eso. En su lugar, escribimos estas dos tareas: ‚óÜ Determinar lo que se ve afectado: dos horas. ‚óÜ Realizar los cambios: diez horas. Esta primera tarea se denomina pico. Un pico es una tarea incluida en un plan de iteraci√≥n que se lleva a cabo espec√≠ficamente para obtener conocimiento o responder una pregunta. En este caso, el equipo no tuvo una buena suposici√≥n de algo, por lo que crearon dos tareas: una espiga y un marcador de posici√≥n con una suposici√≥n de la duraci√≥n. El pico ayudar√≠a al equipo a aprender c√≥mo abordar√≠an la otra tarea, lo que les permitir√≠a estimarla. Estimar tareas El siguiente paso en la planificaci√≥n de iteraciones impulsadas por la velocidad es estimar cada tarea. Algunos equipos prefieren estimar las tareas despu√©s de haber identificado todas; otros equipos prefieren estimar las tareas a medida que se identifica cada una. Las estimaciones de tareas se expresan en tiempo ideal. Entonces","service":"user-service"}
{"level":"info","message":"si pienso que una tarea me va a llevar seis horas de tiempo de trabajo, le doy un estimado de seis horas. Hago esto incluso si seis horas de tiempo en la tarea me toman un d√≠a completo de ocho horas. en un proyecto √°gil debe ser un esfuerzo de grupo. Hay cuatro razones para esto. Primero, debido a que las tareas no se asignan a personas espec√≠ficas durante la planificaci√≥n de la iteraci√≥n, es imposible preguntarle a la persona espec√≠fica qui√©n har√° el trabajo. Segundo, aunque esperamos que una persona espec√≠fica sea la que haga una tarea, y aunque √©l sepa m√°s sobre esa tarea, no significa que los dem√°s no tengan nada que aportar. Supongamos que durante una reuni√≥n de planificaci√≥n de la iteraci√≥n, James dice: ‚ÄúMe llevar√° unas dos horas programar eso, ¬°es trivial!‚Äù. Sin embargo, recuerda que el mes pasado, James trabaj√≥ en una tarea similar e hizo un comentario similar, y que le tom√≥ cerca de diecis√©is horas. Esta vez, cuando James dice que una tarea similar tomar√° solo dos horas, puede agregar , ‚ÄúPero James, la √∫ltima vez que trabajaste en una tarea similar, pensaste que ser√≠an dos horas, y te tom√≥ diecis√©is‚Äù. Lo m√°s probable es que James responda con una raz√≥n leg√≠tima de por qu√© este caso realmente es diferente, o estar√° de acuerdo en que hay alguna dificultad o trabajo adicional en este tipo de tarea que ha estado olvidando sistem√°ticamente. ayuda a los equipos a identificar malentendidos sobre una historia de usuario o una tarea. Al escuchar una estimaci√≥n inesperadamente alta, el propietario de un producto o analista puede descubrir que el equipo se dirige hacia una soluci√≥n m√°s detallada de lo necesario. Debido a que la estimaci√≥n se discute entre el equipo, esto se puede corregir antes de que se haga un esfuerzo innecesario. Finalmente, cuando la persona que har√° el trabajo proporciona la estimaci√≥n, el orgullo y el ego de la persona pueden hacer que se resista a admitir m√°s tarde que una estimaci√≥n fue incorrecta. Cuando se realiza una estimaci√≥n en colaboraci√≥n, esta renuencia a admitir que una estimaci√≥n es incorrecta desaparece. Alg√∫n dise√±o est√° bien Naturalmente, es necesario que haya cierta discusi√≥n sobre el dise√±o mientras se crea esta lista de tareas y estimaciones. No podemos crear una lista de tareas si no tenemos una idea de c√≥mo vamos a hacer el trabajo. Sin embargo, afortunadamente, cuando se planifica una iteraci√≥n, no es necesario profundizar mucho en el dise√±o de una caracter√≠stica. voluntad","service":"user-service"}
{"level":"info","message":"aparecer a los usuarios. Los desarrolladores pueden discutir las opciones de c√≥mo implementar√°n lo que se necesita. Ambos tipos de discusi√≥n de dise√±o son necesarios y apropiados. Sin embargo, nunca he estado en una reuni√≥n de planificaci√≥n de iteraciones donde sea necesario dibujar un diagrama de clases o un modelo similar. El deseo de hacerlo es probablemente la mejor se√±al de advertencia de llevar el dise√±o demasiado lejos durante la planificaci√≥n de la iteraci√≥n. Guarde esas discusiones para la planificaci√≥n de iteraciones externas. No es necesario ir tan lejos como para dibujar un dise√±o, porque todo lo que se necesita en este punto son conjeturas sobre el trabajo que se necesitar√° para completar las caracter√≠sticas. Si entra en la iteraci√≥n y descubre que las tareas son incorrectas, desh√°gase de las tareas iniciales y cree otras nuevas. Si una estimaci√≥n es incorrecta, t√°chela y escriba un nuevo valor. Escribir tareas y estimaciones en tarjetas de notas es un gran enfoque porque cada tarjeta lleva consigo un sutil recordatorio de la impermanencia. El tama√±o adecuado para una tarea Las tareas que cree deben tener un tama√±o aproximado para que cada desarrollador pueda terminar un promedio de una por d√≠a. . Este tama√±o funciona bien para permitir que el trabajo fluya sin problemas a trav√©s de su proceso de desarrollo √°gil. Las tareas m√°s grandes tienden a quedar embotelladas con uno o dos desarrolladores, y el resto del equipo puede quedarse esperando a que completen la tarea. Adem√°s, si el equipo realiza reuniones diarias cortas (Schwaber y Beedle 2002; Rising 2002), tener tareas de este tama√±o permite que cada desarrollador informe la finalizaci√≥n de al menos una tarea la mayor√≠a de los d√≠as. Naturalmente, a menudo habr√° tareas que son m√°s grandes que esto. Pero las tareas m√°s grandes generalmente deben entenderse como marcadores de posici√≥n para una o m√°s tareas adicionales que se agregar√°n tan pronto como se entiendan. Si necesita crear una tarea de diecis√©is horas durante la planificaci√≥n de la iteraci√≥n, h√°galo. Sin embargo, una vez que la tarea se comprenda m√°s adecuadamente, aum√©ntela o reempl√°cela. Esto puede significar reemplazar la tarjeta inicial con m√°s o menos de las diecis√©is horas estimadas inicialmente. Planificaci√≥n de la iteraci√≥n basada en el compromiso Un enfoque basado en el compromiso es una forma alternativa de planificar una iteraci√≥n. La planificaci√≥n de la iteraci√≥n basada en el compromiso implica muchos de los mismos pasos que la planificaci√≥n de la iteraci√≥n basada en la velocidad. Sin embargo, en lugar de crear un plan de iteraci√≥n que use la idea del clima de ayer para determinar cu√°ntos puntos de la historia o d√≠as ideales deben planificarse en la iteraci√≥n actual, se le pide al equipo que agregue historias a la iteraci√≥n una por una hasta que puedan comprometerse a no completar m√°s. El enfoque general basado en el compromiso se muestra en la Figura 14.3.","service":"user-service"}
{"level":"info","message":"Los primeros pasos (ajustar las prioridades e identificar un objetivo de iteraci√≥n) son los mismos que en el enfoque basado en la velocidad. El siguiente paso, seleccionar una historia para agregar a la iteraci√≥n, es diferente. El propietario del producto y el equipo a√∫n seleccionan la historia de mayor prioridad que respalda el objetivo de la iteraci√≥n. Sin embargo, en la planificaci√≥n de iteraciones impulsadas por el compromiso, las historias se seleccionan y se descomponen en tareas, y las tareas se estiman una historia a la vez. Esto es diferente del enfoque basado en la velocidad, en el que se seleccion√≥ un conjunto de historias cuyas estimaciones igualaron la velocidad estimada. Las historias se seleccionan una a la vez porque despu√©s de dividir cada historia en tareas y estimar las tareas, el equipo decide si pueden o no comprometerse. para entregar esa historia durante la iteraci√≥n. Pida un compromiso de equipo En su estudio de lo que hace que los equipos tengan √©xito, Larson y LaFasto (1989) determinaron que un compromiso unificado hecho por todos los miembros del equipo es uno de los factores clave que contribuyen al √©xito del equipo. Durante una reuni√≥n de planificaci√≥n de la iteraci√≥n, le pregunto al equipo: \"¬øPueden comprometerse a entregar las caracter√≠sticas que hemos discutido?\" Tenga en cuenta que la pregunta que hago no es \"¬øPuede comprometerse a entregar las tareas que hemos identificado?\" Esa es una pregunta muy diferente y un compromiso mucho m√°s d√©bil, porque es un compromiso de completar un conjunto de tareas en lugar de un compromiso de entregar una nueva funcionalidad. Si se descubren nuevas tareas durante la iteraci√≥n (y es casi seguro que lo ser√°n), un equipo que se compromete a brindar la funcionalidad descrita en una historia de usuario que tambi√©n intentar√° completar las nuevas tareas. Un equipo que se comprometi√≥","service":"user-service"}
{"level":"info","message":"solo una lista identificada de tareas puede no hacerlo. En cualquier caso, es posible que las tareas reci√©n descubiertas tarden lo suficiente como para que no se puedan completar durante la iteraci√≥n. En ese caso, el equipo deber√° discutir la situaci√≥n con el propietario del producto y ver si todav√≠a hay una forma de cumplir con el objetivo de la iteraci√≥n; es posible que necesiten reducir la funcionalidad de una historia o descartarla por completo. Le pregunto a un equipo si pueden comprometerse despu√©s de que cada historia de usuario se divida en tareas y se calculen las tareas. Para la primera historia de usuario, la pregunta a menudo parece tonta. Puede haber siete personas en el equipo, planeando trabajar en una iteraci√≥n de dos semanas. Tal vez hayan identificado solo treinta y cuatro horas de trabajo hasta ahora, y les pregunto si pueden comprometerse a ello. Su respuesta (ya sea verbal oa trav√©s de las miradas confundidas en sus rostros) es ‚ÄúPor supuesto que podemos comprometernos con esto. Somos siete durante dos semanas, y esto son solo treinta y cuatro horas de trabajo‚Äù. Sin embargo, a medida que avanza la reuni√≥n y se incorporan m√°s historias de usuarios a la iteraci√≥n, la respuesta a la pregunta es: \"¬øPuedes comprometerte?\" comienza a requerir alg√∫n pensamiento. Finalmente, llegamos a un punto en el que el equipo no puede comprometerse m√°s. Si no pueden, pueden optar por descartar una historia y reemplazarla por una m√°s peque√±a antes de terminar. Sumar las estimaciones La mejor manera que he encontrado para que un equipo determine si pueden comprometerse con un conjunto de historias de usuarios es resumir las estimaciones dadas. a las tareas y ver si la suma representa una cantidad razonable de trabajo. Es muy posible que haya una gran cantidad de incertidumbre en algunas tareas, porque el trabajo no ha sido dise√±ado y los requisitos son vagos. Sin embargo, la suma de las estimaciones todav√≠a da alguna indicaci√≥n del tama√±o total del trabajo. Supongamos que un equipo de siete est√° trabajando en iteraciones de dos semanas. Tienen 560 horas disponibles cada iteraci√≥n ( ). Sabemos que se dedicar√° una cierta cantidad de tiempo a actividades que no se muestran en las tarjetas de tareas: responder correos electr√≥nicos, participar en reuniones, etc. De manera similar, sabemos que las estimaciones son incorrectas; son, despu√©s de todo, estimaciones, no garant√≠as. Por estas razones, no podemos esperar que este equipo se inscriba en 560 horas de tareas. De hecho, la mayor√≠a de los equipos tienen √©xito cuando su trabajo planificado (la suma de sus tarjetas de tareas) representa entre cuatro y seis horas por d√≠a. Para nuestro equipo de siete personas, trabajar iteraciones de dos semanas significa que probablemente puedan planificar entre 280 y 420 horas. El lugar donde terminar√° un equipo determinado dentro de este rango est√° influenciado por qu√© tan bien identifican las tareas para una historia de usuario determinada, qu√© tan precisas se estiman esas tareas, la cantidad de compromisos externos por parte de los miembros del equipo y la cantidad de gastos generales corporativos generales para el equipo. Despu√©s de tan solo un par de iteraciones, la mayor√≠a de los equipos comienzan a tener una idea de cu√°ntas horas aproximadamente deben planificar para una iteraci√≥n.","service":"user-service"}
{"level":"info","message":"Antes de comprometerse con el trabajo de una iteraci√≥n, el equipo debe analizar las tareas y tener una idea de si representan una distribuci√≥n adecuada del trabajo en funci√≥n de las diversas habilidades dentro del equipo. ¬øEs probable que el programador de Java est√© sobrecargado, mientras que el programador de HTML no tiene nada que hacer en esta iteraci√≥n? ¬øSon las historias de usuario seleccionadas f√°ciles de programar pero consumen mucho tiempo o son dif√≠ciles de probar, por lo que sobrecargan al probador? ¬øLas historias seleccionadas necesitan un an√°lisis y un dise√±o de interacci√≥n con el usuario antes de que pueda comenzar la codificaci√≥n? Un equipo en una situaci√≥n como esta primero debe tratar de encontrar formas de compartir mejor el trabajo. ¬øPuede el programador de HTML en este ejemplo ayudar al probador? ¬øPuede alguien que no sea el dise√±ador de interacci√≥n del usuario hacer ese trabajo? Si no es as√≠, ¬øpodemos dejar fuera de esta iteraci√≥n algunas historias que necesitan un dise√±o de interacci√≥n con el usuario y podemos incluir otras historias que no lo necesiten? La clave es que todos en el equipo sean responsables de contribuir con lo que est√© dentro de sus capacidades, sin importar si es su especialidad.","service":"user-service"}
{"level":"info","message":"Compromisos individuales Al evaluar la capacidad de comprometerse a completar un conjunto de funciones nuevas, algunos equipos prefieren asignar cada tarea a una persona espec√≠fica y luego evaluar si cada individuo puede comprometerse con esa cantidad de trabajo. Este enfoque funciona bien y lo he recomendado en el pasado (Cohn 2004). Sin embargo, descubr√≠ que al no asignar tareas mientras se planifica la iteraci√≥n y no hacer los c√°lculos personales necesarios para hacer compromisos individuales, el equipo se beneficia de la creaci√≥n de una mentalidad de \"estamos todos juntos en esto\". Si necesita asignar tareas a individuos mientras planifica la iteraci√≥n, las asignaciones deben considerarse temporales y sujetas a cambios una vez que la iteraci√≥n est√° en marcha.","service":"user-service"}
{"level":"info","message":"El mantenimiento y el compromiso Adem√°s de avanzar en un proyecto, muchos equipos son responsables del soporte y mantenimiento de otro sistema. Puede ser una versi√≥n anterior del producto en el que est√°n trabajando o puede ser un sistema no relacionado. Cuando un equipo se compromete a completar un conjunto de historias durante una iteraci√≥n, debe hacerlo teniendo en cuenta su carga de mantenimiento y soporte. No me refiero a correcciones de errores generales que se pueden priorizar por adelantado. Esos deben pasar por el proceso de priorizaci√≥n de planificaci√≥n de regulariteraci√≥n. Por actividades de mantenimiento y soporte, me refiero a aquellas partes impredecibles pero necesarias de la vida de muchos equipos: dar soporte a un sitio web o base de datos de producci√≥n, recibir llamadas de soporte de clientes clave o soporte t√©cnico de primer nivel, etc.","service":"user-service"}
{"level":"info","message":"Pienso en una iteraci√≥n como un vaso vac√≠o. Lo primero que se vierte en el vaso son los compromisos inalterables del equipo, como el soporte y mantenimiento de otros productos. El espacio que quede en el vaso estar√° disponible para el equipo cuando se comprometa con el trabajo de una iteraci√≥n. Esto se muestra en la Figura 14.4. Claramente, un equipo cuyo vaso est√° 10% lleno con trabajo de apoyo tendr√° tiempo para comprometerse con m√°s trabajo que un equipo cuyo vaso comienza 90% lleno.","service":"user-service"}
{"level":"info","message":"En la mayor√≠a de las situaciones, el equipo no podr√° predecir su pr√≥xima carga de soporte con mucha precisi√≥n. Deben conocer un promedio a largo plazo, pero promediar veinte horas de soporte por semana no es lo mismo que tener veinte horas cada semana. Si la carga de soporte y mantenimiento supera las expectativas durante una iteraci√≥n, es posible que no puedan cumplir con su compromiso. Necesitan contrarrestar esto tratando de exceder su compromiso cuando la carga de soporte y mantenimiento es menor de lo esperado en algunas iteraciones. Esta variabilidad es ineludible en equipos con importantes obligaciones de soporte y mantenimiento. Mi recomendaci√≥n Tanto la planificaci√≥n de iteraciones basada en la velocidad como la basada en el compromiso son enfoques viables; sin embargo, prefiero el enfoque basado en el compromiso. Aunque la velocidad juega un papel cr√≠tico en la planificaci√≥n de lanzamientos, no creo que deba jugar un papel equivalente en la planificaci√≥n de iteraciones. Hay dos razones para esto. Primero, debido a que la velocidad es una medida de estimaciones de grano grueso (puntos de la historia o d√≠as ideales), no es lo suficientemente precisa para planificar el trabajo de iteraciones cortas. Podemos usar estas estimaciones de grano grueso para estimar el cantidad total de","service":"user-service"}
{"level":"info","message":"trabajo que un equipo completar√° durante una iteraci√≥n. Sin embargo, no podemos usarlos de la misma manera para planificar el trabajo a corto plazo de una sola iteraci√≥n. En segundo lugar, un equipo necesitar√≠a completar de veinte a treinta historias de usuario por iteraci√≥n para detectar errores en el punto de la historia o las estimaciones del d√≠a ideal para ser por t√©rmino medio. Muy pocos equipos completan tantas historias en una iteraci√≥n. Para ver el resultado de estos problemas, suponga que un equipo ha tenido una velocidad de treinta en cada una de las √∫ltimas cinco iteraciones. Eso es lo m√°s consistente posible, y es probable que completen treinta puntos nuevamente en la pr√≥xima iteraci√≥n. Sin embargo, sabemos que no todas las historias de cinco puntos son iguales. Si tuvi√©ramos que clasificar una gran colecci√≥n de historias de cinco puntos, sabemos que podr√≠amos identificar seis historias de cinco puntos que parec√≠an un poco m√°s f√°ciles que las de cinco puntos. Es posible que nos equivoquemos en algunos, pero si esta fuera la primera vez que intentamos esto, probablemente tendr√≠amos √©xito. Podr√≠amos aumentar nuestra velocidad de treinta a cuarenta. Por otro lado, podr√≠amos seleccionar solo las historias de cinco puntos que parecen un poco m√°s dif√≠ciles. Seguimos pensando que deber√≠an estimarse en cinco puntos, pero son un poco m√°s dif√≠ciles que las otras historias de cinco puntos. cinco duros. Sin embargo, la mayor√≠a de los equipos planifican entre tres y una docena de historias en cada iteraci√≥n. Al incluir esas pocas historias en una iteraci√≥n, un equipo sin duda tendr√° suerte y seleccionar√° todas las ligeramente f√°ciles o desafortunadas y seleccionar√° todas las ligeramente m√°s dif√≠ciles de vez en cuando. velocidad al planificar una iteraci√≥n. Sin embargo, debido a que estas diferencias se promedian en el transcurso de un lanzamiento, la velocidad funciona extremadamente bien para la planificaci√≥n del lanzamiento.","service":"user-service"}
{"level":"info","message":"Relaci√≥n de las estimaciones de tareas con los puntos de la historia A menudo me piden que explique la relaci√≥n entre las estimaciones de tareas utilizadas durante la planificaci√≥n de la iteraci√≥n y los puntos de la historia o los d√≠as ideales utilizados para la planificaci√≥n de lanzamientos a m√°s largo plazo. Veo equipos que se desv√≠an cuando comienzan a creer que existe una fuerte relaci√≥n entre un punto de la historia y un n√∫mero exacto de horas. Por ejemplo, recientemente ayud√© a un equipo que hab√≠a rastreado su n√∫mero real de horas productivas por iteraci√≥n y su velocidad por iteraci√≥n. A partir de esto, calcularon que cada punto de la historia tom√≥ aproximadamente doce horas de trabajo. Su visi√≥n se convirti√≥ en la certeza equivocada de que cada punto de la historia equival√≠a siempre a doce horas de trabajo. Sin embargo, el caso real fue algo m√°s cercano al que se muestra en la Figura 14.5.","service":"user-service"}
{"level":"info","message":"La figura 14.5 muestra que, en promedio, llevar√° doce horas completar una historia de usuario de un punto. Sin embargo, tambi√©n muestra que algunas historias de un punto ser√°n in√∫tiles y otras requerir√°n m√°s. Hasta que el equipo calcule las tareas subyacentes de una historia, es dif√≠cil saber d√≥nde se encuentra una historia en particular en una curva como esta.","service":"user-service"}
{"level":"info","message":"Aunque la Figura 14.5 muestra la distribuci√≥n de horas para una historia de usuario de un punto, la Figura 14.6 muestra las distribuciones hipot√©ticas para historias de uno, dos y tres puntos. En esta figura, cada punto de la historia sigue siendo equivalente a doce horas en promedio. Sin embargo, es posible que algunas historias de un punto tomen m√°s tiempo que algunas historias de dos puntos.","service":"user-service"}
{"level":"info","message":"Que algunas historias de dos puntos tomen menos tiempo para desarrollarse que algunas historias de un punto es completamente razonable y esperable. No es un problema siempre que haya suficientes historias en el lanzamiento para que estos valores at√≠picos se promedien, y siempre que todos en el proyecto recuerden que algunas historias llevar√°n m√°s tiempo que otras, aunque sus estimaciones iniciales de alto nivel fueran las mismas.","service":"user-service"}
{"level":"info","message":"D√≠as de la semana Cuando comenc√© a administrar proyectos √°giles, mis equipos comenzaban rutinariamente sus iteraciones un lunes y las terminaban un viernes. Har√≠amos esto ya sea que el equipo espec√≠fico estuviera usando iteraciones de dos, tres o cuatro semanas. Los lunes parec√≠an un d√≠a normal para comenzar una iteraci√≥n, y los viernes eran un d√≠a obvio para terminar. Cambi√© de opini√≥n sobre esto despu√©s de comenzar a entrenar a un equipo que estaba desarrollando un sitio web que estaba ocupado durante la semana y apenas se usaba los fines de semana. La noche m√°s l√≥gica para que este equipo implementara nuevas actualizaciones web era el viernes por la noche. Si algo sal√≠a mal, pod√≠an arreglarlo durante el fin de semana y el impacto ser√≠a m√≠nimo porque el sitio se usaba muy poco durante ese tiempo. Para adaptarse a esto, este equipo decidi√≥ ejecutar iteraciones de dos semanas que comenzar√≠an un viernes y terminar√≠an un jueves. Esto funcion√≥ maravillosamente. Los viernes se dedicaron a revisar la iteraci√≥n y a planificar la pr√≥xima iteraci√≥n. Esto tomaba hasta media tarde la mayor√≠a de los viernes, despu√©s de lo cual el equipo comenzaba con el trabajo de la nueva iteraci√≥n o de vez en cuando sal√≠a a tomar algo oa jugar a los bolos. La iteraci√≥n comenzar√≠a en serio el lunes siguiente. Esto fue genial porque no hab√≠a miedo de un lunes lleno de reuniones, como lo hab√≠a cuando el lunes era el d√≠a de revisi√≥n y planificaci√≥n. El equipo tambi√©n se benefici√≥ al usar ocasionalmente el viernes por la ma√±ana para terminar cualquier trabajo de √∫ltimo minuto que no hab√≠an podido terminar el jueves. . No ten√≠an la costumbre de esto, y sucedi√≥ solo unas pocas veces; sin embargo, era preferible pasar unas cuantas horas del viernes por la ma√±ana terminando las cosas que venir durante el fin de semana (como habr√≠an hecho con un inicio de iteraci√≥n del lunes).","service":"user-service"}
{"level":"info","message":"A diferencia de un plan de lanzamiento, un plan de iteraci√≥n analiza con m√°s detalle el trabajo espec√≠fico de una sola iteraci√≥n. En lugar del horizonte de tres a nueve meses de un plan de lanzamiento t√≠pico, el plan de iteraci√≥n no contempla m√°s que una sola iteraci√≥n. Las historias de usuario bastante grandes de un plan de lanzamiento se descomponen en tareas en el plan de iteraci√≥n. Cada tarea se estima en t√©rminos de la cantidad ideal de horas que llevar√° completarla.","service":"user-service"}
{"level":"info","message":"Existen dos enfoques generales para planificar una iteraci√≥n: impulsada por la velocidad y controlada por el compromiso. Los dos enfoques comparten muchos pasos y, a menudo, dan como resultado la creaci√≥n del mismo plan de iteraci√≥n. Preguntas de discusi√≥n 1. ¬øQu√© enfoque de planificaci√≥n de iteraciones prefiere: basado en la velocidad o basado en el compromiso? ¬øPor qu√©? 2. ¬øQu√© piensa de no tener miembros del equipo que se registren para tareas espec√≠ficas durante la planificaci√≥n de la iteraci√≥n?","service":"user-service"}
{"level":"info","message":"‚ÄúTodo es vago hasta el punto de que no te das cuenta hasta que tratas de hacerlo preciso‚Äù.‚ÄîBertrand RussellLa mayor√≠a de los procesos √°giles, y los equipos que los usan, se han establecido en iteraciones de dos a cuatro semanas. Algunos equipos usan iteraciones m√°s largas, pero de dos a cuatro semanas es un est√°ndar aceptado para la mayor√≠a de los equipos. No hay una duraci√≥n de iteraci√≥n m√°gica que sea adecuada para todos los equipos en todas las circunstancias. La duraci√≥n adecuada para un equipo en un proyecto puede no ser la duraci√≥n adecuada para ese mismo equipo en un proyecto diferente. Factores para seleccionar la duraci√≥n de una iteraci√≥n La selecci√≥n de la duraci√≥n de la iteraci√≥n debe guiarse por los siguientes factores:‚óÜ La duraci√≥n de la versi√≥n en la que se est√° trabajando‚óÜ La cantidad de incertidumbre‚óÜ La facilidad para obtener retroalimentaci√≥n‚óÜ Cu√°nto tiempo pueden permanecer sin cambios las prioridades‚óÜ La voluntad de continuar sin retroalimentaci√≥n externa‚óÜ La sobrecarga de la iteraci√≥n‚óÜ Qu√© tan pronto se establece un sentimiento de urgencia","service":"user-service"}
{"level":"info","message":"No hay una importancia relativa predeterminada para estos factores. La importancia de cada uno depende completamente del contexto del proyecto. La duraci√≥n total de los proyectos ReleaseShort se benefician de iteraciones cortas. La duraci√≥n de las iteraciones de un proyecto determina‚óÜ Con qu√© frecuencia se puede mostrar el software (en una forma potencialmente entregable) a los usuarios y clientes. S√≠, por supuesto, el software se puede mostrar en forma de iteraci√≥n intermedia a estas audiencias, pero el software generalmente tiene una calidad potencialmente entregable solo al final de una iteraci√≥n.‚óÜ Con qu√© frecuencia se puede medir el progreso. Es posible tener una idea de la tasa de progreso de un equipo durante una iteraci√≥n, pero solo al final de una iteraci√≥n podemos medir realmente cu√°nto trabajo se ha completado realmente.‚óÜ Con qu√© frecuencia el propietario del producto y el equipo pueden refinar su curso, porque las prioridades y los planes se ajustan entre iteraciones. Si un equipo est√° trabajando para un lanzamiento que tal vez est√© a solo tres meses de distancia, las iteraciones de un mes les dar√°n solo dos oportunidades para recopilar comentarios al final de la iteraci√≥n, medir el progreso y ajustar el curso. En la mayor√≠a de los casos, esto ser√° insuficiente. Mi regla general es que cualquier proyecto se beneficiar√° de tener al menos cuatro o cinco oportunidades de este tipo. Esto significa que si la duraci√≥n total del proyecto ser√° de cuatro meses o m√°s, podr√≠a valer la pena considerar iteraciones mensuales o de cuatro semanas. Sin embargo, si el lanzamiento general ser√° m√°s corto, el proyecto se beneficiar√° de iteraciones proporcionalmente m√°s cortas. La cantidad de incertidumbre La incertidumbre se presenta en m√∫ltiples formas. A menudo hay incertidumbre sobre lo que necesitan exactamente el cliente o los usuarios, cu√°l ser√° la velocidad del equipo y sobre los aspectos t√©cnicos del proyecto. Cuanta m√°s incertidumbre de cualquier tipo haya, m√°s cortas deber√≠an ser las iteraciones. Cuando hay mucha incertidumbre sobre el trabajo a realizar o el producto a construir, las iteraciones cortas brindan oportunidades m√°s frecuentes para que el equipo mida su progreso a trav√©s de su velocidad y m√°s oportunidades para obtener retroalimentaci√≥n de las partes interesadas, los clientes y los usuarios.","service":"user-service"}
{"level":"info","message":"La duraci√≥n de la iteraci√≥n Facilidad para obtener comentarios debe elegirse para maximizar la cantidad, la frecuencia y la puntualidad de los comentarios para todo el equipo. Dependiendo del entorno, esto puede significar iteraciones m√°s largas o m√°s cortas. En algunas organizaciones, es extremadamente f√°cil obtener comentarios informales de las partes interesadas internas o de los usuarios a lo largo de una iteraci√≥n, pero es extremadamente dif√≠cil lograr que estas mismas personas participen en una reuni√≥n de revisi√≥n programada al final de la iteraci√≥n. Otras organizaciones tienen el problema opuesto; Es dif√≠cil obtener retroalimentaci√≥n en el d√≠a a d√≠a, pero las partes interesadas, los usuarios y otros asistir√°n a una reuni√≥n de revisi√≥n formal programada (especialmente si se proporciona comida). Elija la duraci√≥n de la iteraci√≥n para maximizar el valor de la retroalimentaci√≥n que puede recibir. recibidas de personas dentro y fuera de la organizaci√≥n. Cu√°nto tiempo pueden permanecer sin cambios las prioridades Una vez que un equipo de desarrollo se compromete a completar un conjunto espec√≠fico de funciones en la aniteraci√≥n, es importante que no sean redirigidos de ese objetivo. Por lo tanto, es importante que el propietario del producto no cambie las prioridades durante la iteraci√≥n y que ayude a proteger al equipo de otros que puedan intentar cambiar las prioridades. Debido a esto, la cantidad de tiempo que las prioridades pueden permanecer sin cambios es un factor a la hora de seleccionar la duraci√≥n de la iteraci√≥n. Una consideraci√≥n clave es cu√°nto tiempo se necesita para que una buena idea nueva se convierta en un software funcional. Considere el caso de un equipo que usa iteraciones de cuatro semanas. Si suponemos que las nuevas ideas tienen la misma probabilidad de ocurrir en cualquier momento durante una iteraci√≥n, en promedio, se puede decir que una nueva idea ocurre en medio de la iteraci√≥n. Esa nueva idea tendr√° prioridad en la pr√≥xima iteraci√≥n, que comienza en dos semanas. Tomar√° otras cuatro semanas (una iteraci√≥n completa) antes de que la nueva idea aparezca como un software de trabajo potencialmente entregable. Esto se muestra en la Figura 15.1. El punto clave a recordar de este ejemplo es que el tiempo desde la nueva idea hasta que el software funcione ser√° un promedio de 1¬Ω veces la duraci√≥n de las iteraciones del equipo. el nuevo trabajo de desarrollo mantendr√° una cierta cantidad de tiempo en reserva para esas actividades de soporte y mantenimiento. La figura 15.1 realmente ilustra la situaci√≥n en la que alguien se acerca al equipo con una idea que no encaja como parte de su reserva de mantenimiento o soporte.","service":"user-service"}
{"level":"info","message":"Voluntad de ir sin retroalimentaci√≥n externa Incluso con un equipo bien intencionado y altamente comunicativo, es posible que los resultados de una iteraci√≥n no tengan valor cuando se muestran a la organizaci√≥n en general o a usuarios externos al final de la iteraci√≥n. Esto puede suceder si los desarrolladores malinterpretan al propietario del producto (y no se comunican con la suficiente frecuencia durante la iteraci√≥n). Tambi√©n podr√≠a ocurrir si el propietario del producto no entiende las necesidades del mercado o de los usuarios. La p√©rdida casi nunca es completa mientras aprendemos algo de ella. Sin embargo, cuanto menos a menudo un equipo recibe retroalimentaci√≥n externa, m√°s probable es que nos desviemos y mayor ser√° la p√©rdida cuando eso suceda. Los gastos generales de la iteraci√≥n Hay costos asociados con cada iteraci√≥n. Por ejemplo, cada iteraci√≥n debe someterse a una prueba de regresi√≥n completa. Si esto es costoso (generalmente en t√©rminos de tiempo), el equipo puede preferir iteraciones m√°s largas de cuatro semanas. Naturalmente, uno de los objetivos de un equipo √°gil exitoso es reducir (o casi eliminar) la sobrecarga asociada con cada iteraci√≥n. Pero especialmente durante las primeras iteraciones de un equipo, este costo puede ser significativo e influir√° en la decisi√≥n sobre la mejor duraci√≥n de la iteraci√≥n. Qu√© tan pronto se establece un sentimiento de urgencia El colega Niels Malotaux (2004) se√±ala que ‚Äúsiempre que la fecha de finalizaci√≥n de un proyecto est√© lejos en el futuro, no sentimos ninguna presi√≥n y trabajamos tranquilamente. Cuando la presi√≥n de la fecha de finalizaci√≥n se vuelve tangible, empezamos a trabajar m√°s duro‚Äù. Incluso con iteraciones de cuatro semanas, la fecha de finalizaci√≥n nunca est√° muy lejana en el futuro. Pero es","service":"user-service"}
{"level":"info","message":"lo suficientemente lejos como para que muchos equipos sientan menos estr√©s tangible durante la primera semana que durante la cuarta y √∫ltima semana de una iteraci√≥n. La soluci√≥n a esto, por supuesto, es seleccionar una duraci√≥n de la iteraci√≥n que iguale la presi√≥n que siente el equipo. El punto es no poner al equipo bajo m√°s presi√≥n (\"¬°Cumplir√°s hoy!\"). M√°s bien, es tomar la cantidad total de estr√©s que normalmente sentir√≠an y distribuirla de manera m√°s uniforme a lo largo de una iteraci√≥n adecuada.","service":"user-service"}
{"level":"info","message":"C√≠√±ete a √©l para lograr un ritmo constante Cualquiera que sea la duraci√≥n que elijas, es mejor que elijas una duraci√≥n y la mantengas en lugar de cambiarla con frecuencia. Los equipos caen en un ritmo natural cuando usan una duraci√≥n de iteraci√≥n invariable. Cuando comenc√© a realizar un desarrollo √°gil usando una variaci√≥n temprana de Scrum (Takeuchi y Nonaka 1986; DeGrace y Stahl 1990), mis equipos sol√≠an seleccionar la duraci√≥n de cada iteraci√≥n en funci√≥n de la cantidad de trabajo que tra√≠amos a esa iteraci√≥n. Una iteraci√≥n de dos semanas podr√≠a ser seguida por una iteraci√≥n de seis semanas, que podr√≠a ser seguida por una iteraci√≥n de cuatro semanas, y as√≠ sucesivamente. A trav√©s de la experimentaci√≥n en muchos proyectos, he aprendido que es mucho mejor para los equipos dimensionar el trabajo seg√∫n la duraci√≥n de la iteraci√≥n (en lugar de dimensionar la iteraci√≥n seg√∫n el trabajo). Un ritmo de iteraci√≥n regular act√∫a como un latido del coraz√≥n para el proyecto. El colega Simon Baker, un entrenador √°gil de think-box ltd., lo describe diciendo que ‚ÄúAl igual que un coraz√≥n late con una regularidad que mantiene el cuerpo en movimiento, una duraci√≥n de iteraci√≥n fija proporciona una constante que ayuda a establecer un ritmo de desarrollo (y entrega). El ritmo en mi experiencia es un factor significativo que ayuda a lograr un ritmo sostenido‚Äù (2004).","service":"user-service"}
{"level":"info","message":"Uno de los objetivos principales al seleccionar la duraci√≥n de una iteraci√≥n es encontrar una que anime a todos a trabajar a un ritmo constante durante toda la iteraci√≥n. Si la duraci√≥n es demasiado larga, existe una tendencia natural a relajarse un poco al comienzo de la iteraci√≥n, lo que genera p√°nico y horas m√°s largas al final de la iteraci√≥n. Esfu√©rcese por encontrar una duraci√≥n de la interacci√≥n que suavice estas variaciones. Habiendo experimentado con una variedad de longitudes de iteraci√≥n, mi preferencia general es de dos semanas. Las iteraciones de una semana (o algo m√°s corto) pueden ser muy agitadas y estresantes. La pr√≥xima fecha l√≠mite nunca es m√°s de cuatro d√≠as de distancia. Las iteraciones extremadamente cortas no dejan tiempo para la recuperaci√≥n si un miembro del equipo est√° enfermo o si","service":"user-service"}
{"level":"info","message":"todo sale mal A menos que un proyecto ya tenga pruebas completamente automatizadas para todas las partes del sistema, no suelo recomendar comenzar con iteraciones de una semana. Una iteraci√≥n de cuatro semanas, por otro lado, comienza a parecer una eternidad despu√©s de haber trabajado en uno y dos. - iteraciones semanales. Con iteraciones de cuatro semanas, encuentro que el equipo a menudo tiene tiempo para investigar y buscar soluciones m√°s creativas que con iteraciones m√°s cortas. Un equipo √°gil experimentado que trabaja en una fase altamente exploratoria de un proyecto puede beneficiarse de una iteraci√≥n de cuatro semanas. Sin embargo, las iteraciones de cuatro semanas tienen una sensaci√≥n de comienzos, mitades y finales muy distintos. No me gusta lo diferente que se siente el comienzo relajado del final m√°s fren√©tico. Considero que las iteraciones de dos semanas son ideales. Los gastos generales de planificaci√≥n y pruebas son mucho m√°s manejables cuando se amortizan en dos semanas. La primera semana de una iteraci√≥n de dos semanas puede sentirse diferente a la segunda semana, pero la diferencia no es tan dram√°tica como en una iteraci√≥n de cuatro semanas. Adem√°s, la mayor√≠a de las organizaciones pueden (con suficiente capacitaci√≥n) aprender a no ajustar las prioridades durante dos semanas, mientras que hacerlo durante cuatro semanas puede ser muy dif√≠cil.","service":"user-service"}
{"level":"info","message":"6 x 2 + 1Trabajar en iteraciones interminables de dos semanas puede ser una tensi√≥n para un equipo debido a la presi√≥n constante para cumplir y porque la fecha l√≠mite nunca es m√°s lejana que la pr√≥xima semana. Mi t√©cnica favorita para ayudar a reducir esta tensi√≥n es seguir un macrociclo de seis iteraciones de dos semanas seguidas de una iteraci√≥n de una semana. Me refiero a este ciclo como \"6 x 2 + 1\". Durante las iteraciones de dos semanas, el equipo trabaja en elementos priorizados por el propietario del producto. Sin embargo, durante la iteraci√≥n de una semana, el equipo elige su propio trabajo. Eso no significa que sea hora de jugar o de una semana en la playa. M√°s bien, las personas del equipo usan este tiempo para concentrarse en lo que ven como trabajo prioritario para el proyecto. Los programadores pueden realizar refactorizaciones que consideraron demasiado arriesgadas en medio de otras iteraciones o experimentar con nuevas tecnolog√≠as relevantes. Un probador puede ponerse al d√≠a con la automatizaci√≥n de pruebas manuales heredadas. Un analista puede trabajar en una pr√≥xima gran caracter√≠stica que siente que no ha recibido suficiente atenci√≥n. La oportunidad de tener una semana de trabajo que ellos mismos priorizan colectivamente puede ser muy estimulante para un equipo. Es importante enfatizar que esta iteraci√≥n de una semana no es un basurero para el trabajo descuidado de las iteraciones anteriores. M√°s bien, es un momento en el que los equipos pueden resolver parte de la deuda t√©cnica contra√≠da durante las primeras iteraciones mientras aprenden a ser √°giles o desde los d√≠as previos a la agilidad del proyecto.","service":"user-service"}
{"level":"info","message":"Para ver c√≥mo aplicar estos factores, consideremos dos equipos: el equipo de Napa y el equipo de Goodman. Cada uno es un equipo real con solo algunos detalles menores cambiados. El Proyecto Napa El equipo Napa de siete personas estaba trabajando en una aplicaci√≥n de escritorio cliente-servidor. La aplicaci√≥n ser√≠a utilizada por 600 empleados de la empresa. No se vender√≠a ni utilizar√≠a fuera de la empresa. Los usuarios estaban ubicados en tres ciudades, una de las cuales tambi√©n albergaba a todo el equipo de desarrollo. La idea del producto comenz√≥ como una actualizaci√≥n tecnol√≥gica de un sistema existente cuyo mantenimiento se hab√≠a vuelto costoso. Sin embargo, debido a los cambios en el negocio principal de la empresa, tambi√©n se planific√≥ una gran cantidad de nuevas funciones en el proyecto. Se hab√≠a estimado que el proyecto tomar√≠a trece meses, pero el r√°pido crecimiento de la compa√±√≠a estaba creando presi√≥n para un lanzamiento anterior, incluso si solo inclu√≠a una funcionalidad parcial. Para el proyecto de Napa, el equipo eligi√≥ iteraciones de cuatro semanas. Sab√≠amos que el proyecto durar√≠a al menos seis meses, por lo que incluso las iteraciones de cuatro semanas nos dieron muchas oportunidades para llevar el software a un estado potencialmente liberable para que pudi√©ramos ponerlo en manos de usuarios reales. El proyecto ten√≠a una cantidad justa pero no excesiva de requisitos e incertidumbre tecnol√≥gica. Todos los desarrolladores ten√≠an experiencia en las tecnolog√≠as que se utilizaban (C++ y Oracle). Y aunque la nueva aplicaci√≥n tendr√≠a caracter√≠sticas que iban mucho m√°s all√° de lo que hac√≠a la aplicaci√≥n actual, ten√≠amos la aplicaci√≥n actual como un modelo b√°sico de lo que se necesitaba. El equipo del proyecto se ubic√≥ junto con muchos de los usuarios previstos del sistema. La mayor√≠a de los usuarios estaban ansiosos por participar en las discusiones sobre lo que ser√≠a su nuevo sistema. Sin embargo, la empresa estaba creciendo tan r√°pido que el acceso a estos usuarios estaba parcialmente restringido. Tuvimos que tener cuidado de no usar demasiado de su tiempo. Las iteraciones de cuatro semanas funcionaron bien en esta situaci√≥n. Mostrarles nuevas versiones cada dos semanas hubiera sido demasiado en este entorno. Al hacer que una nueva versi√≥n estuviera disponible cada cuatro semanas, pudimos hacer que m√°s usuarios experimentaran con el software en un espacio aislado que hab√≠amos configurado para ese prop√≥sito. Como se trataba de una aplicaci√≥n completamente nueva, hubo muy poca sobrecarga de iteraci√≥n, por lo que no fue un factor en la decisi√≥n. Este proyecto fue fundamental para el √©xito continuo de la empresa y tuvo una visibilidad extremadamente alta desde el CEOdown. En su mayor parte, pudimos establecer y mantener prioridades durante cuatro semanas. Incluso con cuatro semanas, se mantuvo un sentido de urgencia porque","service":"user-service"}
{"level":"info","message":"el equipo se mantuvo consciente de la necesidad de poner una versi√≥n inicial en manos de los usuarios lo m√°s r√°pido posible. El Proyecto Goodman El equipo de Goodman estaba trabajando en la primera versi√≥n de una aplicaci√≥n comercial empresarial. En el transcurso de los primeros tres a√±os, la empresa esperaba vender no m√°s de 5.000 licencias para el software. Sin embargo, el producto ser√≠a caro, con un precio promedio de $50,000 por usuario. Dieciocho desarrolladores se dividieron en dos equipos coordinados. Se esperaba que el proyecto Goodman tomara un a√±o, pero se planific√≥ un lanzamiento preliminar para un pu√±ado de clientes despu√©s de seis meses. Para el proyecto Goodman, el equipo eligi√≥ iteraciones de dos semanas. Debido a que ten√≠amos como objetivo un lanzamiento inicial dentro de seis meses, el equipo podr√≠a haber usado iteraciones de cuatro semanas. Sin embargo, hab√≠a una enorme cantidad de incertidumbre sobre este proyecto. La empresa pens√≥ que sab√≠a qui√©nes ser√≠an los usuarios del producto, pero los debates ocasionales sobre esto se desencadenaron dentro de la empresa. No estaba claro si el producto deber√≠a ser el sistema de gama alta y precio alto que se concibi√≥ inicialmente o si deber√≠amos apuntar a un p√∫blico m√°s amplio a un precio m√°s bajo. Esta decisi√≥n se tom√≥, se rehizo y luego se volvi√≥ a tomar, pero nunca con la suficiente fuerza como para que el equipo pudiera confiar en la respuesta. Tambi√©n hubo un gran componente de requisitos emergentes de la variedad \"Lo sabr√© cuando lo vea\". Fue dif√≠cil obtener comentarios sobre este problem√°tico proyecto. Debido a que era un producto comercial, no ten√≠amos usuarios internos. Muchos de los principales clientes y posibles clientes de la empresa estaban en el extranjero, lo que complicaba las cosas. Hab√≠a una cantidad de personas dentro de la empresa que probablemente habr√≠an sido usuarios si hubieran trabajado en las empresas de nuestros clientes objetivo, por lo que los usamos como representantes de nuestros usuarios reales. Debido a toda la incertidumbre y el cambio en este proyecto, quer√≠amos recibir comentarios con la mayor frecuencia posible, lo que apuntaba hacia iteraciones m√°s cortas. iteraciones de una semana que elegimos. El equipo de automatizaci√≥n de pruebas en este proyecto hab√≠a estado presente desde el comienzo del proyecto e hizo un muy buen trabajo. Esto ayud√≥ a mantener bajos los gastos generales de iteraci√≥n y nos permiti√≥ tener √©xito con iteraciones cortas. Finalmente, dado que la empresa era una empresa de reciente creaci√≥n y recientemente p√∫blica, era importante que mantuvi√©ramos un sentido de urgencia. La compa√±√≠a se hab√≠a hecho p√∫blica con la promesa de que pronto vendr√≠a un gran software. Las iteraciones cortas de dos semanas nos ayudaron a mantener un fuerte enfoque en desarrollar ese software lo m√°s r√°pido posible.","service":"user-service"}
{"level":"info","message":"Evite el final del trimestre Aunque puede ser tentador alinear las iteraciones con el final del mes, evito hacerlo a toda costa. Si vincula las iteraciones al final de los meses, una de cada tres iteraciones coincidir√° con el final de un trimestre fiscal. Aunque esto no es un problema tan grande con las empresas privadas, existe una tremenda presi√≥n en las empresas p√∫blicas para alcanzar las metas de ingresos trimestrales. Yo estaba en un proyecto que hab√≠a programado una nueva versi√≥n significativa para el viernes 31 de marzo de 2000. objetivo clave para gran parte de la empresa durante nueve meses (que es el l√≠mite superior de cu√°nto tiempo debe durar un solo lanzamiento). Cuando faltaban dos semanas para el lanzamiento, el propietario de nuestro producto se fue de vacaciones de primavera con sus hijos en edad escolar. Mientras estuvo en Disney World, intent√≥ valientemente participar en algunas llamadas y responder algunas de nuestras preguntas m√°s importantes. A√∫n as√≠, su ausencia lleg√≥ en un momento cr√≠tico, y no se complet√≥ un trabajo importante en lo que ser√≠a la iteraci√≥n final antes del gran lanzamiento. Cuando el propietario del producto regres√≥, pudimos resolver todos los problemas abiertos restantes en un plazo m√°s corto de lo normal. iteraci√≥n de una semana. Esto retras√≥ nuestra fecha de lanzamiento del 31 de marzo al 7 de abril. Aunque la diferencia de una semana puede no parecer muy cr√≠tica para un proyecto de nueve meses, el hecho de que la demora retras√≥ la entrega de un trimestre al siguiente fue muy significativo para esta empresa que cotiza en bolsa. Cuando el env√≠o inicial planificado de cientos de copias no se realiz√≥ el 31 de marzo, los ingresos de esas preventas y actualizaciones no pudieron reconocerse hasta el segundo trimestre. Tambi√©n podr√≠amos haber entregado el 30 de junio como el 7 de abril. No he planeado un lanzamiento de fin de mes desde entonces. Hay demasiadas inc√≥gnitas, incognoscibles e incertidumbres en el desarrollo de software como para querer arriesgarse a reconocer los ingresos apuntando a un lanzamiento de fin de trimestre.","service":"user-service"}
{"level":"info","message":"La mayor√≠a de los equipos √°giles trabajan en iteraciones de dos a cuatro semanas. No existe una longitud de iteraci√≥n universalmente correcta que sea adecuada para todos los equipos. M√°s bien, cada equipo debe considerar su situaci√≥n √∫nica y elegir la duraci√≥n de iteraci√≥n adecuada para ellos. Los factores en esta decisi√≥n incluyen‚óÜ La duraci√≥n del lanzamiento en el que se est√° trabajando‚óÜ La cantidad de incertidumbre","service":"user-service"}
{"level":"info","message":"‚óÜ La facilidad de obtener retroalimentaci√≥n ‚óÜ Cu√°nto tiempo pueden permanecer sin cambios las prioridades ‚óÜ Disposici√≥n a continuar sin retroalimentaci√≥n ‚óÜ La sobrecarga de la iteraci√≥n ‚óÜ Qu√© tan pronto se establece un sentimiento de urgencia Preguntas de discusi√≥n1. ¬øCu√°l es la iteraci√≥n apropiada para su proyecto actual?2. ¬øQu√© diferencias esperar√≠a en su proyecto si usara iteraciones de una semana? ¬øQu√© diferencias esperar√≠a si usara iteraciones de dos meses?","service":"user-service"}
{"level":"info","message":"Es mejor estar m√°s o menos en lo correcto que exactamente equivocado‚Äù.‚ÄîJohn Maynard Keynes Uno de los desaf√≠os de planificar un lanzamiento es estimar la velocidad del equipo. Tiene las siguientes tres opciones: ‚óÜ Usar valores hist√≥ricos. ‚óÜ Ejecutar una iteraci√≥n. ‚óÜ Hacer un pron√≥stico. Hay ocasiones en que cada uno de estos enfoques es apropiado. Sin embargo, independientemente del enfoque que est√© utilizando, si necesita estimar la velocidad, debe considerar expresar la estimaci√≥n como un rango. Suponga que estima que la velocidad para un equipo determinado en un proyecto determinado ser√° de 20 d√≠as ideales por iteraci√≥n. Tiene una posibilidad muy limitada de acertar. La velocidad puede ser 21, 19 o incluso 20,0001. Entonces, en lugar de decir que la velocidad ser√° 20, proporcione su estimaci√≥n como un rango, diciendo quiz√°s en su lugar que estima que la velocidad estar√° entre 15 y 24. En las siguientes secciones, describir√© cada uno de los tres enfoques generales: usando hist√≥ricos, ejecutando una iteraci√≥n , y hacer un pron√≥stico, y para cada uno, tambi√©n ofrecer√© consejos sobre c√≥mo seleccionar un rango apropiado.","service":"user-service"}
{"level":"info","message":"Los valores hist√≥ricos son geniales, si los tiene. El problema con los valores hist√≥ricos es que son de mayor valor cuando ha cambiado muy poco entre el proyecto y el equipo anterior y el proyecto y el equipo nuevos. Cualquier cambio significativo en el personal o en la tecnolog√≠a reducir√° la utilidad de las medidas hist√≥ricas de velocidad. Antes de usarlas, h√°gase preguntas como estas: ‚óÜ ¬øLa tecnolog√≠a es la misma? ‚óÜ ¬øEl dominio es el mismo? ‚óÜ ¬øEl equipo es el mismo? ‚óÜ ¬øEl producto es propietario es el mismo?‚óÜ ¬øLas herramientas son las mismas?‚óÜ ¬øEl entorno de trabajo es el mismo?‚óÜ ¬øLas estimaciones las hicieron las mismas personas? trabajado en. En ese caso, usar los valores hist√≥ricos del equipo es completamente apropiado. Aunque la velocidad en una situaci√≥n como esta es relativamente estable, deber√≠a considerar expresarla como un rango. Puede crear un rango simplemente sumando y restando algunos puntos al promedio o observando las mejores y peores iteraciones del equipo durante los √∫ltimos dos o tres meses. Sin embargo, si la respuesta a alguna de las preguntas anteriores es no, es posible que desee pensarlo dos veces. sobre el uso de velocidades hist√≥ricas. O puede querer usar velocidades hist√≥ricas pero poner un rango m√°s grande alrededor de ellas para reflejar la incertidumbre inherente en la estimaci√≥n. Para hacer esto, comience por calcular la velocidad promedio del equipo durante el transcurso del lanzamiento anterior. Si completaron 150 puntos de trabajo de la historia durante 10 iteraciones, su velocidad promedio (media) fue de 15 puntos. Antes de mostrar c√≥mo convertir esto en un rango, eche un vistazo a la Figura 16.1. Esta figura muestra el cono de incertidumbre que se introdujo en Cap√≠tulo 1, ‚ÄúEl prop√≥sito de la planificaci√≥n‚Äù. El cono de incertidumbre dice que la duraci√≥n real de un proyecto estar√° entre el 60% y el 160% de lo que pensamos que es. Entonces, para convertir nuestra velocidad promedio de punto √∫nico en un rango, la multiplico por 60% y 160%.1 As√≠ que si1. T√©cnicamente, deber√≠a dividirlo por 0,60 y 1,6. Sin embargo, como se supone que 0,60 y 1,60 son rec√≠procos ( ), obtienes aproximadamente los mismos valores al multiplicar.","service":"user-service"}
{"level":"info","message":"nuestra velocidad hist√≥rica promedio es 15, estimar√≠a que la velocidad est√° en el rango de 9 a 24.","service":"user-service"}
{"level":"info","message":"This range may feel large, but given the uncertainty at this point, it is probably appropriate. Constructing a range in this way helps the project team heed the advice offered in the quote at the start of this chapter that it is better to be roughly right than precisely wrong. A large range around the expected velocity will allow the team to be roughly right about it. Run an Iteration An ideal way to forecast velocity is to run an iteration (or two or three) and then estimate velocity from the observed velocity during the one to three iterations. Because the best way to predict velocity is to observe velocity, this should always be your default approach. Many traditional projects get under way with the","service":"user-service"}
{"level":"info","message":"Este rango puede parecer grande, pero dada la incertidumbre en este punto, probablemente sea apropiado. La construcci√≥n de un rango de esta manera ayuda al equipo del proyecto a prestar atenci√≥n al consejo ofrecido en la cita al comienzo de este cap√≠tulo de que es mejor estar completamente en lo correcto que exactamente equivocado. Un amplio rango alrededor de la velocidad esperada permitir√° que el equipo tenga m√°s o menos la raz√≥n. Ejecutar una iteraci√≥n Una forma ideal de pronosticar la velocidad es ejecutar una iteraci√≥n (o dos o tres) y luego estimar la velocidad a partir de la velocidad observada durante una o tres iteraciones. Debido a que la mejor manera de predecir la velocidad es observar la velocidad, este siempre debe ser su enfoque predeterminado. Muchos proyectos tradicionales se ponen en marcha con la","service":"user-service"}
{"level":"info","message":"os desarrolladores trabajan en los requisitos o la infraestructura \"obvios\", los analistas \"finalizan\" los requisitos y el director del proyecto elabora una lista completa de tareas que se convierte en el plan del proyecto. Todo esto lleva tiempo, a menudo, tanto como unas pocas iteraciones en un proyecto √°gil. Hace poco estuve con un director de desarrollo que dijo que los plazos no se fijan en proyectos tradicionales en su empresa hasta aproximadamente dos meses despu√©s de un proyecto de un a√±o. Les lleva tanto tiempo \"bloquear\" los requisitos y crear un plan. Me dijo que incluso despu√©s de tanto esfuerzo, los planes de sus proyectos siempre se desviaron al menos en un 50% y, a menudo, m√°s. Acordamos que, en cambio, usar√≠a este tiempo inicial para liberar al equipo en el proyecto, observar su velocidad durante dos o tres iteraciones y luego usar eso para planificar una fecha de lanzamiento. Por razones similares, como fue el caso con este director de desarrollo, la mayor√≠a de los gerentes de proyectos pueden evitar dar una estimaci√≥n para al menos una iteraci√≥n. Si ese es su caso, use el tiempo para ejecutar una iteraci√≥n y medir la velocidad. Luego cree un rango alrededor de ese punto de datos, usando el cono de incertidumbre. Entonces, si ejecut√≥ una iteraci√≥n y tuvo una velocidad de 15, convi√©rtala en un rango multiplicando por 0,60 y 1,6, dando un rango de 9 a 24. Si un equipo puede ejecutar tres o m√°s iteraciones antes de dar una estimaci√≥n de la velocidad, tienen un un par de opciones adicionales para determinar un rango. Primero y m√°s f√°cil, simplemente pueden usar el rango de valores observados. Suponga que el equipo complet√≥ tres iteraciones y tuvo velocidades de 12, 15 y 16. Podr√≠an expresar que la velocidad probablemente est√© dentro del rango de 12 a 16. Como alternativa, podr√≠an usar nuevamente el cono de incertidumbre. Aunque no existe una base emp√≠rica s√≥lida para el enfoque que voy a describir, funciona y tiene sentido. Este es el enfoque: calcule la velocidad promedio para las iteraciones que ha ejecutado. Luego, por cada iteraci√≥n completada, mu√©vase un paso hacia la derecha en el cono de incertidumbre. Entonces, para un equipo que ha ejecutado una iteraci√≥n, use el rango para el hito de \"definici√≥n inicial del producto\". Si el equipo ha ejecutado dos iteraciones, use el rango para el hito de \"definici√≥n de producto aprobado\" (80 % a 120 %), y as√≠ sucesivamente. Por conveniencia, estos n√∫meros se muestran en la Tabla 16.1. Tabla 16.1 Multiplicadores para estimar la velocidad en funci√≥n del n√∫mero de iteraciones completadas","service":"user-service"}
{"level":"info","message":"Suponga que un equipo ha realizado tres iteraciones con una velocidad promedio de veinte durante ese per√≠odo. Para tres iteraciones, el rango apropiado es de 85% a 115%. Esto significa que si la velocidad promedio del equipo es veinte despu√©s de tres iteraciones, su verdadera velocidad real al final del proyecto probablemente estar√° en el rango de diecisiete a veintitr√©s. Normalmente no extiendo este an√°lisis m√°s all√° de tres o cuatro iteraciones. No uso el cono de incertidumbre, por ejemplo, para pretender que despu√©s de seis iteraciones, el equipo conoce con precisi√≥n su velocidad y no vacilar√° hasta el final del proyecto. Algunas organizaciones se resistir√°n a comenzar un proyecto sin tener una idea m√°s espec√≠fica. idea de cuanto va a tardar. En tales casos, recalque que la necesidad de ejecutar primero algunas iteraciones no surge del deseo de evitar hacer una estimaci√≥n, sino de evitar dar una estimaci√≥n sin una base adecuada. Querr√° enfatizar que el prop√≥sito de estas iteraciones iniciales es evaluar los rincones oscuros del sistema, comprender mejor las tecnolog√≠as involucradas, refinar la comprensi√≥n de los requisitos y medir qu√© tan r√°pido puede progresar el equipo.","service":"user-service"}
{"level":"info","message":"Hacer un pron√≥stico Hay ocasiones en las que no tenemos hist√≥ricos y simplemente no es factible ejecutar algunas iteraciones para observar la velocidad. Suponga que la estimaci√≥n es para un proyecto que no comenzar√° hasta dentro de doce meses. O suponga que el proyecto puede comenzar pronto, pero solo una vez que un cliente firme un contrato para el trabajo. Hay dos diferencias clave en casos como este. En primer lugar, desea minimizar el gasto en el proyecto para que en realidad no comience a ejecutar iteraciones en un proyecto que puede no suceder o que est√° demasiado lejos en el futuro. En segundo lugar, cualquier estimaci√≥n de la velocidad de estos proyectos debe reflejar un alto grado de incertidumbre. En casos como estos, necesitamos pronosticar la velocidad. Pronosticar la velocidad rara vez es su primera opci√≥n, pero es una opci√≥n importante y que debe tener en su bolsa de trucos. La mejor manera de pronosticar la velocidad consiste en expandir las historias de usuario a sus tareas constituyentes, estimar esas tareas (como hacemos cuando planificamos la aniteraci√≥n), ver cu√°nto trabajo cabe en una iteraci√≥n y luego calcular la velocidad que se lograr√≠a si ese trabajo se terminara en un tiempo. iteraci√≥n. Esto implica los siguientes pasos: 1. Estime el n√∫mero de horas que cada persona estar√° disponible para trabajar en el proyecto cada d√≠a.2. Determine el n√∫mero total de horas que se dedicar√°n al proyecto durante la iteraci√≥n.","service":"user-service"}
{"level":"info","message":"3. Seleccionar historias de manera arbitraria y algo aleatoria, y expandirlas a sus tareas constituyentes. Repita hasta que haya identificado suficientes tareas para llenar el n√∫mero de horas en la iteraci√≥n.4. Convierta la velocidad determinada en el paso anterior en un rango. Veamos c√≥mo funciona esto a trav√©s de un ejemplo. Estime las horas disponibles Casi todos tienen algunas responsabilidades fuera del proyecto espec√≠fico que es su responsabilidad principal. Hay correos electr√≥nicos que responder, llamadas telef√≥nicas que devolver, reuniones de empresa a las que asistir, etc. La cantidad de tiempo que esto lleva difiere de una persona a otra y de una organizaci√≥n a otra. Lo que significa, sin embargo, es que los participantes del proyecto generalmente no pasan el 100% de su tiempo trabajando en el proyecto. A partir de la observaci√≥n y la discusi√≥n con colegas, mi opini√≥n es que la mayor√≠a de las personas que est√°n asignadas a tiempo completo a un proyecto pasan entre cuatro y seis horas por d√≠a. en ese proyecto. Esto encaja con los informes de que las personas dedican del 55% (Ganssle 2004) al 70% (Boehm 1981) de su tiempo a las actividades del proyecto. En el extremo superior, Kennedy (2003) informa que los ingenieros de Toyota, con su proceso esbelto y altamente eficiente, pueden dedicar el 80% de su tiempo a sus proyectos designados. Utilice estos n√∫meros como par√°metros para estimar la cantidad de tiempo que las personas dedican a su proyecto. equipo podr√° dedicar cada d√≠a al proyecto. Si forma parte de una gran burocracia, lo m√°s probable es que se encuentre en el extremo inferior de la escala. Si forma parte de una empresa nueva de tres personas en un garaje, probablemente se encuentre en el extremo superior. Para los prop√≥sitos de este ejemplo, supongamos que SwimStatsteam estima que cada uno podr√° dedicar seis horas por d√≠a al proyecto. Estime el tiempo disponible en una iteraci√≥n. Este paso es simple: multiplique el n√∫mero de horas disponibles cada d√≠a por el n√∫mero de personas en el equipo y el n√∫mero de d√≠as en cada iteraci√≥n. Suponga que el equipo de SwimStats incluye un analista, un programador, un ingeniero de base de datos y un evaluador. Cuatro personas cada una trabajando seis horas por d√≠a son veinticuatro horas cada d√≠a. En una iteraci√≥n de diez d√≠as, dedicaron alrededor de 240 horas al proyecto. Cuando presento este enfoque a algunos equipos, quieren tener en cuenta ajustes adicionales para vacaciones, licencia por enfermedad y otras interrupciones similares. No te molestes; no vale la pena el esfuerzo adicional, y es poco probable que sea m√°s preciso","service":"user-service"}
{"level":"info","message":"de todos modos. Estos eventos son parte de la raz√≥n por la que no planeamos que un equipo est√© 100 % disponible en primer lugar.","service":"user-service"}
{"level":"info","message":"Obtener m√°s tiempo en su proyecto Independientemente de cu√°ntas horas los miembros del equipo puedan dedicar a un proyecto cada d√≠a, probablemente le gustar√≠a aumentar ese n√∫mero. La mejor t√©cnica que encontr√© para hacerlo fue inventada por Francesco Cirillo de XPLabs. Cirillo entrena a los equipos para que trabajen en incrementos de treinta minutos altamente enfocados (Cirillo 2005). Cada incremento de treinta minutos consta de dos partes: veinticinco minutos de trabajo intenso seguidos de un descanso de cinco minutos. Estos incrementos de treinta minutos se denominan \"pomodori\", tomates italianos y se derivan del uso de temporizadores en forma de tomate que suenan cuando se completa el per√≠odo de veinticinco minutos. Cirillo present√≥ esta t√©cnica a Piergiuliano Bossi, quien ha documentado su √©xito con m√∫ltiples equipos (Bossi 2003; Bossi y Cirillo 2001). Estos equipos planear√≠an completar diez pomodori (cinco horas) por d√≠a. Si se encuentra con menos tiempo productivo por d√≠a de lo que le gustar√≠a, puede considerar este enfoque.","service":"user-service"}
{"level":"info","message":"Expanda las historias y vea qu√© encaja El siguiente paso es expandir las historias en tareas, estimar las tareas y continuar hasta que hayamos completado la cantidad estimada de horas disponibles (240, en este caso). No es necesario que las historias se expandan en orden de prioridad. Lo que realmente quieres es una variedad bastante aleatoria de historias. Por ejemplo, no ampl√≠e todas las historias de uno y dos puntos y ninguna de las historias de tres y cinco puntos. Del mismo modo, no ampl√≠e solo las historias que involucren principalmente la interfaz de usuario o la base de datos. Trate de encontrar un conjunto representativo de historias. Contin√∫e seleccionando historias y dividi√©ndolas en tareas siempre que las tareas seleccionadas no excedan la capacidad de las personas del equipo. Para el equipo de SwimStats, por ejemplo, debemos tener cuidado de no asumir que el programador y el analista tambi√©n son ingenieros de bases de datos totalmente competentes. Seleccione historias hasta que un conjunto de habilidades en el equipo no pueda manejar m√°s trabajo. Sume los puntos de la historia o los d√≠as ideales para el trabajo seleccionado, y esa es la posible velocidad del equipo. Supongamos que reunimos al equipo planificado (o un representante para ellos si el proyecto no comenzar√° hasta dentro de un a√±o), y ampliamos algunas historias como se muestra en la Tabla 16.2. Si sinti√©ramos que el equipo de SwimStats de cuatro personas podr√≠a comprometerse con esto, pero probablemente no m√°s, nos detendr√≠amos aqu√≠. Estas 221 horas de trabajo parecen un ajuste razonable dentro de sus 240 horas de tiempo disponible. Nuestra estimaci√≥n puntual de la velocidad es entonces veinticinco.","service":"user-service"}
{"level":"info","message":"Ponga un rango a su alrededor Use cualquier t√©cnica que le gustar√≠a convertir la estimaci√≥n puntual de la velocidad en un rango. Como antes, me gusta multiplicar por 60% y 160%. Para el equipo de SwimStats, esto significa que nuestra estimaci√≥n de veinticinco puntos de historia por iteraci√≥n se convierte en una estimaci√≥n de quince a cuarenta. Una variaci√≥n para algunos equipos n√∫mero de horas que todos est√°n disponibles. Estos equipos pueden tener miembros a los que se asignan porciones mucho m√°s peque√±as de su tiempo. En estos casos, puede ser √∫til crear una tabla como la que se muestra en la Tabla 16.3. Para el equipo de SwimStats, como se muestra en la Tabla 16.3, Yury y Sasha se dedican de tiempo completo al proyecto. SwimStats es el √∫nico proyecto de Sergey, pero tiene","service":"user-service"}
{"level":"info","message":"algunas otras responsabilidades gerenciales y corporativas que ocupan parte de su tiempo. Carina est√° dividida entre SwimStats y otro proyecto. Tiene muy pocas responsabilidades m√°s all√° de los dos proyectos, por lo que podr√≠a dedicarles cerca de seis horas al d√≠a. Sin embargo, necesita alternar entre los dos proyectos muchas veces al d√≠a, y esta multitarea afecta su productividad, por lo que se muestra que solo tiene dos horas productivas en SwimStats por d√≠a.","service":"user-service"}
{"level":"info","message":"Recuerde por qu√© estamos haciendo esto Tenga en cuenta que la raz√≥n por la que estamos pronosticando la velocidad de esta manera es que es imposible o poco pr√°ctico para el equipo ejecutar una iteraci√≥n, y a√∫n no tienen ninguna observaci√≥n hist√≥rica. Este puede ser el caso porque el equipo a√∫n no existe y usted tiene la tarea de planificar un proyecto que comienza dentro de unos meses. Si, por ejemplo, se encuentra en un entorno en el que realiza una planificaci√≥n estrat√©gica y un presupuesto con mucha anticipaci√≥n de iniciar un proyecto, pronosticar la velocidad de esta manera puede ser su mejor enfoque.","service":"user-service"}
{"level":"info","message":"¬øQu√© enfoque debo usar? Determinar qu√© enfoque usar suele ser m√°s simple de lo que puede parecer esta variedad de opciones. Las circunstancias a menudo lo gu√≠an y restringen sus opciones. En orden descendente de conveniencia, siga estas pautas para estimar la velocidad:‚óÜ Si puede ejecutar una o m√°s iteraciones antes de dar una estimaci√≥n de la velocidad, h√°galo siempre. No hay una estimaci√≥n como la real, y ver la velocidad real del equipo siempre es su mejor opci√≥n.‚óÜ Use la velocidad real de un proyecto relacionado de este equipo.","service":"user-service"}
{"level":"info","message":"Calcule la velocidad viendo lo que encaja. Independientemente del enfoque que utilice, cambie a valores reales observados para la velocidad lo antes posible. Suponga que elige estimar la velocidad viendo lo que cabe en una iteraci√≥n porque el proyecto no est√° programado para comenzar hasta dentro de seis meses y la organizaci√≥n solo necesita una estimaci√≥n aproximada de cu√°nto tiempo llevar√° el proyecto. Una vez que comience el proyecto y pueda medir la velocidad real, comience a usar esos valores reales cuando discuta el proyecto y su rango probable de fechas de finalizaci√≥n. Resumen Hay tres formas de estimar la velocidad. Primero, puede usar promedios hist√≥ricos si los tiene. Sin embargo, antes de usar promedios hist√≥ricos, debe considerar si ha habido cambios significativos en el equipo, la naturaleza del proyecto, la tecnolog√≠a, etc. En segundo lugar, puede diferir la estimaci√≥n de la velocidad hasta que haya ejecutado algunas iteraciones. Esta suele ser la mejor opci√≥n. En tercer lugar, puede pronosticar la velocidad dividiendo algunas historias en tareas y viendo cu√°nto cabe en una iteraci√≥n. Este proceso es muy similar a la planificaci√≥n de la iteraci√≥n. Independientemente del enfoque que utilice, las estimaciones de velocidad deben proporcionarse en un rango que refleje la incertidumbre inherente a la estimaci√≥n. El cono de incertidumbre ofrece consejos sobre el tama√±o del rango a utilizar. Preguntas de discusi√≥n 1. En la Tabla 16.2, las historias que se estim√≥ que ten√≠an la misma cantidad de puntos de historia no ten√≠an la misma cantidad de horas de tarea. ¬øPor qu√©? (Si necesita un repaso, consulte la secci√≥n \"Relaci√≥n de las estimaciones de tareas con los puntos de la historia\" en el Cap√≠tulo 14, \"Planificaci√≥n de la iteraci√≥n\". 2. Complete una tabla como la Tabla 16.3 para su proyecto actual. ¬øQu√© podr√≠a intentar para aumentar la cantidad de tiempo de cada persona? es capaz de dedicarse al proyecto?","service":"user-service"}
{"level":"info","message":"‚ÄúNo estar seguro es sentirse inc√≥modo, pero estar seguro es rid√≠culo.‚Äù‚ÄîProverbio chino Una de las quejas que escucho a menudo sobre la planificaci√≥n √°gil es que no funciona bien en algunos entornos. Por lo general, los entornos citados son aquellos en los que:‚óÜ El proyecto se planifica con mucha anticipaci√≥n.‚óÜ El proyecto debe cumplir con un plazo firme e incluir un conjunto de funcionalidades razonablemente firme.‚óÜ El proyecto se contrata de una organizaci√≥n a otra.‚óÜ Se entienden los requisitos. solo a un nivel muy superficial.‚óÜ La organizaci√≥n se siente inc√≥moda al permitir demasiada flexibilidad en los cronogramas, incluso en proyectos que no necesitan entregas y plazos firmes. Ser capaz de crear planes confiables en estos entornos es extremadamente importante. A menudo no es suficiente usar solo el enfoque cubierto en los cap√≠tulos anteriores. Lo que los proyectos en estos ambientes tienen en com√∫n es que cada uno viene con una cantidad adicional de incertidumbre o con mayores consecuencias para estar equivocado. Por ejemplo, antes era vicepresidente de desarrollo de software en una empresa de Fortune 40, y nuestros proyectos normalmente se programaban en el calendario con doce a dieciocho meses de antelaci√≥n, cuando empez√°bamos a establecer el presupuesto del a√±o siguiente. Ciertamente no cerramos","service":"user-service"}
{"level":"info","message":"requisitos, pero establecer√≠amos la naturaleza de los productos que construir√≠amos. Aunque los requisitos solo se entend√≠an vagamente, tuvimos que hacer compromisos de primer nivel que nos permitieran dotar de personal a la organizaci√≥n de manera adecuada. Hubo m√°s incertidumbre porque rara vez sab√≠a qui√©n de mi equipo trabajar√≠a en proyectos con tanta anticipaci√≥n. A menudo, ni siquiera hab√≠an sido contratados todav√≠a. Compare esta situaci√≥n con un proyecto en el que debe establecer una fecha l√≠mite firme y comprometerse con un conjunto b√°sico de funciones. No cumplir con la fecha l√≠mite o brindar mucha menos funcionalidad da√±ar√° la reputaci√≥n de su empresa en la industria y su reputaci√≥n dentro de la empresa. Incluso si tiene una comprensi√≥n razonable de los requisitos y sabe qui√©n compondr√° el equipo (a diferencia de mi caso anterior), el riesgo de equivocarse es significativo. cronograma. Debido a esto, es √∫til incluir un tamp√≥n en la determinaci√≥n del cronograma. Un buffer es un margen de error alrededor de una estimaci√≥n. En los casos en los que existe una incertidumbre significativa o el costo de equivocarse es significativo, es aconsejable incluir un amortiguador. El buffer ayuda a proteger el proyecto contra el impacto de la incertidumbre. De esta manera, amortiguar el cronograma de un proyecto se convierte en una estrategia adecuada de gesti√≥n de riesgos. En este cap√≠tulo, veremos dos tipos de b√∫feres: b√∫feres de caracter√≠sticas y b√∫feres de programaci√≥n. B√∫feres de caracter√≠sticasAnoche fui al supermercado con una lista de treinta y siete art√≠culos para comprar. Solo ten√≠a treinta minutos para ir de compras y conducir a casa porque quer√≠a ver un partido de baloncesto que estaba programado para comenzar a esa hora. Como siempre, comenc√© en un extremo de la tienda y me abr√≠ paso hasta el otro. Pero a medida que recorr√≠a cada pasillo, me enfocaba principalmente en los veinte o m√°s art√≠culos que sab√≠a que m√°s necesit√°bamos. Si llegaba a casa sin leche, pan o pavo en rodajas, sab√≠a que estar√≠a en problemas y en el entretiempo estar√≠a de vuelta en la tienda. Pero si me olvidaba de elementos de menor importancia, mi esposa estar√≠a contenta, mis hijas podr√≠an comer y yo podr√≠a ver el partido de baloncesto. Proteger un proyecto con caracter√≠sticas es exactamente lo mismo. Les decimos a nuestros clientes: \"Le proporcionaremos toda la funcionalidad de este mont√≥n e, idealmente, parte de la funcionalidad de ese mont√≥n\". Crear un b√∫fer de caracter√≠sticas es simple de hacer en un proyecto √°gil. Primero, el cliente selecciona todo el trabajo absolutamente obligatorio. Las estimaciones para ese trabajo se suman. Esto representa el m√≠nimo que se puede liberar. Luego, el cliente selecciona otro 25% a 40% m√°s de trabajo, seleccionando hacia el extremo superior del rango para proyectos con m√°s o menos incertidumbre.","service":"user-service"}
{"level":"info","message":"tolerancia al riesgo de horario. Las estimaciones para este trabajo se suman a la estimaci√≥n original, lo que da como resultado una estimaci√≥n total para el proyecto. Luego, el proyecto se planifica como normal para la entrega de todo el conjunto de funcionalidades; sin embargo, parte del trabajo es opcional y se incluir√° solo si el tiempo lo permite. El trabajo opcional se desarrolla en √∫ltimo lugar, solo despu√©s de que se completa el trabajo obligatorio. Para ver c√≥mo funciona esto, suponga que el propietario del producto identifica 100 puntos de la historia como obligatorios. Cada historia seleccionada est√° obligada a lanzar un producto que ser√° aceptado favorablemente por el mercado. Luego, el propietario del producto selecciona un 30% m√°s de trabajo adicional, identificando historias de usuarios que valen 30 puntos de historia adicionales. Estos se agregan como trabajo opcional al proyecto. Ahora se espera que el proyecto total sea de 130 puntos de historia. Usando las t√©cnicas descritas en el Cap√≠tulo 16, ‚ÄúEstimaci√≥n de la velocidad‚Äù, el equipo estima que la velocidad ser√° de diez puntos por iteraci√≥n de una semana. Luego, se planea que el proyecto tome trece iteraciones (130/10). Si todo va bien, el trabajo obligatorio se realizar√° despu√©s de las primeras diez iteraciones y las tres restantes se gastar√°n en las caracter√≠sticas opcionales. Este proceso de almacenamiento en b√∫fer de caracter√≠sticas es coherente con el utilizado en el proceso √°gil, DSDM (M√©todo de desarrollo de sistemas din√°micos). En los proyectos de DSDM, los requisitos se clasifican en cuatro categor√≠as: debe tener, deber√≠a tener, podr√≠a tener y no tendr√°. DSDM se refiere a esta clasificaci√≥n como las reglas MoSCoW. No m√°s del 70 % del esfuerzo planificado para un proyecto se puede destinar a los requisitos obligatorios. De esta forma, los proyectos de DSDM crean un b√∫fer de funciones equivalente al 30 % de la duraci√≥n del proyecto. B√∫fers de horarios Supongamos que necesito ir al aeropuerto y tomar un vuelo a Italia. (Ya que estoy suponiendo, tambi√©n podr√≠a suponer que necesito ir a alg√∫n lugar agradable). Un vuelo en avi√≥n tiene una fecha l√≠mite muy firme. El vuelo despegar√° conmigo o sin m√≠. Al crear un plan para ir de mi casa a la puerta adecuada en el aeropuerto, necesito salir lo suficientemente temprano como para estar razonablemente seguro de que tomar√© mi vuelo, pero no tan temprano como para estar en el aeropuerto tres d√≠as antes. sobre todos los pasos involucrados: conducir hasta el aeropuerto, estacionar mi auto, registrar y dejar mi equipaje, y pasar por el control de seguridad. Pienso en cu√°nto tiempo deber√≠a tomarme si todo va bien y decido que deber√≠a tomar setenta minutos. Ese es el tiempo que deber√≠a tomar. Puede tardar incluso unos minutos menos, pero podr√≠a tardar mucho m√°s. Si hay un accidente en la carretera, y si el estacionamiento est√° lleno, y si hay una larga fila para registrarse, y si hay una larga fila para pasar por seguridad, podr√≠a llevar bastante m√°s tiempo. No necesito planear que todas estas cosas salgan mal en el mismo","service":"user-service"}
{"level":"info","message":"viaje; pero como este es un viaje importante y no quiero perder mi vuelo, debo agregar un poco m√°s de tiempo a los setenta minutos que deber√≠a tomar si todo sale bien. Digamos que decido salir para el aeropuerto 100 minutos antes de mi vuelo. Si las cosas van bien, me quedar√°n treinta minutos para pasar en el aeropuerto, que no est√° mal. Si las cosas van realmente bien (todos los sem√°foros est√°n en verde, aparco en la primera fila, no hay nadie delante de m√≠ para hacer el check-in o en el control de seguridad), entonces tal vez tenga cuarenta minutos en el aeropuerto. Pero si me quedo atascado en el tr√°fico o en una gran fila para hacer el check-in, lo m√°s probable es que este tiempo extra sea suficiente para subirme al avi√≥n antes de que se vaya. Los treinta minutos extra son mi reserva de horario; protegen la finalizaci√≥n a tiempo del proyecto general (llegar al aeropuerto). Para un viaje al aeropuerto, no es apropiado adivinar mi tasa de progreso (mi velocidad) y luego proporcionarle a la aerol√≠nea (el cliente) actualizaciones peri√≥dicas sobre mi hora prevista de llegada. Mi hora prevista de llegada y mi ritmo de progreso no le importan a la aerol√≠nea; la hora de salida es fija, al igual que los plazos en muchos proyectos de desarrollo de software. En estos casos, un b√∫fer de programaci√≥n protege contra la incertidumbre que puede afectar la finalizaci√≥n a tiempo del proyecto. Tenga en cuenta que no me preocupa si alguna actividad (conducir, estacionar, registrarse o pasar por seguridad) toma demasiado tiempo. S√≥lo me preocupa si la cadena general de actividades lleva demasiado tiempo. Para tomar mi vuelo, agrego un margen de treinta minutos a mi horario general para llegar al aeropuerto. Lo que nos gustar√≠a hacer es agregar una reserva de programaci√≥n similar a los proyectos con mayor incertidumbre o con mayores consecuencias por no cumplir con una fecha l√≠mite. Reflejo de la incertidumbre en las estimaciones Para proteger la programaci√≥n de un proyecto contra la incertidumbre, necesitamos una forma de cuantificar la incertidumbre. Cuando estimamos y asignamos un valor √∫nico a una historia de usuario, pretendemos que un solo n√∫mero refleja nuestras expectativas sobre la cantidad de tiempo que llevar√° desarrollar la funci√≥n. Sin embargo, de manera m√°s realista, sabemos que el trabajo puede completarse dentro de un rango de duraciones. Un equipo puede estimar una historia de usuario en particular como tres d√≠as ideales, sabiendo que tres d√≠as ideales generalmente representan cuatro o cinco d√≠as de trabajo transcurridos. Sin embargo, si la historia tarda seis d√≠as en completarse, nadie se sorprender√°; las cosas a veces toman m√°s tiempo de lo planeado. Si graficamos los posibles tiempos de finalizaci√≥n de una tarea, se parecer√° aproximadamente a la figura 17.1. La curva adopta esta forma general porque normalmente no se puede hacer mucho para acelerar la finalizaci√≥n de una tarea, pero hay un n√∫mero indefinido de cosas. que puede salir mal y retrasar la finalizaci√≥n de una tarea. Para","service":"user-service"}
{"level":"info","message":"ejemplo, justo cuando estoy a punto de terminar de codificar una caracter√≠stica nueva en particular, mi computadora falla y pierdo los cambios no guardados. Luego, un rayo golpea el edificio y fr√≠e nuestro repositorio fuente. Solicitamos que nos entreguen una cinta de respaldo ma√±ana por la ma√±ana, pero el servicio de entrega pierde la cinta. Pero no me importa, ya que me atropella el proverbial autob√∫s de camino al trabajo.","service":"user-service"}
{"level":"info","message":"El tiempo de finalizaci√≥n m√°s probable en la Figura 17.1 es donde la l√≠nea alcanza su punto m√°ximo. En general, sin embargo, terminar en ese momento tiene menos del 50% de probabilidad. Sabemos esto porque menos del 50% del √°rea bajo la curva est√° a la izquierda del pico. Si un desarrollador proporcionara una estimaci√≥n correspondiente al pico de la figura 17.1, lo m√°s probable es que tardar√≠a m√°s que esa estimaci√≥n en terminar el trabajo. Una forma m√°s √∫til de visualizar esto es la Figura 17.2, que muestra la probabilidad acumulada de terminar en o antes de los tiempos en el eje horizontal. Mientras que la Figura 17.1 muestra la probabilidad de terminar en un tiempo espec√≠fico, la Figura 17.2 muestra la probabilidad de terminar en o antes Antes de ese tiempo. Al estimar y planificar, esto es m√°s importante para nosotros que la probabilidad de terminar cualquier d√≠a (como se muestra en la Figura 17.1).","service":"user-service"}
{"level":"info","message":"Otra forma de pensar en la figura 17.2 y la probabilidad acumulada de los tiempos de finalizaci√≥n es suponer que 100 programadores diferentes pero igualmente h√°biles y experimentados desarrollan de forma independiente una nueva funci√≥n. ¬øEn qu√© fecha terminar√≠a cada uno? Los resultados pueden ser similares a los que se muestran en la Tabla 17.1. Esta tabla muestra el n√∫mero que termina cada d√≠a y, lo que es m√°s importante, el n√∫mero total que termina en una fecha determinada.","service":"user-service"}
{"level":"info","message":"Supongamos que queremos tener un 90 % de confianza en el cronograma al que nos comprometemos. Un enfoque inicial para hacer esto podr√≠a ser estimar el 90 % de la duraci√≥n probable de cada historia de usuario en el proyecto y luego usar esas estimaciones. Sin embargo, si hacemos esto, es casi seguro que el cronograma del proyecto ser√° demasiado largo. para ver como un","service":"user-service"}
{"level":"info","message":"el b√∫fer de programaci√≥n funciona, consideremos nuevamente mi viaje al aeropuerto, cuyo posible cronograma se muestra en la figura 17.3.","service":"user-service"}
{"level":"info","message":"El primer n√∫mero de cada tarea (en el cuadro transparente) es la estimaci√≥n del 50 % del tiempo que deber√≠a llevar la tarea. Espero que las tareas tomen m√°s tiempo la mitad del tiempo y menos la mitad del tiempo. El segundo n√∫mero (en el cuadro sombreado) es la cantidad de tiempo adicional para alcanzar mi estimaci√≥n del 90%. El tiempo adicional entre el 50% y el 90% estimado se llama seguridad local. A menudo a√±adimos la seguridad local a una estimaci√≥n que queremos estar m√°s seguros de cumplir. En este caso, creo que puedo encontrar mis llaves en uno a seis minutos. Puedo conducir al aeropuerto en cuarenta y cinco a setenta y cinco minutos, y as√≠ sucesivamente. Sumar los n√∫meros del 50% me da una duraci√≥n esperada de una hora y diez minutos. Sin embargo, si salgo de mi casa tan cerca de la hora de salida, el m√°s m√≠nimo retraso har√° que pierda mi vuelo. Por otro lado, sumando las estimaciones del 90% da un total de 2:50. No quiero irme casi tres horas antes de mi vuelo, porque hay muy pocas posibilidades de que todo salga mal. Lo que realmente quiero es un plan de proyecto que se parezca a la Figura 17.4. El plan de la Figura 17.4 se construye usando las estimaciones del 50% y luego agregando un b√∫fer del proyecto. Este tipo de plan tiene mucho m√°s sentido que uno construido completamente a partir de la suma del 50% o el 90% de las estimaciones. El plan de la figura 17.4 protege el √∫nico plazo que importa: el plazo total del proyecto. Debido a que no es importante si alguna tarea en mi camino al aeropuerto termina tarde, no necesito amortiguar la finalizaci√≥n a tiempo de las tareas. Esto me permite construir un","service":"user-service"}
{"level":"info","message":"programa que elimina la seguridad local de las tareas individuales y pone una fracci√≥n de ese tiempo en un b√∫fer que protege el programa general. Observe que el cronograma amortiguado de la figura 17.4 es solo 1:58, casi una hora m√°s corto que el cronograma creado al sumar las estimaciones del 90%.","service":"user-service"}
{"level":"info","message":"A√∫n mejor, al trasladar la seguridad local a un amortiguador general del proyecto, podemos evitar el impacto de la Ley de Parkinson y el s√≠ndrome del estudiante. Como recordar√° del Cap√≠tulo 2, \"Por qu√© falla la planificaci√≥n\", la Ley de Parkinson dice que el trabajo se expande para llenar el tiempo disponible. El s√≠ndrome del estudiante (Goldratt 1997) se refiere a comenzar algo en el √∫ltimo momento posible que no impide completarlo con √©xito; por ejemplo, comenzar un trabajo acad√©mico universitario tres d√≠as antes de la fecha l√≠mite. Debido a que evita los problemas causados ‚Äã‚Äãpor la Ley de Parkinson y el s√≠ndrome del estudiante, es m√°s probable que se cumpla un cronograma m√°s corto que incluye un b√∫fer de cronograma que uno m√°s largo. Para crear un b√∫fer de cronograma para un proyecto de software, lo primero que debemos hacer es revisar nuestro proceso de estimaci√≥n para que genere dos estimaciones para cada historia de usuario o caracter√≠stica. Al igual que con el viaje al aeropuerto, necesitamos saber el 50% y el 90% estimado para cada uno. Esto es bastante f√°cil: cuando el equipo se re√∫na para estimar, comience por estimar el caso del 50% para la primera historia. Luego calcule el caso del 90% para esa historia antes de pasar a la siguiente historia o funci√≥n. Dimensionamiento de la zona de influencia del proyecto La zona de influencia del proyecto en la figura 17.4 se dimension√≥ para que durara cincuenta y tres minutos. ¬øC√≥mo se me ocurri√≥ esa duraci√≥n? Se bas√≥ en las estimaciones del 50% y 90% para tha","service":"user-service"}
{"level":"info","message":"proyecto, como se muestra en la Figura 17.4. La belleza de asociar dos estimaciones con cada historia de usuario es que los n√∫meros se√±alan muy claramente el grado de riesgo de cronograma asociado con cada elemento. Por ejemplo, si se estima que un piso es de tres a cinco y otro piso se estima de tres a diez, sabemos que el segundo piso genera m√°s riesgo de cronograma para el proyecto. La reserva del proyecto se dimensionar√° para dar cabida a la cantidad de riesgo de cronograma generado por el trabajo planificado en el proyecto. Piense en un ejemplo extremo: si est√° planificando el cronograma de un proyecto, necesitar√° una reserva de proyecto m√°s peque√±a para las tareas estimadas entre 3 y 7 que para las tareas estimadas entre 3 y 100. Claramente, si el proyecto tiene algunas tareas de 3 puntos que podr√≠a convertirse en tareas de 100 puntos, el b√∫fer del proyecto debe ser mayor que si el peor de los casos para esas tareas fuera de 10 puntos. Por lo tanto, la diferencia entre las estimaciones del 50 % y el 90 % influye en el tama√±o de la reserva del proyecto.1 Debido a que nuestras estimaciones est√°n en los puntos del 50 % y el 90 % para cada elemento, esto significa que la diferencia entre estas dos estimaciones es de aproximadamente dos desviaciones est√°ndar. Entonces, la desviaci√≥n est√°ndar para cada elemento es , donde representa el peor de los casos (estimaci√≥n del 90 %) para la historia i y representa el caso promedio (estimaci√≥n del 50 %) para la misma historia. Nos gustar√≠a que el b√∫fer del proyecto protegiera el proyecto general al mismo nivel del 90 % en el que cada tarea estaba protegida por su propia estimaci√≥n del 90 %. Esto significa que nuestro buffer de proyecto debe tener dos desviaciones est√°ndar y se puede determinar a partir de esta f√≥rmula:","service":"user-service"}
{"level":"info","message":"donde es la desviaci√≥n est√°ndar. Esto se puede simplificar a lo siguiente:","service":"user-service"}
{"level":"info","message":"Veamos c√≥mo usamos esta f√≥rmula para determinar el tama√±o del b√∫fer de programaci√≥n. Suponga que nuestro proyecto incluye las seis historias de usuarios que se muestran en la tabla 17.2 y que cada historia tiene las estimaciones del 50% y el 90% que se muestran. Estas estimaciones pueden ser puntos hist√≥ricos o d√≠as ideales. La √∫ltima columna de la tabla 17.2 se calcula tomando la estimaci√≥n del peor de los casos (90 %) de una historia, restando el caso promedio (50 %) de esa historia y elevando el resultado al cuadrado. La primera historia, por ejemplo, es .El b√∫fer de programaci√≥n es la ra√≠z cuadrada de la suma de estos cuadrados.2 En este caso, el b√∫fer de programaci√≥n es igual a la ra√≠z cuadrada de 90, que es 9,4, por lo que lo redondearemos a 1. Reinertsen (1997), Newbold (1998) y Leach (2000) han sugerido previamente dimensionar una zona de amortiguamiento de esta manera.","service":"user-service"}
{"level":"info","message":"9. La duraci√≥n total del proyecto es la suma del 50 % de las estimaciones m√°s la reserva del proyecto, o en este caso.","service":"user-service"}
{"level":"info","message":"Intuitivamente, el buffer calculado en la Tabla 17.2 tiene sentido. La historia de usuario que m√°s contribuye al tama√±o del b√∫fer de programaci√≥n (la primera historia) es la que tiene m√°s incertidumbre (una diferencia de ocho puntos entre sus estimaciones del 50 % y el 90 %). De manera similar, una historia sin incertidumbre (la √∫ltima historia) no contribuye en absoluto al b√∫fer. Agregar un b√∫fer de programaci√≥n puede o no agregar una o m√°s iteraciones a la duraci√≥n de un proyecto. La mayor√≠a de las veces lo har√°. Suponga que el equipo de este ejemplo pronostic√≥ su velocidad en nueve puntos por iteraci√≥n. Si hubieran estimado el proyecto en diecisiete puntos (la suma de las estimaciones del 50%), habr√≠an esperado terminar en dos iteraciones. Sin embargo, con el buffer del proyecto incluido,2. Esta es la raz√≥n por la que esta t√©cnica de dimensionamiento del b√∫fer se denomina com√∫nmente enfoque de \"ra√≠z cuadrada de la suma de los cuadrados\".","service":"user-service"}
{"level":"info","message":"**el proyecto completo tiene veintis√©is puntos y tomar√° tres iteraciones para completarse si su velocidad es nueve. Un c√°lculo de b√∫fer m√°s simple El enfoque anterior para dimensionar el b√∫fer del proyecto es la mejor manera de dimensionar el b√∫fer del proyecto. Pero si por alguna raz√≥n no puede obtener estimaciones del 50 % y del 90 %, existe una forma m√°s sencilla de dimensionar el b√∫fer del proyecto. Estime cada piso al nivel del 50 % y luego establezca el b√∫fer en la mitad del tama√±o de la suma de las estimaciones del 50 %. Aseg√∫rese de que todo el equipo sea consciente de que sus estimaciones deben ser aquellas en las que tengan un 50% de confianza. Queremos estimaciones que tengan la misma probabilidad de ser altas que bajas. Aunque este c√°lculo es mucho m√°s simple, tiene la falla grave de no verse influenciado por la incertidumbre real en torno a las historias de usuario espec√≠ficas en el proyecto. Supongamos que hay dos pisos, cada uno estimado en cinco puntos de piso. Cada una de estas historias contribuir√° en la misma cantidad a la reserva del proyecto (la mitad de su tama√±o, o 2,5 puntos cada una). Esto ser√° cierto incluso si una de las historias hubiera tenido una estimaci√≥n del 90 % de 100 y la otra una estimaci√≥n del 90 % de 10. Por estas razones, y porque es extremadamente f√°cil pedir dos estimaciones en el momento en que se est√° estimando. , prefiero el enfoque basado en la ra√≠z cuadrada de la suma de los cuadrados. Pautas de amortiguamiento Independientemente de si prefiere tomar el enfoque de la ra√≠z cuadrada de la suma de los cuadrados o el enfoque del 50%, debe considerar estas pautas adicionales basadas en el consejo de Leach ( 2000).‚óÜ El enfoque de la ra√≠z cuadrada de la suma de los cuadrados es m√°s confiable si se estiman al menos diez historias de usuario o caracter√≠sticas. Pero si su proyecto tiene menos de diez elementos, probablemente no deber√≠a planificar con una reserva de todos modos.‚óÜ La reserva del proyecto debe representar al menos el 20% de la duraci√≥n total del proyecto. Es posible que una zona de amortiguamiento m√°s peque√±a no brinde la protecci√≥n adecuada para el proyecto en general.**","service":"user-service"}
{"level":"error","service":"user-service"}
{"level":"info","message":"Sobre TLP La aplicaci√≥n de la que les hablo se llama TLP (Linux Advanced Power Management), esta es una aplicaci√≥n creada para Linux enfocada en la gesti√≥n avanzada del uso de la energ√≠a del sistema en nuestro port√°til.  TLP cuenta con una configuraci√≥n que viene precargada por defecto la cual se encarga de realizar la optimizaci√≥n de la energ√≠a distribuida a trav√©s de nuestro hardware y a la vez llevar una gesti√≥n de esta durante el uso de nuestro port√°til.  TLP les brinda los beneficios de una administraci√≥n de energ√≠a avanzada para Linux sin la necesidad de comprender todos los detalles t√©cnicos, TLP es altamente personalizable para cumplir con los requisitos m√°s espec√≠ficos.  Entre las principales caracter√≠sticas que tiene TLP para poder optimizar el uso de la energ√≠a en nuestro port√°til encontramos:  TLP se encarga de auto suspender los dispositivos USB que no est√©n en uso. TLP es capaz de definir aquellos dispositivos inal√°mbricos que son necesarios y de un frecuente uso los cuales habilita y deshabilitar al inicio. Tambi√©n realiza un an√°lisis del funcionamiento del disco duro y optimiza su funcionamiento. Desactivar dispositivos inal√°mbricos Configurar el CPU para un mejor rendimiento o ahorro de energ√≠a.","service":"user-service"}
{"level":"info","message":"Cuando use cualquiera de los disponibles  proveedores de identidad social , debe registrar su solicitud en el correspondiente proveedor de identidad para obtener un ID del cliente y Secreto del cliente.  Auth0 le permite probar un proveedor de identidad social sin especificar su propia ID de cliente y secreto de cliente utilizando las claves de desarrollador de Auth0. Esto le permite habilitar y probar r√°pidamente un proveedor de identidad social espec√≠fico, pero no debe usarse en la producci√≥n.  Las claves del desarrollador de Auth0 no est√°n disponibles en  Implementaciones de nube privada .  Para entornos de producci√≥n, aseg√∫rese de  siga los pasos para su proveedor elegido para obtener la ID del cliente y el secreto del cliente del proveedor para evitar el  limitaciones de usar claves de desarrollador.  Teclas de desarrollador personalizadas Una o m√°s conexiones est√°n utilizando claves de desarrollo Auth0 que solo est√°n destinadas para su uso en desarrollo y pruebas. Las conexiones deben configurarse con sus propias teclas de desarrollador para permitir que la p√°gina de consentimiento muestre su logotipo en lugar de Auth0 y configure el inicio de sesi√≥n √∫nico ( SSO ) para estas conexiones. Las claves de desarrollo Auth0 no se recomiendan para entornos de producci√≥n.  ID de cliente y secreto de cliente La terminolog√≠a exacta de una ID de cliente / Secreto de cliente puede diferir entre varios Proveedores de identidad. Por ejemplo, Twitter se refiere a estos como una clave del consumidor / secreto del consumidor y LinkedIn se refiere a una clave API / clave secreta.","service":"user-service"}
{"level":"info","message":"Limitaciones de las claves del desarrollador. Las claves del desarrollador de Auth0 se utilizar√°n con fines de prueba, por lo que hay algunas advertencias que debe tener en cuenta al usarlas. Esto puede hacer que su aplicaci√≥n se comporte de manera diferente, o que alguna funcionalidad no funcione en absoluto, dependiendo de si usa su propia ID de cliente y secreto de cliente, o si usa las claves del desarrollador Auth0.  Cuando use las teclas de desarrollador Auth0, el flujo de autenticaci√≥n para los diversos proveedores de identidad puede mostrar el nombre, el logotipo y la informaci√≥n de Auth0 a sus usuarios. Cuando registra su propia solicitud, tiene la oportunidad de usar su propio logotipo y otra informaci√≥n de la aplicaci√≥n.","service":"user-service"}
{"level":"info","message":"Limitaciones de las claves del desarrollador cuando se utiliza Universal Login Si est√°s usando el  Experiencia cl√°sica de inicio de sesi√≥n universal - y en algunas circunstancias, el  Nueva experiencia de inicio de sesi√≥n universal - tambi√©n se aplican las siguientes limitaciones:  No puede usar las claves del desarrollador con  dominios personalizados .  Inicio de sesi√≥n √∫nico  no funcionar√° correctamente cuando use las teclas de desarrollador Auth0. La raz√≥n de esto es que las aplicaciones de desarrollador de Auth0 con todos los proveedores de identidad relevantes est√°n configuradas para volver a llamar a la URL https://login.auth0.com/login/callback en lugar de la URL de devoluci√≥n de llamada para su propio inquilino, por ejemplo https://{yourDomain}/login/callback. Esto da como resultado que la cookie SSO no se configure en su propio dominio de inquilino, por lo que la pr√≥xima vez que un usuario se autentique, no se detectar√° ninguna cookie SSO, incluso si configur√≥ su aplicaci√≥n para Use Auth0 en lugar del proveedor de identidad para hacer inicio de sesi√≥n √∫nico ( inquilinos heredados solamente ).  Redirecci√≥n de usuarios de Reglas  no funcionar√° correctamente. Esto se debe a que las reglas de redireccionamiento se reanudan en el punto final https://{yourDomain}/continue. Cuando se usan las teclas de desarrollador de Auth0, la sesi√≥n se establece en un punto final especial que es gen√©rico y agn√≥stico del inquilino, y llama /continue no encontrar√° su sesi√≥n anterior, lo que resulta en un error.  Cerrar sesi√≥n federada  no funciona. Cuando use las teclas del desarrollador Auth0, llame /v2/logout?federated firmar√° al usuario de Auth0, pero no del proveedor de identidad social.  prompt=noneno funcionar√° en el  /autorizar punto final.  Auth0.js ' chequeSession ( ) m√©todo utiliza prompt=none internamente, para que eso tampoco funcione.  Si Auth0 est√° actuando como un proveedor de identidad SAML y utiliza una conexi√≥n social con las claves del desarrollador Auth0, la respuesta SAML generada tendr√° algunos errores, como falta InResponseTo atributo o vac√≠o AudienceRestriction elemento.  Autenticaci√≥n multifactor  no funcionar√° correctamente. Cuando la autenticaci√≥n MFA es exitosa, se generar√° una publicaci√≥n en https://{yourDomain}/mf. Cuando se usan las teclas de desarrollador de Auth0, la sesi√≥n se establece en un punto final especial que es gen√©rico y agn√≥stico del inquilino, y llama /mf no encontrar√° su sesi√≥n anterior, lo que resulta en un error","service":"user-service"}
{"level":"info","message":"Estoy usando Auth0 para la autenticaci√≥n en mi aplicaci√≥n. Cre√© un inquilino en Auth0 y us√© la identificaci√≥n del cliente y la clave de acceso. Todo est√° funcionando bien. Pero cuando implement√© mi aplicaci√≥n en el servidor de producci√≥n, la p√°gina de inicio de sesi√≥n de auth0 me muestra la advertencia \"Una o m√°s de sus conexiones est√°n usando claves de desarrollo de Auth0 y no deben usarse en producci√≥n\". Supongo que estoy usando el entorno de desarrollo de inquilinos, ¬øc√≥mo puedo cambiar al entorno de producci√≥n?  Hola @abhi3836 \"Una o m√°s de sus conexiones est√°n usando claves de desarrollo Auth0 y no deben usarse en producci√≥n\". El error significa que una de sus conexiones sociales est√° utilizando las claves Auth0 y no las suyas para conectarse al proveedor social. Las claves Auth0 son √∫tiles para desarrollar...","service":"user-service"}
{"level":"info","message":"Hola @abhi3836  El mensaje \"Una o m√°s de sus conexiones est√°n usando claves de desarrollo Auth0 y no deben usarse en producci√≥n\". El error significa que una de sus conexiones sociales est√° utilizando las claves Auth0 y no las suyas para conectarse al proveedor social. Las claves Auth0 son √∫tiles para desarrollar y probar su aplicaci√≥n, pero no deben usarse en su entorno de producci√≥n.  Deber√° ir a sus conexiones sociales 646 en el tablero, seleccionar cada conexi√≥n social y luego verificar si dej√≥ en blanco la clave API y la clave secreta. Si es as√≠, est√° utilizando las claves de desarrollo de Auth0 y realmente deber√≠a configurar sus propias claves. Puedes leer m√°s sobre esto aqu√≠:","service":"user-service"}
{"level":"info","message":"Proveedores de identidad Introducci√≥n a las diversas fuentes de usuarios para aplicaciones, incluidas proveedores de identidad, bases de datos y sin contrase√±a m√©todos de autenticaci√≥n.  Una conexi√≥n es la relaci√≥n entre Auth0 y una fuente de usuarios, que puede incluir proveedores de identidad externos ( como Google o LinkedIn ), bases de datos o m√©todos de autenticaci√≥n sin contrase√±a. Auth0 se encuentra entre su aplicaci√≥n y sus fuentes de usuarios, lo que agrega un nivel de abstracci√≥n, por lo que su aplicaci√≥n est√° aislada de cualquier cambio e idiosincrasias de la implementaci√≥n de cada fuente.  De forma predeterminada, Auth0 sincroniza autom√°ticamente los datos del perfil de usuario con cada inicio de sesi√≥n de usuario, asegurando as√≠ que los cambios realizados en la fuente de conexi√≥n se actualicen autom√°ticamente en Auth0. Puede deshabilitar la sincronizaci√≥n para permitir actualizar los atributos de perfil desde su aplicaci√≥n.  Puede configurar cualquier cantidad de conexiones para sus aplicaciones.","service":"user-service"}
{"level":"info","message":"La conexi√≥n social de Google permite a los usuarios iniciar sesi√≥n en su aplicaci√≥n utilizando su perfil de Google.  De forma predeterminada, Auth0 sincroniza autom√°ticamente los datos del perfil de usuario con cada inicio de sesi√≥n de usuario, lo que garantiza que los cambios realizados en la fuente de conexi√≥n se actualicen autom√°ticamente en Auth0. Opcionalmente, puede deshabilitar la sincronizaci√≥n de datos de perfil de usuario para permitir la actualizaci√≥n de atributos de perfil desde su aplicaci√≥n.","service":"user-service"}
{"level":"info","message":"Create Google credentials Configure your OAuth consent screen and create credentials in the Google Developer Console using Google's Setting up OAuth 2.0 documentation. During this process, Google will generate a Client ID and Client Secret for your application; make note of these.  While setting up your OAuth consent screen, use the following settings:","service":"user-service"}
{"level":"info","message":"Crear credenciales de Google Configure su pantalla de consentimiento de OAuth y cree credenciales en Google Developer Console utilizando la documentaci√≥n de configuraci√≥n de OAuth 2.0 de Google. Durante este proceso, Google generar√° una identificaci√≥n de cliente y un secreto de cliente para su aplicaci√≥n; tome nota de estos.  Mientras configura su pantalla de consentimiento de OAuth, use la siguiente configuraci√≥n:","service":"user-service"}
{"level":"info","message":"Si su aplicaci√≥n solicita √°mbitos sensibles de OAuth o utiliza una imagen personalizada, Google lo limitar√° a 100 inicios de sesi√≥n hasta que se verifique la pantalla de consentimiento de OAuth. La verificaci√≥n puede tardar varios d√≠as.  Nota: una imagen personalizada incluye cargar un archivo de logotipo siguiendo las instrucciones de configuraci√≥n de Google. Este archivo no podr√° eliminarse m√°s tarde y activar√° la verificaci√≥n.  Para obtener m√°s informaci√≥n sobre los √°mbitos confidenciales, consulte la documentaci√≥n de los √°mbitos de OAuth 2.0 de Google para las API de Google. Para aprobar la verificaci√≥n, deber√° demostrar la propiedad de todos los dominios autorizados que especifique en la pantalla de consentimiento de OAuth de Google. Si usa dominios personalizados, use su dominio personalizado en lugar de auth0.com.","service":"user-service"}
{"level":"info","message":"Encuentre su nombre de dominio Auth0 Si su nombre de dominio Auth0 no se muestra arriba y no est√° utilizando nuestra funci√≥n de dominios personalizados, su nombre de dominio es su nombre de inquilino, su subdominio regional (a menos que su inquilino est√© en la regi√≥n de EE. UU. y se haya creado antes de junio de 2020), plus.auth0 .com. Por ejemplo, si el nombre de su arrendatario fuera exampleco-enterprises, su nombre de dominio Auth0 ser√≠a exampleco-enterprises.us.auth0.com y su URI de redirecci√≥n ser√≠a https://exampleco-enterprises.us.auth0.com/login/callback . (Si su inquilino est√° en los EE. UU. y se cre√≥ antes de junio de 2020, su nombre de dominio ser√≠a https://exampleco-enterprises.auth0.com).  Si est√° utilizando dominios personalizados, su URI de redireccionamiento tendr√° el siguiente formato: https://<SU DOMINIO PERSONALIZADO>/login/callback.","service":"user-service"}
{"level":"info","message":"Selecci√≥n de idioma El idioma para representar las p√°ginas se seleccionar√° en funci√≥n de:  Los idiomas admitidos por Auth0, que se enumeran anteriormente.  La lista de idiomas configurados en Configuraci√≥n de inquilinos, donde puede seleccionar los idiomas que admite su inquilino y seleccionar uno predeterminado. De forma predeterminada, la lista solo tiene ingl√©s seleccionado, pero puede seleccionar los que necesita.  El valor de la ui_locales par√°metro enviado a la  Punto final de la solicitud de autorizaci√≥n , que se puede utilizar para restringir la lista de idiomas para una aplicaci√≥n o sesi√≥n. Puede proporcionar una lista de locales delimitados por el espacio. La primera configuraci√≥n regional de la lista debe coincidir con la configuraci√≥n regional habilitada en su inquilino para que se refleje en la interfaz de usuario.  los Accept-Language Encabezado HTTP enviado por el navegador. Las p√°ginas se representar√°n en este idioma si est√° permitido por la configuraci√≥n anterior. De lo contrario, las p√°ginas se representar√°n en el idioma predeterminado.  Establecer idiomas compatibles con inquilinos Puede establecer los idiomas admitidos y predeterminados en el Panel  Configuraciones de inquilinos secci√≥n.  Tambi√©n puede especificar los idiomas habilitados para el inquilino a trav√©s del API de gesti√≥n usando el  Actualizaci√≥n del punto final de la configuraci√≥n del inquilino . El primer idioma en la lista ser√° el predeterminado.","service":"user-service"}
{"level":"info","message":"He habilitado el dominio personalizado y tambi√©n lo he agregado a DNS, pero ¬øc√≥mo configurarlo con auth-js sdk? Soy nuevo en esto. Por favor, ay√∫dame.  Gracias @colin.coutts. Est√° funcionando bien ahora ya. en primer lugar, pens√© que cuando configuro un dominio personalizado (ejemplo: id.abc.com), el dominio de la aplicaci√≥n cambiar√° autom√°ticamente. pero no (todav√≠a xxx‚Ä¶au.auth0.com) Trat√© de compartir el nuevo dominio personalizado - (id.abc.com) con el cliente (web) y funcion√≥ :),‚Ä¶","service":"user-service"}
{"level":"info","message":"Availability varies by Auth0 plan and login method Both the login implementation you use and your Auth0 plan or custom agreement affect whether this feature is available. To learn more, read New Universal Login vs. Classic Universal Login and Pricing.  If you want Auth0 to manage the certificates for your custom domain, you only need to add a CNAME record on the domain. Auth0 validates the record and then generates the certificate on Auth0 servers. These certificates are renewed automatically every three months. You can configure this easily, and you won't have to maintain the certificates yourself.  To set up your custom domain using Auth0-managed certificates, you must provide your domain name to Auth0 and verify that you own that domain. Once verified, you will need to configure your Auth0 features to start using your custom domain.  Provide your domain name to Auth0 Go to Dashboard > Settings > Custom Domains or Dashboard > Branding > Custom Domains. Enter your custom domain in the provided box, and select Auth0-managed certificates.","service":"user-service"}
{"level":"info","message":"Configure dominios personalizados con certificados administrados por Auth0 La disponibilidad var√≠a seg√∫n el plan Auth0 y el m√©todo de inicio de sesi√≥n Tanto la implementaci√≥n de inicio de sesi√≥n que utiliza como su plan Auth0 o acuerdo personalizado afectan si esta funci√≥n est√° disponible. Para aprender m√°s, lee  Nuevo inicio de sesi√≥n universal vs. inicio de sesi√≥n universal cl√°sico y  Precios .  Si desea que Auth0 administre los certificados para su dominio personalizado, solo necesita agregar un registro CNAME en el dominio. Auth0 valida el registro y luego genera el certificado en los servidores Auth0. Estos certificados se renuevan autom√°ticamente cada tres meses. Puede configurar esto f√°cilmente y no tendr√° que mantener los certificados usted mismo.  Para configurar su dominio personalizado utilizando certificados administrados por Auth0, debe proporcionar su nombre de dominio a Auth0 y verificar que sea due√±o de ese dominio. Una vez verificado, deber√° configurar sus funciones de Auth0 para comenzar a usar su dominio personalizado.  Proporcione su nombre de dominio a Auth0 Ir a  Tablero > Configuraci√≥n > Dominios personalizados o  Panel > Marca > Dominios personalizados . Ingrese su dominio personalizado en el cuadro provisto y seleccione Certificados administrados por Auth0.","service":"user-service"}
{"level":"info","message":"el proyecto completo tiene veintis√©is puntos y tomar√° tres iteraciones para completarse si su velocidad es nueve. Un c√°lculo de b√∫fer m√°s simple El enfoque anterior para dimensionar el b√∫fer del proyecto es la mejor manera de dimensionar el b√∫fer del proyecto. Pero si por alguna raz√≥n no puede obtener estimaciones del 50 % y del 90 %, existe una forma m√°s sencilla de dimensionar el b√∫fer del proyecto. Estime cada piso al nivel del 50 % y luego establezca el b√∫fer en la mitad del tama√±o de la suma de las estimaciones del 50 %. Aseg√∫rese de que todo el equipo sea consciente de que sus estimaciones deben ser aquellas en las que tengan un 50% de confianza. Queremos estimaciones que tengan la misma probabilidad de ser altas que bajas. Aunque este c√°lculo es mucho m√°s simple, tiene la falla grave de no verse influenciado por la incertidumbre real en torno a las historias de usuario espec√≠ficas en el proyecto. Supongamos que hay dos pisos, cada uno estimado en cinco puntos de piso. Cada una de estas historias contribuir√° en la misma cantidad a la reserva del proyecto (la mitad de su tama√±o, o 2,5 puntos cada una). Esto ser√° cierto incluso si una de las historias hubiera tenido una estimaci√≥n del 90 % de 100 y la otra una estimaci√≥n del 90 % de 10. Por estas razones, y porque es extremadamente f√°cil pedir dos estimaciones en el momento en que se est√° estimando. , prefiero el enfoque basado en la ra√≠z cuadrada de la suma de los cuadrados. Pautas de amortiguamiento Independientemente de si prefiere tomar el enfoque de la ra√≠z cuadrada de la suma de los cuadrados o el enfoque del 50%, debe considerar estas pautas adicionales basadas en el consejo de Leach ( 2000).‚óÜ El enfoque de la ra√≠z cuadrada de la suma de los cuadrados es m√°s confiable si se estiman al menos diez historias de usuario o caracter√≠sticas. Pero si su proyecto tiene menos de diez elementos, probablemente no deber√≠a planificar con una reserva de todos modos.‚óÜ La reserva del proyecto debe representar al menos el 20% de la duraci√≥n total del proyecto. Es posible que una zona de amortiguamiento m√°s peque√±a no brinde la protecci√≥n adecuada para el proyecto en general.","service":"user-service"}
{"level":"info","message":"Al principio, puede parecer excesivo tener m√∫ltiples b√∫feres. Sin embargo, a menudo es apropiado usar m√∫ltiples amortiguadores, porque estamos protegiendo el proyecto contra m√∫ltiples tipos de incertidumbre. Mi auto tiene cinturones de hombro y bolsas de aire porque cada uno me protege contra un tipo diferente de colisi√≥n. Siempre debemos amortiguar la incertidumbre de un determinado tipo de proyecto con las unidades correctas, lo que significa que amortiguamos la incertidumbre de las caracter√≠sticas con las caracter√≠sticas y programamos la incertidumbre con el tiempo. Adem√°s, cuando se utilizan varios b√∫feres, el tama√±o de cada uno puede ser m√°s peque√±o. Es cuando combinamos b√∫feres de caracter√≠sticas y horarios en un proyecto que los proyectos quedan verdaderamente protegidos contra la incertidumbre. Considere los tres proyectos que se muestran en la figura 17.5. En esta figura, (a) muestra un proyecto que debe entregar un conjunto definido de funcionalidades pero permite que el cronograma var√≠e. La Figura 17.5(b) muestra lo contrario: un proyecto cuya fecha es fija pero tiene total flexibilidad en torno a la funcionalidad a construir. Ahora mire la Figura 17.5(c) y vea que al incluir un b√∫fer de caracter√≠sticas y un b√∫fer de programaci√≥n, el equipo puede comprometerse tanto con una fecha de entrega como con un conjunto m√≠nimo de caracter√≠sticas. Al crear un plan de lanzamiento, nuestro objetivo es utilizar amortiguadores para que el equipo pueda asumir este tipo de compromisos.","service":"user-service"}
{"level":"info","message":"Adem√°s, tenga en cuenta que un proyecto puede usar otros b√∫feres adem√°s de la funci√≥n y el cronograma. Un proyecto puede incluir un colch√≥n presupuestario donde, por ejemplo, se asignan treinta desarrolladores al proyecto, mientras que el presupuesto permite hasta treinta y tres. Esta es una pr√°ctica com√∫n en proyectos medianos y grandes, pero se ve con menos frecuencia en proyectos peque√±os para dos. razones.1. La o las dos personas adicionales que constituir√≠an la reserva de personal en un proyecto peque√±o seguramente podr√≠an hacer contribuciones directas al proyecto. Puede haber pocas o ninguna ganancia de productividad en la dotaci√≥n completa de personal de treinta a treinta y tres desarrolladores. Sin embargo, es casi seguro que habr√° ganancias de productividad si se dota de personal completo de cuatro a cinco.2. Es dif√≠cil amortiguar cualquier cosa en peque√±as cantidades. Cuando un proyecto de treinta personas tiene una reserva de tres personas para un tama√±o total de personal de treinta y tres, tiene una reserva de personal del 10%. Un b√∫fer similar en un proyecto de tres personas implica un b√∫fer de tres d√©cimas partes de un desarrollador. Claramente, es m√°s f√°cil agregar personas completas en lugar de personas parciales a un proyecto.","service":"user-service"}
{"level":"info","message":"Un b√∫fer de programaci√≥n no es relleno El t√©rmino relleno tiene el significado peyorativo de exceso de tiempo a√±adido arbitrariamente a una estimaci√≥n. Hago un presupuesto cuando creo que tardar√© tres d√≠as, pero decido decirte cinco, por si acaso. Las personas agregan relleno a una estimaci√≥n si esperan recibir una paliza si se equivocan. Una reserva de programaci√≥n es diferente: una reserva de programaci√≥n es un margen de seguridad necesario que se suma a la suma de las estimaciones de las que se ha eliminado la seguridad local. la mayor parte de ese b√∫fer si se ve obligado a frenar repentinamente. S√≠, es posible que pueda conducir durante horas con la longitud de un autom√≥vil separ√°ndolo a usted y al autom√≥vil de adelante, pero no es probable. La protecci√≥n alrededor de su autom√≥vil es fundamental para su seguridad. Las zonas de influencia adecuadas alrededor de su proyecto son cr√≠ticas para la seguridad de su proyecto. Cuando permitimos peque√±as cantidades de flexibilidad tanto en la fecha de entrega como en la funcionalidad, podemos proteger dos dimensiones del proyecto. M√°s importante a√∫n, amortiguamos cada restricci√≥n del proyecto con el recurso adecuado: amortiguamos la fecha l√≠mite con el tiempo; amortiguamos funcionalidad con funcionalidad. Cuando no podemos amortiguar adecuadamente una restricci√≥n, nos vemos obligados a aumentar el tama√±o de otros amortiguadores. Si me veo obligado a garantizar la funcionalidad, respaldar√© esa garant√≠a con un b√∫fer de programaci√≥n m√°s grande. Algunas advertencias Aunque saber c√≥mo agregar uno o m√°s b√∫fer a un proyecto es una habilidad importante que debe tener a su disposici√≥n, tambi√©n es bueno tener en cuenta algunas advertencias. en su uso.‚óÜ Al agregar un margen de programaci√≥n, use el enfoque de dos estimaciones descrito en este cap√≠tulo o aseg√∫rese de que las estimaciones de un solo valor representen estimaciones en","service":"user-service"}
{"level":"info","message":"el punto del 50%. Agregar un b√∫fer de programaci√≥n adem√°s de estimaciones del 90% ya pesimistas dar√° como resultado una programaci√≥n demasiado larga.‚óÜ En muchos proyectos, no se necesita una fecha l√≠mite precisa con un conjunto preciso de funcionalidad entregada. En cambio, el equipo simplemente necesita entregar software de alta calidad lo m√°s r√°pido posible durante un per√≠odo prolongado. Si se encuentra en esta situaci√≥n, no asuma el trabajo adicional de agregar b√∫feres a su proyecto.‚óÜ Tenga cuidado con la forma en que comunica los b√∫feres. No debe ocultar su existencia o c√≥mo se utilizan. Sin embargo, un b√∫fer (especialmente un b√∫fer de programaci√≥n) puede parecer que se est√° rellenando. Esto significa que deber√° comunicar c√≥mo deriv√≥ las estimaciones y el b√∫fer, y c√≥mo se pretende que el b√∫fer proporcione un cronograma en el que todos puedan confiar. Resumen La mayor√≠a de los proyectos contienen una enorme cantidad de incertidumbre. Esta incertidumbre a menudo no se refleja completamente en los cronogramas y plazos que crean los equipos de proyecto. Hay momentos en que esta incertidumbre es tan grande o significativa que se deben tomar medidas adicionales al estimar la duraci√≥n del proyecto. Este puede ser el caso cuando el proyecto se planifica con mucha anticipaci√≥n, el proyecto debe cumplir absolutamente una fecha l√≠mite con un conjunto razonablemente firme de funcionalidades, el proyecto se subcontrata, los requisitos a√∫n son superficiales o hay un impacto significativo (financiero o de otro tipo). ) a estar equivocado sobre una fecha. Los dos tipos m√°s comunes de b√∫feres son los b√∫feres de caracter√≠sticas y los b√∫feres de programaci√≥n. Se crea un b√∫fer de funciones cuando se priorizan los requisitos de un producto y se reconoce que es posible que no se entreguen todas las funciones. El proceso √°gil DSDM, por ejemplo, recomienda que el 30 % del esfuerzo del proyecto se considere opcional, lo que crea un b√∫fer de caracter√≠sticas para el proyecto. Si el tiempo se agota, a√∫n se puede cumplir con el cronograma colocando elementos en el b√∫fer de caracter√≠sticas. Un b√∫fer de cronograma, por otro lado, se crea al incluir en el cronograma una cantidad de tiempo que refleja la incertidumbre inherente al tama√±o de un equipo. Se puede construir un b√∫fer de caracter√≠sticas estimando un tama√±o probable del 50 % y un tama√±o probable del 90 % para cada historia de usuario. Al aplicar la f√≥rmula de la ra√≠z cuadrada de la suma de los cuadrados a cada una de las estimaciones del 50 % y el 90 %, se puede estimar una reserva de programaci√≥n del tama√±o adecuado. Un proyecto debe protegerse contra la incertidumbre de caracter√≠sticas con una reserva de caracter√≠sticas y contra la incertidumbre de programaci√≥n con una reserva de programaci√≥n. Un b√∫fer de caracter√≠sticas puede combinarse con un b√∫fer de programaci√≥n. De hecho, esto suele ser una buena idea, ya que permite que el tama√±o de cada uno sea m√°s peque√±o.","service":"user-service"}
{"level":"info","message":"1. ¬øExisten condiciones en sus organizaciones que podr√≠an beneficiarse del esfuerzo adicional de calcular un margen de programaci√≥n?2. ¬øSu proyecto actual est√° protegido contra cualquier tipo de incertidumbre? Si es as√≠, ¬øc√≥mo? Si no, ¬øqu√© tipos de amortiguadores ser√≠an los m√°s beneficiosos?3. ¬øVe evidencia de la Ley de Parkinson o el s√≠ndrome del estudiante en su organizaci√≥n? M√°s all√° de las sugerencias de este cap√≠tulo, ¬øqu√© podr√≠a hacer para reducir su impacto?","service":"user-service"}
{"level":"info","message":"‚ÄúHaga la planificaci√≥n, pero deseche los planes‚Äù.‚ÄîMary Poppendieck A menudo se describe que los equipos √°giles no tienen m√°s de siete a diez desarrolladores. Los equipos de este tama√±o pueden lograr bastante, especialmente con un proceso √°gil que les permite y los alienta a convertirse en m√°s productivo. Sin embargo, hay algunos proyectos en los que nos gustar√≠a traer un equipo m√°s grande para que se ocupe del proyecto. En lugar de establecer un solo equipo de 100 personas, el enfoque √°gil consiste en crear varios equipos m√°s peque√±os. Un proyecto √°gil puede tener una docena de equipos m√°s peque√±os en lugar de un solo equipo de 100 personas. En este cap√≠tulo, tomaremos lo que aprendimos en los cap√≠tulos anteriores y lo aplicaremos al desaf√≠o de planificar un proyecto que comprende varios equipos. La planificaci√≥n de un proyecto grande con m√∫ltiples equipos puede requerir 1. Establecimiento de una base com√∫n para las estimaciones.2. Agregar detalles a sus historias de usuario antes.3. Realizaci√≥n de planificaci√≥n anticipada.4. Incorporaci√≥n de amortiguadores de alimentaci√≥n en el plan. Un proyecto puede requerir algunas o todas estas t√©cnicas, dependiendo de cu√°ntos subequipos est√©n involucrados, as√≠ como de la frecuencia y la intensidad con la que necesiten coordinarse. En general, aconsejo a los equipos que incorporen solo la mayor cantidad de estos","service":"user-service"}
{"level":"info","message":"t√©cnicas adicionales seg√∫n sea necesario, empezando por establecer una base com√∫n y trabajar en orden hacia la introducci√≥n de amortiguadores de alimentaci√≥n. se beneficiar√° de estimar en una unidad com√∫n y establecer un significado de referencia para esa unidad. Imagine la dificultad de predecir cu√°nto tiempo m√°s se necesita para completar un conjunto de historias de usuario si algunas de ellas se estiman en d√≠as ideales y otras se estiman en puntos de historia. Peor a√∫n, imagine cu√°nto m√°s dif√≠cil ser√≠a si un equipo estimara un conjunto de historias en 20 puntos pero otro equipo estimara el mismo trabajo en 100 puntos de historia. Al comienzo de un proyecto, los equipos deben reunirse y elegir entre puntos de historia y d√≠as ideales. Luego deben establecer una l√≠nea de base com√∫n para sus estimaciones, de modo que la estimaci√≥n de un equipo sea similar a la de otro equipo si el otro equipo hubiera estimado el trabajo en su lugar. Cada historia de usuario debe ser estimada por un solo equipo, pero las estimaciones deben ser equivalentes independientemente del equipo que estim√≥ el trabajo. Hay dos buenas maneras de establecer una l√≠nea de base com√∫n. El primer enfoque funciona solo si los equipos han trabajado juntos en un proyecto anterior. En ese caso, pueden seleccionar algunas historias de usuario del proyecto anterior y acordar las estimaciones para ellas. Supongamos que est√°n estimando en d√≠as ideales; deben encontrar dos o tres pisos que consideren como un d√≠a ideal cada uno. Luego, deben encontrar algunas que consideren dos historias de un d√≠a ideal, y as√≠ sucesivamente. Pueden identificar unas veinte historias antiguas, acordando una nueva estimaci√≥n para cada una, sabiendo lo que ahora saben sobre las historias. Una vez que se acuerdan estas historias de referencia, los equipos pueden estimar historias por separado compar√°ndolas con las historias de referencia (es decir, estim√°ndolas por analog√≠a). El segundo enfoque es similar pero implica estimar en colaboraci√≥n una variedad de nuevas historias de usuarios. Se selecciona una variedad de historias planeadas para el nuevo lanzamiento. Las historias deben abarcar una variedad de tama√±os y deben estar en √°reas del sistema con las que la mayor√≠a de los estimadores puedan relacionarse. Todo el equipo grande, o los representantes de cada subequipo, si el equipo completo es demasiado grande, se re√∫nen y acuerdan una estimaci√≥n para estas historias. Al igual que con el primer enfoque, estas estimaciones se utilizan luego como l√≠neas de base contra las cuales se comparan las estimaciones futuras. La √∫nica vez que los equipos separados deben considerar estimar en diferentes unidades sin una l√≠nea de base com√∫n es cuando los productos que se est√°n construyendo est√°n realmente separados y no hay absolutamente ninguna oportunidad para que los desarrolladores de un equipo para moverse","service":"user-service"}
{"level":"info","message":"sobre otro. Incluso entonces, mi recomendaci√≥n es establecer una l√≠nea de base com√∫n, ya que facilita la comunicaci√≥n sobre el proyecto. Adici√≥n de detalles a las historias de usuario antes Idealmente, un equipo √°gil comienza una iteraci√≥n con requisitos vagamente definidos y convierte esos requisitos vagos en software funcional y probado al final del iteraci√≥n. Pasar de un requisito vago a un software que funciona en una sola iteraci√≥n suele ser m√°s f√°cil en un proyecto de un solo equipo que cuando hay varios equipos. En un proyecto de varios equipos, a menudo es apropiado y necesario pensar m√°s en las historias de los usuarios antes del inicio de la iteraci√≥n. El detalle adicional permite que varios equipos coordinen el trabajo. Para lograr esto, los equipos m√°s grandes a menudo incluyen analistas dedicados, dise√±adores de interacci√≥n con el usuario y otros que dedican una parte de su tiempo durante una iteraci√≥n determinada a preparar el trabajo de la pr√≥xima iteraci√≥n. En general, no aconsejo que los analistas, los dise√±adores de interacci√≥n y otros trabajen una iteraci√≥n completa por delante. M√°s bien, su responsabilidad principal debe seguir siendo el trabajo de la iteraci√≥n actual, pero al planificar la iteraci√≥n actual, deben incluir algunas tareas relacionadas con la preparaci√≥n de la pr√≥xima iteraci√≥n. Lo que he encontrado es el resultado m√°s √∫til del trabajo realizado antes de la iteraci√≥n iteraci√≥n es la identificaci√≥n de las condiciones de satisfacci√≥n del propietario del producto para las historias de usuario que es probable que se desarrollen durante la iteraci√≥n. Las condiciones de satisfacci√≥n del propietario de un producto para una historia de usuario son las pruebas de aceptaci√≥n de alto nivel que le gustar√≠a ver aplicadas a la historia antes de considerarla terminada. Una historia de usuario est√° terminada cuando se puede demostrar que cumple con todas las condiciones de satisfacci√≥n identificadas por el propietario del producto. Aunque es extremadamente √∫til conocer las condiciones de satisfacci√≥n de una historia de usuario antes de que comience una iteraci√≥n, es poco probable (e innecesario) que un equipo los identifica para todas las historias de usuario antes de la iteraci√≥n. Siendo realistas, el conjunto exacto de historias que se llevar√°n a cabo en la pr√≥xima iteraci√≥n no se conoce hasta el final de la reuni√≥n de planificaci√≥n de la iteraci√≥n que inicia la iteraci√≥n. Sin embargo, en la mayor√≠a de los casos, el propietario del producto y el equipo pueden hacer una conjetura razonable sobre las historias que probablemente se priorizar√°n en la pr√≥xima iteraci√≥n. Las condiciones de satisfacci√≥n se pueden identificar para estas historias antes de la iteraci√≥n.","service":"user-service"}
{"level":"info","message":"La mayor√≠a de los equipos con interdependencias moderadamente complejas o frecuentes se beneficiar√°n de mantener una ventana de anticipaci√≥n m√≥vil durante la planificaci√≥n de la versi√≥n y la iteraci√≥n. Supongamos que dos equipos est√°n trabajando en la aplicaci√≥n SwimStats. Parte de SwimStats consiste en mostrar informaci√≥n est√°tica, como los tiempos de pr√°ctica, las direcciones y direcciones de las piscinas, etc. Sin embargo, SwimStats tambi√©n debe proporcionar informaci√≥n din√°mica basada en bases de datos, incluidos los resultados de todos los encuentros durante los √∫ltimos quince a√±os y los registros personales de todos los nadadores en todos los eventos. Los registros nacionales y de grupos de edad se almacenan en una base de datos en las instalaciones remotas de la asociaci√≥n nacional de nataci√≥n. Acceder a la base de datos no es tan simple como les gustar√≠a a los equipos, y la asociaci√≥n nacional planea cambiar de proveedor de bases de datos en el pr√≥ximo a√±o o dos. Por estas razones, el propietario del producto y los equipos de desarrollo acuerdan que desean desarrollar una API (interfaz de programaci√≥n de aplicaciones) para acceder a la base de datos. Esto har√° que un cambio posterior a un proveedor de base de datos diferente sea mucho m√°s simple. Las historias de usuarios iniciales y las estimaciones para cada uno se muestran en la Tabla 18.1.","service":"user-service"}
{"level":"info","message":"La velocidad se estima en veinte puntos por iteraci√≥n para cada equipo. Debido a que hay 110 puntos de trabajo, esto significa que los equipos deber√≠an poder entregar todas las funciones en tres iteraciones. Sin embargo, treinta de los puntos son para desarrollar la API, y otros cuarenta (los √∫ltimos tres puntos de la tabla 18.1) solo se pueden realizar despu√©s de la API. Para terminar estos setenta puntos en tres iteraciones, ambos equipos necesitar√°n usar la API. Esto los lleva a una asignaci√≥n de trabajo como se muestra en la Figura 18.1, que muestra la interdependencia del equipo como una flecha entre el trabajo de API del primer equipo y el trabajo de registros personales realizado por el segundo.","service":"user-service"}
{"level":"info","message":"Puede recordar que en el Cap√≠tulo 13, \"Fundamentos de la planificaci√≥n de la versi√≥n\", aconsej√© que el plan de la versi√≥n mostrara los detalles solo para las siguientes iteraciones. Esto se debe a que a menudo es suficiente para respaldar las interdependencias que encuentran muchos equipos. Cuando varios equipos necesitan coordinar el trabajo, el plan de lanzamiento debe actualizarse para mostrar y coordinar el trabajo de las pr√≥ximas dos o tres iteraciones. El n√∫mero exacto de iteraciones depender√°, por supuesto, de la frecuencia y la importancia de las dependencias entre los equipos. A medida que se completan las iteraciones, los detalles sobre ellas se eliminan del plan. El plan de lanzamiento se convierte entonces en un plan prospectivo continuo que siempre describe las expectativas sobre las pocas iteraciones nuevas. Laufer (1996) se refiere a esto como \"mirar hacia adelante\". La figura 18.1 muestra la situaci√≥n en la que ocurre un traspaso entre equipos entre iteraciones. Esto es m√°s seguro que planificar un traspaso durante la aniteraci√≥n. Al comienzo de cada iteraci√≥n, cada equipo identifica el trabajo que puede completar y se compromete a terminarlo. En el caso de la Figura 18.1, al comienzo de la tercera iteraci√≥n, el Equipo 2 pudo comprometerse significativamente a completar la historia del usuario de registros personales porque sab√≠a que la API estaba terminada. Supongamos, en cambio, que cuando el Equipo 2 plane√≥ su tercera iteraci√≥n, la API no estaba lista, pero se esperaba que estuviera lista en unos d√≠as. Incluso si el Equipo 2 pudiera terminar la historia de los registros personales sin tener la API el primer d√≠a, es un compromiso mucho m√°s tenue y el cronograma general est√° en mayor riesgo. en la medida de lo posible, deben limitar los compromisos al trabajo completado antes del inicio de la iteraci√≥n.","service":"user-service"}
{"level":"info","message":"Para la mayor√≠a de los equipos en la mayor√≠a de las situaciones, un plan continuo de anticipaci√≥n es adecuado. Hay situaciones, sin embargo, en las que las interdependencias entre los equipos son tan complejas o frecuentes que la simple planificaci√≥n anticipada de la secci√≥n anterior no es suficiente. En estos casos, su primer recurso debe ser tratar de encontrar una manera de reducir el n√∫mero de interdependencias para que un plan anticipado continuo sea adecuado. Si eso no se puede hacer, considere incluir iteraciones de b√∫fer de alimentaci√≥n que brinden las capacidades que necesitan otros equipos. Un b√∫fer de alimentaci√≥n, como el b√∫fer de programaci√≥n del cap√≠tulo anterior, protege la entrega a tiempo de un conjunto de nuevas capacidades. Esta es una forma algo complicada de decir que si su equipo necesita algo de mi equipo ma√±ana a las 8:00 a. m., mi equipo no deber√≠a planear terminarlo a las 7:59. Es decir, nos gustar√≠a un plan que se parezca a la figura 18.2.","service":"user-service"}
{"level":"info","message":"En la Figura 18.2, se insert√≥ un b√∫fer de alimentaci√≥n entre la finalizaci√≥n de la API del Equipo 1 y el comienzo del trabajo del Equipo 2 utilizando la API en la historia de usuario de registros personales. El b√∫fer de alimentaci√≥n protege la fecha de inicio en la historia de registros personales contra retrasos en la finalizaci√≥n de la API. Para incluir un b√∫fer de alimentaci√≥n en un plan de lanzamiento, todo lo que necesita hacer es planificar temporalmente una velocidad m√°s baja para el equipo que est√° entregando una capacidad. a otro equipo. En el caso de la Figura 18.2, el esfuerzo del Equipo 1 se divide equitativamente entre terminar la API y un b√∫fer de alimentaci√≥n para que podamos estar seguros de que el Equipo 2 puede comenzar con los registros personales al comienzo de la tercera iteraci√≥n. Esto no significa que el Equipo 1 se lo tome con calma durante la segunda iteraci√≥n. De hecho, la expectativa es que completar√°n diez puntos en la API, necesitar√°n solo una parte del b√∫fer y comenzar√°n a trabajar en la historia de usuario de los registros nacionales durante la segunda iteraci√≥n. ¬øQu√© se almacena en el b√∫fer? En el caso que se muestra en la Figura 18.2, agregar un b√∫fer de alimentaci√≥n no extendi√≥ la duraci√≥n del proyecto general, porque la tercera iteraci√≥n del Equipo 1 a√∫n no estaba","service":"user-service"}
{"level":"info","message":"lleno. En muchos casos, sin embargo, agregar amortiguadores de alimentaci√≥n extender√° la duraci√≥n esperada de un proyecto. Pero por lo general lo hace de una manera que representa una expectativa realista del cronograma probable, no en una forma de \"rellenemos el cronograma para que no tengamos que trabajar duro\". Debido a que los b√∫feres de alimentaci√≥n pueden prolongar un programa, querr√° agregarlos solo cuando sea necesario. Para determinar d√≥nde son necesarios los b√∫feres de alimentaci√≥n, primero asigne historias de usuario entre equipos e iteraciones. Luego busque dependencias cr√≠ticas entre iteraciones y equipos. Finalmente, agregue un b√∫fer de alimentaci√≥n solo entre estas dependencias cr√≠ticas. Es decir, agregue un b√∫fer de alimentaci√≥n solo si un equipo no podr√° realizar el trabajo planificado de alta prioridad sin los entregables de otro equipo. Aun as√≠, si el equipo puede intercambiar f√°cilmente otro trabajo de gran valor, no es necesario un b√∫fer de alimentaci√≥n. Del mismo modo, no agregue un b√∫fer de alimentaci√≥n si el segundo equipo podr√° comenzar a progresar con una entrega parcial del primer equipo. Si su equipo puede comenzar su trabajo, incluso si mi equipo entrega solo la mitad de la funcionalidad planificada, no se necesita un buffer de alimentaci√≥n. Dimensionamiento de un buffer de alimentaci√≥n Para dimensionar el buffer de alimentaci√≥n, puede usar las pautas provistas en el Cap√≠tulo 17, \"Planes de amortiguamiento para la incertidumbre\". Sin embargo, afortunadamente, la mayor√≠a de las dependencias entre equipos se basan en no m√°s de un pu√±ado de historias o caracter√≠sticas a la vez. Debido a esto, por lo general no tendr√° suficientes historias para usar el enfoque de la ra√≠z cuadrada de la suma de los cuadrados descrito en ese cap√≠tulo de manera efectiva. En estos casos, configure el tama√±o del b√∫fer de alimentaci√≥n como un porcentaje de las historias que crean la interdependencia. Puede usar el 50 % como tama√±o de b√∫fer predeterminado, pero esto debe ajustarse seg√∫n el criterio del equipo. Es posible tener un b√∫fer de alimentaci√≥n que sea m√°s largo que una iteraci√≥n completa. Sin embargo, rara vez es recomendable usar un b√∫fer de alimentaci√≥n tan largo. Un b√∫fer de alimentaci√≥n que es m√°s largo que una iteraci√≥n suele ser el resultado de la planificaci√≥n para pasar una gran parte de la funcionalidad a otro equipo. Hay dos razones por las que un proyecto probablemente no necesite un gran b√∫fer de alimentaci√≥n en estos casos. En primer lugar, la transferencia de un equipo a otro debe dividirse casi con certeza para que la funcionalidad se entregue de forma incremental. Esto permitir√° que el segundo equipo comience tan pronto como reciba el conjunto inicial de funcionalidades del primer equipo. En segundo lugar, en lugar de consumir un b√∫fer de alimentaci√≥n extremadamente grande, los equipos probablemente encontrar√≠an formas de dividir el trabajo o de hacer otros ajustes entre iteraciones como tan pronto como notaron que un equipo se estaba quedando atr√°s. Hacer que el equipo receptor act√∫e como propietario del producto o cliente del equipo de entrega generalmente permitir√° a los dos equipos elaborar una secuencia de entrega incremental que funcione para ambos equipos.","service":"user-service"}
{"level":"info","message":"Nunca tuve que usar un b√∫fer de alimentaci√≥n que fuera m√°s grande que una iteraci√≥n completa y rara vez he usado uno que dure m√°s de la mitad de una iteraci√≥n. Cada vez que me encuentro con la posible necesidad de hacerlo, cuestiono mis suposiciones y reviso el plan para ver qu√© puedo hacer para acortar la cadena de entregables que se pasan de un equipo a otro. proyecto de varios equipos. Tenga en cuenta que no necesita hacer nada de esto si tiene un solo equipo. Probablemente ni siquiera necesite hacer esto si tiene solo tres o cuatro equipos de aproximadamente siete personas, siempre y cuando esos equipos se comuniquen con frecuencia. dependencias entre equipos como las que se muestran en este cap√≠tulo. Cuando se enfrenta a un proyecto as√≠, es √∫til dedicar unas horas m√°s a la planificaci√≥n del proyecto. Si lo hace, le permitir√° estimar con mayor confianza y precisi√≥n una fecha de finalizaci√≥n objetivo desde el principio y tambi√©n proporcionar√° cierta protecci√≥n contra los retrasos en el cronograma que se evitan f√°cilmente. Resumen Los proyectos √°giles tienden a evitar los equipos grandes en lugar de utilizar equipos de equipos para desarrollar proyectos grandes. Cuando varios equipos est√°n trabajando en un proyecto, necesitan coordinar su trabajo. Este cap√≠tulo describi√≥ cuatro t√©cnicas que son √∫tiles para ayudar a varios equipos a trabajar en el mismo proyecto. Primero, los equipos deben establecer una base com√∫n para sus estimaciones. Todos los equipos deben ponerse de acuerdo para estimar en la misma unidad: puntos de historia o d√≠as ideales. Deben acordar a√∫n m√°s el significado de esas unidades acordando las estimaciones para un peque√±o conjunto de historias. En segundo lugar, cuando varios equipos necesitan trabajar juntos, a menudo es √∫til agregar detalles a sus historias de usuario antes. La mejor manera de hacer esto es identificar las condiciones de satisfacci√≥n del propietario del producto para una historia. Estas son las cosas que se pueden demostrar como verdaderas sobre una historia una vez que se implementa por completo. En tercer lugar, varios equipos se benefician al incorporar un plan continuo de anticipaci√≥n en su proceso de planificaci√≥n de lanzamiento. Un plan continuo de anticipaci√≥n simplemente anticipa una peque√±a cantidad de iteraciones (generalmente, solo dos o tres) y permite que los equipos coordinen el trabajo al compartir informaci√≥n sobre en qu√© trabajar√° cada uno en el futuro cercano.","service":"user-service"}
{"level":"info","message":"En cuarto lugar, en proyectos muy complejos con muchas dependencias entre equipos, puede ser √∫til incorporar amortiguadores de alimentaci√≥n en el plan. Un buffer de alimentaci√≥n es una cantidad de tiempo que evita que la entrega tard√≠a de un equipo provoque el inicio tard√≠o de otro. Estas t√©cnicas generalmente se introducen en un proyecto en el orden descrito. Sin embargo, pueden introducirse en el orden que se desee. Preguntas de debate 1. ¬øC√≥mo elegir√≠a establecer una l√≠nea de base com√∫n para sus estimaciones en un proyecto con m√∫ltiples equipos?2. ¬øQu√© importancia tienen las interdependencias del equipo en su proyecto? ¬øCu√°l de las t√©cnicas presentadas en este cap√≠tulo ser√≠a m√°s beneficiosa?","service":"user-service"}
{"level":"info","message":"La Parte IV de este libro describe c√≥mo determinar un cronograma apropiado para un proyecto. Una vez que se han creado un plan y un cronograma, la planificaci√≥n no ha terminado. Es importante monitorear el progreso contra el plan, comunicar sobre el progreso y luego refinar el plan en funci√≥n de nuestras observaciones. En los dos primeros cap√≠tulos de esta parte, primero analizamos c√≥mo monitorear un plan de lanzamiento y luego c√≥mo monitorear un plan de iteraci√≥n. . La parte concluye analizando varias formas de comunicar sobre estimaciones, planes y progreso. Tambi√©n se incluye un informe de resumen de fin de iteraci√≥n de muestra.","service":"user-service"}
{"level":"info","message":"‚ÄúLas estrellas pueden mentir, pero los n√∫meros nunca lo hacen‚Äù.‚ÄîMary Chapin Carpenter, ‚ÄúI Feel Lucky‚Äù Los antiguos marineros ten√≠an dos problemas. Primero, ten√≠an que saber su latitud, es decir, su posici√≥n norte-sur en un mapa. En segundo lugar, ten√≠an que saber su longitud o posici√≥n este-oeste. Determinar la latitud mediante la observaci√≥n de la estrella polar era relativamente f√°cil y ya se hab√≠a hecho en el a√±o 300 a. La longitud presentaba un problema m√°s dif√≠cil porque depend√≠a del uso de un reloj relativamente preciso, el orcron√≥metro. Desafortunadamente, no hubo cron√≥metros lo suficientemente precisos (especialmente los que encajaban y funcionaban a bordo de un barco) hasta principios del siglo XVIII. Antes de la invenci√≥n del cron√≥metro, un marinero solo pod√≠a adivinar su longitud. Para hacer estas conjeturas, los marineros aplicaron una serie de conjeturas y ajustes conocidos como navegaci√≥n a estima, que generalmente se considera la abreviatura de navegaci√≥n a estima. La navegaci√≥n a estima implicaba adivinar qu√© tan lejos hab√≠a navegado un barco al este o al oeste y luego ajustar esa suposici√≥n por conjeturas sobre el impacto del viento y la deriva del mar. Suponga que el veloc√≠metro de su yate dice que viaja ocho millas por hora. Sin embargo, si se dirige hacia las olas, el viento y la corriente, es posible que solo avance cinco millas por hora. Sus conjeturas de navegaci√≥n a estima deber√≠an reflejar todo esto, o estimar√≠a incorrectamente su longitud. El seguimiento del progreso de un equipo de software es muy similar a trazar la posici√≥n de un barco, especialmente mediante navegaci√≥n a estima. Nos gustar√≠a navegar nuestro software","service":"user-service"}
{"level":"info","message":"proyecto de desarrollo en l√≠nea recta del punto A al punto B. Esto rara vez sucede, sin embargo, debido a que los requisitos cambian o se refinan, nuestra tasa de progreso no siempre es la que esperamos y, a veces, cometemos errores en la forma en que medimos nuestra posici√≥n. Las secciones de este cap√≠tulo describen t√©cnicas para el seguimiento del progreso que est√°n dise√±adas para minimizar el efecto de estos y otros problemas similares. Seguimiento de la versi√≥n Al comienzo de una versi√≥n, establecemos un plan que dice algo as√≠ como \"Durante los pr√≥ximos cuatro meses y ocho iteraciones de dos semanas\". completaremos aproximadamente 240 puntos de historia [o d√≠as ideales] de trabajo‚Äù. A medida que aprendemos m√°s sobre las verdaderas necesidades de nuestros usuarios y sobre el tama√±o del proyecto, esta estimaci√≥n puede cambiar. Sin embargo, en cualquier momento nos gustar√≠a poder evaluar d√≥nde estamos en relaci√≥n con el objetivo de completar una determinada cantidad de trabajo en un per√≠odo de tiempo determinado. Al hacerlo, hay muchas fuerzas en juego, y cada una debe ser considerada. El primero, e idealmente el m√°s significativo, es la cantidad de progreso realizado por el equipo. El segundo, sin embargo, es cualquier cambio en el alcance del proyecto. El propietario del producto puede haber agregado o eliminado requisitos. Si el propietario del producto agrega cuarenta puntos de historia y el equipo completa treinta, el equipo tiene m√°s trabajo que completar que cuando comenz√≥ la iteraci√≥n anterior. El objetivo ha cambiado y ser√° √∫til saber qu√© tan lejos est√° el equipo del nuevo objetivo. De manera similar, los desarrolladores pueden haber aprendido cosas durante la iteraci√≥n que les hacen querer revisar las estimaciones de puntos de la historia asignadas a parte del trabajo que viene m√°s adelante en el plan de lanzamiento. Estas fuerzas (trabajo completado, requisitos modificados y estimaciones revisadas) pueden considerarse como siendo similar a las fuerzas del viento (llamado abatimiento) y las fuerzas del mar (llamado deriva) en un barco. Considere la figura 19.1, que muestra las fuerzas que act√∫an sobre un bote. El bote que se muestra en este diagrama viajar√° menos distancia de lo que se deducir√≠a de su veloc√≠metro. De manera similar, aunque la br√∫jula del barco apunt√≥ hacia el este durante todo su viaje, el viento habr√° hecho que se desv√≠e hacia el sur. Sin ajustes de rumbo, este barco tardar√° m√°s en llegar a alg√∫n lugar que no sea su destino original. Vuelva a etiquetar mentalmente las flechas de la figura 19.1 para que la deriva y el margen de maniobra se conviertan en cambios de requisitos (agregar o quitar funcionalidad) y cambios en las estimaciones. La figura 19.1 luego refleja los desaf√≠os de seguir el progreso de un proyecto de software contra su cronograma.","service":"user-service"}
{"level":"info","message":"VelocidadUn barco mide su velocidad de avance en nudos; un equipo √°gil mide su tasa de progreso con la velocidad. La velocidad se expresa como el n√∫mero de puntos de historia (o d√≠as ideales) completados por iteraci√≥n. Para un equipo que termin√≥ doce historias con un total de treinta puntos de historia en su √∫ltima iteraci√≥n, decimos que su velocidad es ‚Äútreinta‚Äù o ‚Äútreinta puntos por iteraci√≥n‚Äù. Suponiendo que el alcance del proyecto no haya cambiado, el equipo tiene mucho menos trabajo por completar. Debido a que la velocidad es la medida principal del progreso de un equipo, es importante establecer algunas reglas b√°sicas sobre c√≥mo se calcula. La regla m√°s importante es que un equipo cuenta puntos hacia la velocidad solo para historias o caracter√≠sticas que est√©n completas al final de la iteraci√≥n. Completo no significa algo como \"La codificaci√≥n est√° hecha, pero no ha sido probada\" o \"Est√° codificada pero necesita ser integrada\". Completo significa c√≥digo que est√° bien escrito, bien factorizado, registrado y limpio; cumple con los est√°ndares de codificaci√≥n; y pasa todas las pruebas. Para saber cu√°nto progreso se ha hecho, solo contamos los puntos por el trabajo que est√° completo. Abrir la puerta a contar el trabajo parcialmente terminado, tal vez dando cr√©dito parcial, hace que sea imposible saber exactamente d√≥nde estamos. Hay tres problemas principales con el conteo sin terminar trabajar. Primero, es extremadamente dif√≠cil medir el trabajo sin terminar o incompleto. ¬øCu√°l es m√°s adelante: una historia de usuario que ha sido programada pero no ha tenido pruebas en su contra o una historia que ha sido parcialmente programada y parcialmente probada? ¬øQu√© tan avanzado est√° un programador que ha dise√±ado una soluci√≥n para una historia pero no ha comenzado a codificarla? Somos buenos para saber cu√°ndo algo no se ha iniciado, y estamos","service":"user-service"}
{"level":"info","message":"bastante bueno para saber cu√°ndo est√° hecho. Deber√≠amos evaluar el trabajo para estar en uno de esos dos estados y dejarlo as√≠. En segundo lugar, las historias incompletas rompen la confianza entre el equipo de desarrolladores y el equipo del cliente en el proyecto. Si una historia no se puede completar seg√∫n lo planeado durante una iteraci√≥n, los desarrolladores y el equipo del cliente deben resolver el problema en colaboraci√≥n tan pronto como se descubra. Por lo general, esto significa que la historia se mover√° fuera de la iteraci√≥n o divisi√≥n y partes de ella se mover√°n fuera. El propietario del producto y el equipo del cliente pueden tomar estas decisiones en tiempo real durante la iteraci√≥n y pueden elegir volver a priorizar en funci√≥n del nuevo conocimiento sobre el costo de la historia. Alternativamente, el equipo del cliente puede decidir modificar los criterios de aceptaci√≥n de la historia, acept√°ndola bajo criterios reducidos. No ir√≠an tan lejos como para aceptar una versi√≥n de la historia con errores o no probada, pero pueden reducir los requisitos de desempe√±o, el manejo de casos especiales, etc. proceso de desarrollo. Cuanto m√°s trabajo en proceso permita construir un equipo, m√°s tiempo tardar√°n las nuevas funciones en transformarse de ideas en bruto en software funcional. Con el tiempo, esto disminuir√° el rendimiento de todo el equipo. Del mismo modo, con grandes cantidades de trabajo en proceso, el equipo tarda m√°s en recibir comentarios sobre lo que est√° desarrollando. Esto significa que el aprendizaje tambi√©n se retrasa. Si un equipo tiene historias sin terminar al final de una iteraci√≥n, est√° trabajando con caracter√≠sticas o historias que son demasiado grandes. Las peque√±as historias conducen a un flujo constante a trav√©s del proceso de desarrollo. Si las historias se dejan sin terminar, deben dividirse en historias m√°s peque√±as. Idealmente, esto deber√≠a suceder antes del inicio de la iteraci√≥n. Sin embargo, si durante una iteraci√≥n se descubre que una historia es m√°s grande de lo esperado, debe llamar la atenci√≥n del propietario del producto. El propietario del producto, en colaboraci√≥n con el equipo, encuentra una manera de dividir la historia o reducir su alcance, de modo que, idealmente, una parte a√∫n pueda completarse dentro de la iteraci√≥n, y el resto pasar a una iteraci√≥n futura. Entonces, ¬øc√≥mo debe contar un equipo una parte parcialmente terminada? historia al determinar la velocidad? C√≥mo cuentan esa historia es menos importante que determinar por qu√© sucedi√≥ y c√≥mo pueden evitar que vuelva a suceder. Puede haber sucedido porque fue subestimado. Si es as√≠, el equipo debe pensar qu√© tipo de trabajo se subestim√≥ u olvid√≥ y tratar de recordar tener cuidado al estimar ese tipo de trabajo en el futuro. O la historia puede haber quedado sin terminar porque se incluyeron demasiadas historias en la iteraci√≥n actual. Si esa fue la causa, se debe tener cuidado para planificar las iteraciones con m√°s cuidado.","service":"user-service"}
{"level":"info","message":"La figura 19.2 muestra un gr√°fico de quemado de liberaci√≥n (Schwaber y Beedle 2002). El eje vertical muestra el n√∫mero de puntos de historia restantes en el proyecto. (Podr√≠a mostrar f√°cilmente el n√∫mero de d√≠as ideales restantes). Las iteraciones se muestran en el eje horizontal. Un gr√°fico de trabajo pendiente de la versi√≥n muestra la cantidad de trabajo restante al comienzo de cada iteraci√≥n. Esto se convierte en un poderoso indicador visual de la rapidez con que un equipo avanza hacia su objetivo. La Figura 19.2 muestra un trabajo pendiente hipot√©tico para un proyecto con 240 puntos de historia entregados en cantidades iguales durante ocho iteraciones.","service":"user-service"}
{"level":"info","message":"Por supuesto, es poco probable que un equipo que espera tener una velocidad de treinta tenga esa velocidad exacta en cada iteraci√≥n. En la Figura 19.3 podr√≠a aparecer un gr√°fico de trabajo pendiente m√°s probable de la versi√≥n de 240 puntos. La Figura 19.3 muestra el progreso de un equipo despu√©s de tres iteraciones. Su progreso ha sido inconsistente. Durante la primera iteraci√≥n, completaron lo que parece ser aproximadamente los treinta puntos de trabajo planificados. Pero al final de la segunda iteraci√≥n, en realidad ten√≠an m√°s trabajo por hacer que cuando comenzaron esa iteraci√≥n. Esto podr√≠a suceder si, por ejemplo, el equipo se diera cuenta de que desarrollar la interfaz de usuario ser√≠a mucho m√°s complicado de lo que inicialmente hab√≠an estimaron y aumentaron sus estimaciones para todas las historias de interfaz de usuario restantes.","service":"user-service"}
{"level":"info","message":"Como alternativa, el gr√°fico de trabajo pendiente puede mostrar un trabajo pendiente porque se ha agregado trabajo a la versi√≥n. Piense en esto como el equivalente a un velero que avanza a 8 millas por hora pero navega directamente hacia una corriente que corre a 12 millas por hora en la direcci√≥n opuesta. En el caso del velero, termina m√°s lejos de su objetivo inicial. Sin embargo, en el caso del proyecto de software, el trabajo adicional puede ser el resultado de que el equipo haya aprendido algo que los dirija hacia una versi√≥n m√°s valiosa. Para ver c√≥mo funciona esto, suponga que en la segunda iteraci√≥n el equipo nuevamente complet√≥ los treinta puntos planificados de pero que el propietario del producto identific√≥ otros cuarenta puntos de trabajo que se necesitan en la versi√≥n. En este caso, el resultado neto es que hay m√°s trabajo por hacer al final de la iteraci√≥n que cuando comenz√≥. Debido a que un gr√°fico de trabajo pendiente refleja el progreso neto del equipo, el gr√°fico se dibuja para reflejar este aumento. Quiz√°s se pregunte por qu√© dibujar√≠amos el gr√°fico de esta manera. Lo dibujamos de esta manera porque permite que un solo gr√°fico de trabajo pendiente muestre de forma clara y sencilla los dos n√∫meros m√°s importantes que podemos usar para ver si un proyecto va por buen camino: cu√°nto trabajo queda y la tasa de progreso del equipo neta de todos los cambios en el alcance del proyecto. Imagina que est√°s en el equipo cuyo progreso se muestra en la figura 19.3. Al final de la tercera iteraci√≥n, se le pregunta si el lanzamiento ser√°","service":"user-service"}
{"level":"info","message":"termin√≥ dentro de las ocho iteraciones planificadas. Y si no es as√≠, se le pide que proporcione una mejor estimaci√≥n de cu√°ndo estar√° terminado. Puede responder a esta pregunta simplemente mirando el gr√°fico de trabajo pendiente en la Figura 19.3. Simplemente alinee un borde recto entre los 240 puntos en el eje vertical y el n√∫mero de puntos que quedan actualmente en el proyecto. Donde el borde recto se cruza con el eje horizontal es cuando puede esperar que termine el proyecto. Una mirada casual a la figura 19.3 le dice lo suficiente como para saber que no terminar√° en las ocho iteraciones planificadas. Un gr√°fico de barras de avance de lanzamiento En un nivel, el gr√°fico de avance de lanzamiento de la figura 19.3 es excelente. Es f√°cil de entender y se puede explicar r√°pidamente a cualquier miembro de la organizaci√≥n. Un gr√°fico de quemado de versiones como este es muy informativo y nos dice cu√°ndo es probable que finalice el proyecto si todos los factores que lo afectan permanecen sin cambios. Sin embargo, a veces es √∫til dibujar el gr√°fico de trabajo pendiente de lanzamiento para que pueda ver f√°cilmente la velocidad del equipo y los cambios de alcance por separado. Para hacer esto, dibuje un gr√°fico de barras de avance de lanzamiento como el que se muestra en la Figura 19.4.","service":"user-service"}
{"level":"info","message":"Cada barra de la figura 19.4 muestra la cantidad de trabajo en una versi√≥n al comienzo de una iteraci√≥n. Este tipo de gr√°fico de evoluci√≥n utiliza barras en lugar de l√≠neas para ayudar a distinguir las regiones por encima y por debajo del eje horizontal en 0. La parte inferior de la barra se baja cada vez que se agrega trabajo al proyecto. La parte inferior se mueve hacia arriba cada vez que se elimina trabajo de una iteraci√≥n. Si la parte inferior est√° debajo del eje horizontal en 0, significa que se ha agregado trabajo general al lanzamiento. Un ejemplo es la mejor manera de ver c√≥mo funciona esto. En la Figura 19.4, se planea un lanzamiento para incluir 240 puntos de trabajo. Al comienzo de la primera iteraci√≥n, el gr√°fico de trabajo pendiente se dibuja con una sola barra que se extiende de 0 a 240. Como antes, el equipo espera una velocidad promedio de treinta y espera terminar despu√©s de ocho iteraciones. Durante la primera iteraci√≥n, el equipo alcanza la velocidad esperada y la parte superior de la segunda barra se dibuja en 210. Sin embargo, el propietario del producto se dio cuenta de que la versi√≥n necesita m√°s funciones de las que se pensaba originalmente. Se identifican cincuenta puntos de trabajo adicionales que ser√°n necesarios en esta versi√≥n. Esto hace que la barra de la segunda iteraci√≥n se extienda por debajo de la l√≠nea 0. La segunda barra se dibuja en un rango de -50 a 210. En otras palabras, el lanzamiento ahora necesita 260 puntos de trabajo, que es m√°s que cuando comenz√≥. Al final de la segunda iteraci√≥n, la figura 19.4 revela tres hechos interesantes.1. La velocidad del equipo es la esperada. Esto se puede ver en el avance en la parte superior de las dos primeras barras.2. Se ha a√±adido una gran cantidad de trabajo. Puede ver esto desde la ca√≠da en la parte inferior de la segunda barra. Presumiblemente, se ha agregado trabajo porque conducir√° a una versi√≥n m√°s valiosa. Sin embargo, puede valer la pena prestar atenci√≥n a la tasa de cambio del alcance de este proyecto; hasta ahora, se ha agregado m√°s de lo que se ha completado. Esto puede no ser algo de qu√© preocuparse; depender√° de si es probable que la tendencia contin√∫e y qu√© tan importante sea la fecha de lanzamiento objetivo inicial.3. La cantidad total de trabajo restante en la versi√≥n es mayor que cuando se inici√≥ el proyecto. Esto es evidente porque la altura total de la segunda barra es mayor que la de la primera. Claramente, hay mucho m√°s poder expresivo al dibujar un gr√°fico de avance de esta manera. El inconveniente es que el significado del gr√°fico no es inmediatamente claro. Veamos la segunda y la tercera iteraci√≥n del proyecto en la figura 19.4. Durante la segunda iteraci√≥n, el equipo vuelve a alcanzar la velocidad objetivo. El propietario del producto volvi√≥ a agregar trabajo, pero al menos se agreg√≥ menos que durante la iteraci√≥n anterior. Pero, ¬øqu√© sucedi√≥ durante la tercera iteraci√≥n? Durante esta iteraci√≥n, la velocidad se ha reducido a solo veinte. Esto puede ser el resultado de subestimar algunos","service":"user-service"}
{"level":"info","message":"historias realizadas en esa iteraci√≥n, un miembro del equipo enfermo o de vacaciones, o una estimaci√≥n de parte del trabajo restante. Es posible que el equipo haya completado los treinta puntos de trabajo planificados, pero que haya aumentado las estimaciones en algunas historias restantes, de modo que el progreso neto sea veinte en lugar de treinta. Sin embargo, lo m√°s interesante de la tercera iteraci√≥n se muestra en la parte inferior de la cuarta barra. Durante esta iteraci√≥n, el propietario del producto elimin√≥ funciones del lanzamiento. Cuando se lance, este proyecto seguir√° involucrando m√°s puntos de historia de los planeados inicialmente. Podemos decir esto porque la barra a√∫n se extiende por debajo del eje x en 0. Sin embargo, en este punto el proyecto contiene menos puntos planificados que al comienzo de la iteraci√≥n anterior. No es importante si las funciones eliminadas eran las del plan de lanzamiento original o las que el propietario del producto agreg√≥ en iteraciones anteriores. La priorizaci√≥n del trabajo a√∫n depende del propietario del producto, quien puede agregar o eliminar funciones seg√∫n lo desee. El efecto neto se muestra en la parte inferior de la barra de trabajo pendiente. Hay cuatro reglas simples que se deben tener en cuenta al dibujar este tipo de gr√°fico de trabajo pendiente.‚óÜ Cada vez que se completa el trabajo, se baja la parte superior.‚óÜ Cuando se vuelve a estimar el trabajo, la parte superior se mueve hacia arriba o hacia abajo. ‚óÜ Cuando se agrega trabajo nuevo, la parte inferior se baja. ‚óÜ Cuando se elimina trabajo, la parte inferior se eleva. Echemos un vistazo a un gr√°fico de barras de avance de lanzamiento de un proyecto real, como se muestra en la Figura 19.5. Lo que vemos aqu√≠ es que el equipo hizo un buen progreso durante las dos primeras iteraciones. El propietario del producto agreg√≥ una peque√±a cantidad de trabajo antes del inicio de la segunda iteraci√≥n, lo cual es bastante com√∫n en muchos equipos. Durante la tercera iteraci√≥n, el equipo descubri√≥ que algunas de sus historias de usuario estaban subestimadas y volvieron a estimar parte del trabajo restante. Esto condujo al aumento en la parte superior de la cuarta barra de la figura 19.5. Antes del inicio de la cuarta iteraci√≥n, el propietario del producto elimin√≥ trabajo del plan de lanzamiento. Esto dio como resultado que el fondo se moviera hacia arriba, incluso por encima de la l√≠nea 0. Durante esa iteraci√≥n, el equipo hizo un buen progreso. A partir de ese momento, el plan de lanzamiento se mantuvo igual y se logr√≥ un progreso constante hasta el final.","service":"user-service"}
{"level":"info","message":"Una advertencia sobre el uso del gr√°fico de barras Burndown de lanzamiento Aunque encuentro que el gr√°fico de barras Burndown de lanzamiento es m√°s expresivo (y, por lo tanto, a menudo m√°s √∫til) que el gr√°fico de trabajo Burndown tradicional, tengo un par de advertencias sobre su uso. En primer lugar, el gr√°fico de barras de avance es m√°s dif√≠cil de entender, por lo que casi siempre empiezo un nuevo equipo con el gr√°fico de l√≠neas de avance m√°s simple. En segundo lugar, el gr√°fico de barras de avance es para uso exclusivo en organizaciones lo suficientemente maduras como para no discutir si algo pertenece por encima o por debajo de la l√≠nea. A la primera se√±al de un argumento de esta naturaleza, les digo a todos los involucrados que no podemos usar el gr√°fico de barras quemadas y vamos a volver al gr√°fico de l√≠neas.","service":"user-service"}
{"level":"info","message":"Jeff DeLuca (2002) sugiri√≥ otra forma √∫til de visualizar c√≥mo le est√° yendo a un equipo para completar la funcionalidad planificada de una versi√≥n. La figura 19.6 muestra una variaci√≥n de lo que DeLuca llama un gr√°fico de estacionamiento. Un gr√°fico de estacionamiento contiene un cuadro rectangular grande para cada tema (o grupo de historias de usuario) en un lanzamiento. Cada cuadro est√° anotado con el nombre del tema, la cantidad de historias en ese tema, la cantidad de puntos de historia o d√≠as ideales para esas historias, y el porcentaje de los puntos de la historia que est√°n completos.","service":"user-service"}
{"level":"info","message":"En el cuadro Datos demogr√°ficos de nadadores de la Figura 19.6, puede ver que este tema comprende ocho historias, que se estiman en un total de treinta y seis puntos de historia. Dieciocho de estos puntos de la historia est√°n terminados, porque sabemos que el 50 % de la caracter√≠stica est√° completa. No podemos decir cu√°ntas de las historias de usuario espec√≠ficas est√°n hechas. Las casillas individuales en un gr√°fico de estacionamiento pueden incluso estar coloreadas para indicar si un tema est√° terminado o seg√∫n lo programado, necesita atenci√≥n o est√° significativamente atrasado. Un gr√°fico de estacionamiento es un m√©todo poderoso para comprimir una gran cantidad de informaci√≥n en un espacio peque√±o. . En muchos casos, todos los temas de un lanzamiento se pueden resumir en una p√°gina usando un diagrama de estacionamiento.SummaryVelocity mide la cantidad de trabajo completado por un equipo en cada iteraci√≥n. La velocidad debe calcularse usando una regla de todo o nada. Si una historia est√° terminada, el equipo cuenta su estimaci√≥n completa al contar la velocidad. Si una historia se completa parcialmente durante una iteraci√≥n, no se cuenta en absoluto al determinar la velocidad. Un gr√°fico de avance de la versi√≥n muestra la cantidad de puntos de historia o d√≠as ideales restantes en el proyecto al comienzo de cada iteraci√≥n. El burndown de un equipo nunca es perfectamente fluido. Variar√° debido a estimaciones inexactas, estimaciones modificadas y cambios en el alcance, por ejemplo. Un gr√°fico de quemado puede incluso mostrar un quemado durante una iteraci√≥n. Esto significa que aunque el equipo probablemente complet√≥ parte del trabajo, se dieron cuenta de que el trabajo restante estaba subestimado o aumentaron el alcance del proyecto. Una clave para interpretar un gr√°fico de quemado de lanzamiento es comprender que muestra el progreso neto del equipo, es decir, su progreso menos cualquier trabajo agregado al lanzamiento.","service":"user-service"}
{"level":"info","message":"Un gr√°fico de barras de trabajo pendiente de la versi√≥n ofrece una variaci√≥n, a veces √∫til, del gr√°fico de trabajo pendiente de la versi√≥n est√°ndar. Lo hace separando el progreso de un equipo del trabajo planificado y los cambios en el alcance de la versi√≥n. Los cambios de alcance se muestran dejando caer la barra debajo del eje horizontal. Este tipo de gr√°fico es m√°s expresivo que un gr√°fico de trabajo pendiente est√°ndar, pero debe usarse con cuidado, ya que puede causar discusiones en algunas organizaciones acerca de si un cambio afecta el tope o la parte inferior de una barra en el gr√°fico. Un gr√°fico de estacionamiento es √∫til para presentar una visi√≥n de alto nivel del progreso de un equipo hacia la implementaci√≥n de varios temas planificados en un proyecto. Preguntas de discusi√≥n1. Si no est√° utilizando un gr√°fico de trabajo pendiente de lanzamiento en su proyecto actual, ¬øcu√°l ser√≠a el resultado de producir uno al final de cada iteraci√≥n?2. ¬øCu√°l de las t√©cnicas de monitoreo y reporte del progreso descritas en este cap√≠tulo ser√≠a m√°s beneficiosa para su proyecto actual?3. ¬øQu√© partes interesadas en su proyecto no est√°n recibiendo informaci√≥n sobre el proyecto que les resultar√≠a √∫til?","service":"user-service"}
{"level":"info","message":"‚ÄúLos hechos son mejores que los sue√±os.‚Äù‚ÄîWinston Churchill Adem√°s de seguir el progreso hacia el objetivo de alto nivel de un lanzamiento, siempre es √∫til seguir el progreso del equipo de desarrollo para completar el trabajo de una sola iteraci√≥n. En este cap√≠tulo, veremos las dos herramientas para el seguimiento de iteraciones: el tablero de tareas y los gr√°ficos de evoluci√≥n de iteraciones. cu√°nto trabajo queda. Es importante que el tablero de tareas (o algo equivalente) permita al equipo una gran flexibilidad en la forma en que organizan su trabajo. Las personas en un agileteam no se registran (ni se les asigna) trabajo hasta que est√°n listos para trabajar en √©l. Esto significa que, excepto el √∫ltimo d√≠a o dos de una iteraci√≥n, generalmente hay muchas tareas para las que nadie se ha registrado todav√≠a. . Un panel de tareas hace que estas tareas sean muy visibles para que todos puedan ver en qu√© tareas se est√° trabajando y en cu√°les est√°n disponibles para registrarse. En la figura 20.1 se muestra un tablero de tareas de ejemplo. El tablero de tareas suele ser una pizarra blanca grande o, mejor a√∫n, una pizarra de corcho. Tapedor clavado en el tablero de tareas son las tarjetas de historia, as√≠ como las tarjetas de tareas que se escribieron durante la planificaci√≥n de la iteraci√≥n. El tablero de tareas incluye una fila para cada","service":"user-service"}
{"level":"info","message":"historia o caracter√≠stica en la que se trabajar√° durante la iteraci√≥n. En la figura 20.1, la primera fila contiene informaci√≥n sobre la historia de cinco puntos. La primera columna del tablero de tareas contiene la tarjeta de historia. Debido a que la tarjeta de historia muestra la estimaci√≥n de puntos asignada a la historia, cualquiera que mire el tablero de tareas puede determinar r√°pidamente la cantidad de puntos de historia para cada historia incluida en la iteraci√≥n.","service":"user-service"}
{"level":"info","message":"La segunda columna contiene todas las tarjetas de tareas que el equipo identific√≥ como necesarias para implementar la historia o funci√≥n. Cada una de estas tarjetas muestra la estimaci√≥n del trabajo restante para completar la tarea. La tercera columna indica si las pruebas de aceptaci√≥n est√°n listas para la historia. Soy un gran admirador del desarrollo basado en pruebas (Beck 2002), tanto a nivel de c√≥digo, donde animo a los desarrolladores a escribir una prueba unitaria fallida antes de escribir el c√≥digo, como a nivel de caracter√≠sticas, donde animo a los equipos a dise√±ar pruebas de aceptaci√≥n de alto nivel. antes de que comiencen a codificar. Si las condiciones de satisfacci√≥n de cada historia se identificaron como parte de la planificaci√≥n de la iteraci√≥n (como se aconseja en el Cap√≠tulo 14, \"Planificaci√≥n de la iteraci√≥n\"), esto es f√°cil, ya que las condiciones de satisfacci√≥n son esencialmente pruebas de aceptaci√≥n de alto nivel de una historia de usuario. Este tipo de especificaci√≥n por ejemplo es muy beneficioso para los programadores, ya que pueden hacer referencia a ejemplos espec√≠ficos de c√≥mo se espera que funcione cada funci√≥n y regla comercial. Pruebas para una historia. Adem√°s, animo a los equipos a no mover muchas tarjetas a la cuarta columna, En proceso, a menos que se especifiquen las pruebas. Es posible que no necesite una columna de Pruebas especificadas, pero es un recordatorio √∫til y visible para un equipo que est√° tratando de acostumbrarse a especificar pruebas de aceptaci√≥n antes de codificar una funci√≥n.","service":"user-service"}
{"level":"info","message":"La columna En proceso contiene tarjetas en las que se han registrado los desarrolladores. Por lo general, un desarrollador toma una tarjeta de la columna Tareas pendientes, le pone sus iniciales y la mueve a la columna En proceso. Esto sucede a lo largo del d√≠a mientras los desarrolladores terminan el trabajo y seleccionan en qu√© trabajar√°n a continuaci√≥n. Nadie debe registrarse para obtener m√°s de una o dos tarjetas a la vez. Esto ayuda a mantener un flujo constante de trabajo a lo largo del proceso y reduce el costo del cambio de contexto entre m√∫ltiples tareas. Como un recordatorio constante de esto, cuando tengo un equipo que configura su tablero de tareas, hago que la columna En proceso tenga el ancho de una tarjeta. peg√≥ cuatro all√≠. La columna Para verificar es otra que puede necesitar o no, pero que encuentro √∫til, especialmente cuando se trabaja con un equipo que est√° aprendiendo a volverse √°gil. Idealmente, se piensa en cada actividad de prueba y se escribe una tarjeta de tarea durante la planificaci√≥n de la iteraci√≥n. Si es as√≠, cuando finaliza una tarjeta de tarea de programaci√≥n (\"Codificar la interfaz de usuario de boojum\"), se elimina del tablero de tareas (o se mueve a una columna final llamada Listo). En ese momento, alguien puede registrarse para obtener la tarjeta de prueba asociada (\"Probar la interfaz de usuario de boojum\"). Sin embargo, encuentro que hay momentos en que un desarrollador considera que una tarjeta de tarea est√° lista, pero le gustar√≠a tener un par de ojos nuevos para echar un vistazo r√°pido y de verificaci√≥n. En esos casos, y cuando no hay una tarea de prueba asociada, la tarjeta de tareas se coloca en la columna Para verificar. Se alienta a los desarrolladores a cambiar la estimaci√≥n en cualquier tarjeta de tareas del tablero en cualquier momento. Por ejemplo, si empiezo a trabajar en una tarjeta y me doy cuenta de que la estimaci√≥n de dos horas es incorrecta, ir√© al tablero de tareas, tachar√© los dos y los reemplazar√© quiz√°s con un seis. Si creo que la estimaci√≥n est√° a√∫n m√°s lejos, puedo romper esa tarjeta de tareas y reemplazarla con dos o tres tarjetas de tareas, cada una con su propia estimaci√≥n. La columna final en el tablero de tareas es simplemente una suma de las horas de trabajo restantes en la caracter√≠stica o historia. Normalmente sumo las horas de cada fila todas las ma√±anas. Utilizo estos totales para dibujar un gr√°fico de evoluci√≥n de la iteraci√≥n, que es la segunda herramienta para seguir el progreso de una iteraci√≥n.","service":"user-service"}
{"level":"info","message":"Seguimiento de errores en un tablero de tareas Muchos equipos, cuando comienzan la transici√≥n a un proceso de desarrollo √°gil, se enfrentan a una gran cantidad de errores heredados. No solo suele haber una gran acumulaci√≥n de errores que se corregir√°n \"alg√∫n d√≠a\", sino que tambi√©n los errores contin√∫an llegando a un ritmo r√°pido. Un desaf√≠o com√∫n para los equipos que se mueven hacia un proceso √°gil es c√≥mo lidiar con estos errores. El tablero de tareas proporciona un mecanismo conveniente para comenzar a corregir este problema. Como ejemplo de c√≥mo puede ayudar el tablero de tareas, suponga que el propietario del producto incluye \"Corregir diez errores 'altos'\" en la nueva iteraci√≥n. El propietario del producto selecciona los diez errores y los desarrolladores escriben una tarjeta de tarea (con una estimaci√≥n) para cada uno. Las tarjetas se pegan en la columna Tareas pendientes de una fila en el tablero de tareas. A medida que avanza la iteraci√≥n, los desarrolladores trabajan en los diez errores de la misma manera que trabajan en otras tarjetas de tareas. Ahora supongamos que un usuario encuentra un nuevo error a la mitad de la iteraci√≥n. Si el nuevo error se considera una prioridad m√°s alta que uno o m√°s errores restantes en la columna Tareas pendientes, el propietario del producto puede intercambiar una cantidad equivalente de trabajo de correcci√≥n de errores a favor de corregir el nuevo error. Este enfoque permite que un equipo corrija los defectos heredados en cualquier momento. tarifa que elija el propietario del producto. El equipo podr√≠a asignar 40 horas a la correcci√≥n de errores o podr√≠a asignar 100 horas. El propietario del producto selecciona la cantidad de una iteraci√≥n que se debe dirigir a la correcci√≥n de errores en lugar del desarrollo de nuevas funciones. Luego, el propietario del producto y el equipo seleccionan en colaboraci√≥n qu√© errores encajan dentro de ese per√≠odo de tiempo.","service":"user-service"}
{"level":"info","message":"Dibujar un gr√°fico de trabajo pendiente de lanzamiento es una excelente manera de ver si un proyecto se est√° desviando o no. Dependiendo de la duraci√≥n de sus iteraciones, puede ser √∫til crear un gr√°fico de evoluci√≥n de iteraciones. Si est√° utilizando iteraciones de una semana, probablemente no sea necesario. Para cuando una tendencia sea visible en un gr√°fico de trabajo pendiente de iteraci√≥n, habr√° terminado una iteraci√≥n de una semana. Sin embargo, he descubierto que los gr√°ficos de avance de iteraci√≥n son extremadamente √∫tiles con duraciones de iteraci√≥n de dos semanas o m√°s. El gr√°fico de trabajo pendiente de iteraci√≥n traza las horas restantes por d√≠a, como se muestra en la Figura 20.2. Para crear un gr√°fico de trabajo pendiente de iteraci√≥n, simplemente sume todas las horas en su tablero de tareas una vez al d√≠a y gr√°belo en el gr√°fico. Si el tablero de tareas del equipo est√° dibujado en una pizarra, generalmente dibujo el resumen de iteraci√≥n a mano en un lado del tablero de tareas. Si el tablero de tareas est√° en un panel de corcho, pego con tachuelas una hoja de papel grande al panel de corcho y dibujo el diagrama de trabajo pendiente en √©l.","service":"user-service"}
{"level":"info","message":"En el cap√≠tulo anterior, se introdujo la analog√≠a de un proyecto como un velero para se√±alar que el progreso de un velero no siempre es f√°cil de medir. Un velero que naveg√≥ durante ocho horas ayer y luego ancl√≥ puede o no estar ocho horas m√°s cerca de su destino. El viento y la corriente pueden haber empujado al velero fuera de lo que se cre√≠a que era su rumbo. El barco puede estar m√°s cerca o m√°s lejos de su destino. Cuando este es el caso, lo m√°s √∫til que puede hacer la tripulaci√≥n es evaluar d√≥nde se encuentran en relaci√≥n con el destino. Medir la distancia recorrida o el tiempo empleado en viajar no es √∫til si no estamos seguros de que todo el progreso fue en la direcci√≥n correcta. En un proyecto, es mucho m√°s √∫til saber cu√°nto queda por hacer que cu√°nto se ha hecho. Adem√°s, rastrear el esfuerzo realizado y compararlo con el esfuerzo estimado puede llevar a una ‚Äúaprensi√≥n por la evaluaci√≥n‚Äù (Sanders 1984). Cuando los estimadores son aprensivos acerca de proporcionar una estimaci√≥n, el instinto familiar de \"lucha o huida\" entra en acci√≥n, y los estimadores conf√≠an m√°s en el instinto que en el pensamiento anal√≠tico (J√∏rgensen 2004). El seguimiento del esfuerzo realizado para mejorar la precisi√≥n de la estimaci√≥n es una l√≠nea muy fina. Puede funcionar (Lederer y Prasad 1998; Weinberg y Schulman 1974). Sin embargo, el director del proyecto o quienquiera que est√© haciendo el seguimiento debe ser muy","service":"user-service"}
{"level":"info","message":"tenga cuidado de evitar ejercer una presi√≥n de evaluaci√≥n significativa sobre los estimadores, ya que hacerlo podr√≠a resultar en estimaciones que son peores en lugar de mejores. Adem√°s, tenga en cuenta que la variabilidad es parte de cada estimaci√≥n. No importa cu√°nto esfuerzo se ponga en mejorar las estimaciones, un equipo nunca podr√° estimar perfectamente. La evidencia de esto no est√° m√°s lejos que su viaje matutino al trabajo. Hay una cantidad inherente de variabilidad en su viaje, independientemente de c√≥mo viaje, qu√© tan lejos debe ir y d√≥nde vive. Si conduce al trabajo, ninguna habilidad de conducci√≥n eliminar√° esta variabilidad. Velocidad individual Algunos equipos se refieren a la velocidad individual como el n√∫mero de puntos de historia o d√≠as ideales completados por un miembro individual del equipo. No realice un seguimiento de la velocidad individual. El seguimiento de la velocidad individual conduce a un comportamiento que va en contra del √©xito del proyecto. Supongamos que se ha anunciado que la velocidad individual se medir√° y rastrear√° de iteraci√≥n en iteraci√≥n. ¬øC√≥mo crees que responder√°n los individuos? Si me veo obligado a elegir entre terminar una historia por mi cuenta o ayudar a alguien m√°s, ¬øqu√© incentivo me da medir la velocidad individual? A los individuos se les debe dar todos los incentivos posibles para trabajar en equipo. Si el rendimiento del equipo aumenta al ayudar a alguien m√°s, eso es lo que debo hacer. La velocidad del equipo importa; la velocidad individual no. Ni siquiera es una m√©trica de inter√©s pasajero. Como argumento adicional contra la medici√≥n de la velocidad individual, ni siquiera deber√≠a poder calcularla. La mayor√≠a de las historias de usuario deben escribirse de tal manera que sea necesario que m√°s de una persona trabaje en ellas, como un dise√±ador de interfaz de usuario, un programador, un ingeniero de bases de datos y un probador. Si la mayor√≠a de sus historias pueden ser completadas por una sola persona, debe reconsiderar c√≥mo se escriben sus historias. Normalmente, esto significa que deben escribirse en un nivel m√°s alto para que el trabajo de varias personas se incluya en cada una. Resumen suele ser una pizarra blanca, un tablero de corcho o simplemente un espacio designado en una pared‚Äîayuda a un equipo a organizar y visualizar su trabajo. Las columnas de un panel de tareas est√°n etiquetadas y los miembros del equipo mueven las tarjetas de tareas a trav√©s de las columnas a medida que avanza el trabajo. Un gr√°fico de trabajo pendiente de iteraci√≥n es similar a un gr√°fico de trabajo pendiente de versi√≥n, pero se utiliza para realizar un seguimiento √∫nicamente del trabajo de la iteraci√≥n actual. Grafica el n√∫mero de","service":"user-service"}
{"level":"info","message":"las horas restantes en el eje vertical y los d√≠as de la iteraci√≥n en el eje horizontal. Los equipos deben ser reacios a realizar un seguimiento de las horas reales dedicadas a las tareas para mejorar la estimaci√≥n. Los riesgos y el esfuerzo para hacerlo generalmente superan los beneficios. Los equipos no deben calcular ni rastrear la velocidad individual. Preguntas de discusi√≥n 1. En su organizaci√≥n, ¬ølos beneficios de realizar un seguimiento del esfuerzo real invertido en las tareas y compararlos con las estimaciones superan los riesgos y costos de hacerlo?2. Si su equipo de proyecto actual no est√° ubicado en el mismo lugar, ¬øqu√© puede hacer para lograr algunos de los mismos beneficios que experimentan los equipos ubicados en el mismo lugar cuando usan un tablero de tareas?","service":"user-service"}
{"level":"info","message":"‚ÄúMientras m√°s elaborados sean nuestros medios de comunicaci√≥n, menos nos comunicaremos‚Äù.‚ÄîJoseph PriestleyEn este cap√≠tulo, veremos algunas formas espec√≠ficas de comunicar acerca de los planes. Sin embargo, m√°s importante que lo que comunicamos espec√≠ficamente es c√≥mo abordamos el trabajo de comunicar. sobre estimaciones y planes. Queremos que toda la comunicaci√≥n, pero especialmente la comunicaci√≥n sobre estimaciones y planes, sea frecuente, honesta y bidireccional. La comunicaci√≥n frecuente sobre los planes es importante debido a la frecuencia con la que se actualiza un plan √°gil. Por ejemplo, incluso si un equipo realiza una planificaci√≥n anticipada continua (como se describe en el Cap√≠tulo 18, ‚ÄúPlanificaci√≥n del proyecto de varios equipos‚Äù), su plan de lanzamiento puede mostrar solo lo que se desarrollar√° en las pr√≥ximas iteraciones. Las historias de usuario que se desarrollar√°n a lo largo del resto del lanzamiento pueden incluirse en el plan de lanzamiento, pero no se secuenciar√°n m√°s all√° del horizonte del plan de anticipaci√≥n y pueden enumerarse solo como temas generales. No podemos (y no queremos) elabore un plan el primer d√≠a y d√©jelo solo durante tres a seis meses. Los planes se actualizan a lo largo del proyecto y estas actualizaciones deben comunicarse. De lo contrario, se ignoran los valiosos circuitos de retroalimentaci√≥n que pueden mejorar la conveniencia y el √©xito del producto y la utilidad del plan. Durante el breve espacio de tiempo de una iteraci√≥n, es importante que los miembros del equipo vean las variaciones diarias en el gr√°fico de trabajo pendiente de la iteraci√≥n para que puedan realizar ajustes para completar todo el trabajo de la iteraci√≥n. Encima","service":"user-service"}
{"level":"info","message":"En el per√≠odo m√°s largo de un lanzamiento, las partes interesadas y los participantes del proyecto necesitan informaci√≥n sobre el progreso y las revisiones del plan de lanzamiento. La comunicaci√≥n honesta es importante si el equipo de desarrollo y el equipo del cliente deben confiar el uno en el otro. Si los desarrolladores se enteran, por ejemplo, de que el propietario del producto les ha estado diciendo fechas artificiales, ya no confiar√°n en ella. De manera similar, si los desarrolladores dan estimaciones que el propietario del producto sabe que no son realistas, la confianza tambi√©n desaparecer√° aqu√≠. Hace poco trabaj√© con un equipo que me dijo que sus ejecutivos piden m√°s trabajo del que razonablemente se puede esperar porque \"De esa manera, si obtienen el 80%, est√°n felices\". La teor√≠a era que los ejecutivos obtendr√≠an el 80% de lo que pidieran, por lo que sab√≠an que deb√≠an pedir m√°s de lo necesario. Sin confianza, es dif√≠cil tener una comunicaci√≥n honesta, por lo que la p√©rdida de confianza debe tomarse muy en serio. Si un desarrollador sabe que una tarea determinada llevar√° mucho m√°s tiempo del esperado actualmente, debe sentirse seguro compartiendo ese conocimiento con el resto del equipo, incluido su gerente. Si se desalienta este tipo de comunicaci√≥n honesta, problemas como este permanecer√°n ocultos por m√°s tiempo. Es importante que la comunicaci√≥n sobre la estimaci√≥n y la planificaci√≥n sea bidireccional, porque queremos fomentar el di√°logo y la discusi√≥n sobre el plan para asegurarnos de tener siempre lo mejor posible. plan (dado el conocimiento actual) para entregar valor a la organizaci√≥n. Queremos iterar y refinar los planes en funci√≥n de los comentarios y nuevos conocimientos. Debido a esto, necesitamos di√°logo sobre planes, no presentaciones unidireccionales. Finalmente, asuma la responsabilidad de asegurarse de que todos los destinatarios entiendan el mensaje que est√° transmitiendo. No solo necesitan escuchar el mensaje, sino tambi√©n entenderlo. Si usted es un gerente de proyecto que transmite el mensaje de que el proyecto est√° atrasado, h√°galo de tal manera que nadie pueda dejar de entenderlo. Esta es una de las razones por las que los equipos √°giles prefieren los gr√°ficos grandes y visibles como una forma de comunicaci√≥n: con solo un pu√±ado de gr√°ficos grandes y visibles colgando en el espacio de trabajo del equipo, es probable que todos en el equipo del proyecto entiendan la importancia de cada uno. Por el contrario, si en la p√°gina treinta y dos de un informe de estado semanal de cuarenta p√°ginas se muestra ‚Äúclaramente‚Äù la noticia de que hay un proyecto detr√°s, es muy probable que nadie lo sepa. Con estos objetivos en mente, el resto de este cap√≠tulo proporciona orientaci√≥n espec√≠fica y consejos sobre c√≥mo comunicar estimaciones y planes.","service":"user-service"}
{"level":"info","message":"Cuando se le pregunta sobre el cronograma de un proyecto, es tentador sumar la cantidad de puntos de la historia que se entregar√°n, dividir por una estimaci√≥n de la velocidad y decir algo como \"Enviaremos el 14 de junio, que son 7.2 iteraciones a partir de ahora\". Esto es err√≥neo porque da la impresi√≥n de que el conocimiento a partir del cual construimos el plan es lo suficientemente preciso como para sustentar este tipo de estimaci√≥n. Cuando sea posible, incluya con su comunicaci√≥n de una fecha objetivo su grado de confianza en la estimaci√≥n, un rango de fechas posibles o ambos. Por ejemplo, puede decir:‚óÜ Estoy 90% seguro de que completaremos la funcionalidad planificada para el 31 de julio.‚óÜ Seg√∫n nuestras suposiciones sobre el tama√±o del proyecto y el desempe√±o del equipo, el proyecto tomar√° de tres a cuatro meses. Como ejemplo de esto tipo de comunicaci√≥n, Ron Jeffries (2004) de www.XProgramming.com ha sugerido decir algo como esto: En este momento, este parece ser un proyecto de 200 puntos. Basado en nuestro desempe√±o en otros proyectos (o una suposici√≥n aleatoria), con N programadores en √©l, y su √≠ntima participaci√≥n en el proyecto, un proyecto de este tama√±o tomar√° entre cuatro y seis meses. Sin embargo, le enviaremos el software cada dos semanas y marcaremos estas historias destacadas para su satisfacci√≥n. La buena noticia es que si no est√° satisfecho, puede parar. La mejor noticia es que si est√° satisfecho antes de que todas las funciones est√©n listas, puede detenerse. La mala noticia es que necesita trabajar con nosotros para dejar en claro lo que significa su satisfacci√≥n. La mejor noticia es que siempre que haya suficientes funciones funcionando para que el programa sea √∫til, puede pedirnos que lo preparemos para su implementaci√≥n, y lo haremos. A medida que avanzamos, todos veremos qu√© tan r√°pido estamos progresando y nuestra estimaci√≥n del tiempo necesario mejorar√°. En todos los casos, ver√° lo que est√° pasando, ver√° pruebas concretas de software √∫til que ejecuta las pruebas que especifique y sabr√° todo tan pronto como yo lo sepa. diagrama de Gantt familiar, como se muestra en la figura 21.1. Los diagramas de Gantt se han ganado una mala reputaci√≥n, pero esto se debe a que a menudo se usan para predecir, programar y coordinar tareas. A pesar de estos desaf√≠os en su uso, los diagramas de Gantt pueden ser excelentes herramientas para mostrar la asignaci√≥n de caracter√≠sticas a las iteraciones. Hay un par de diferencias menores pero clave entre lo que se muestra en la Figura 21.1 y un diagrama de Gantt m√°s tradicional. Primero, la figura 21.1 se detiene en el nivel de funciones y no descompone cada historia de usuario en sus tareas constituyentes. Lo que se muestra entonces es una estructura de desglose de funciones en lugar de un trabajo.","service":"user-service"}
{"level":"info","message":"estructura de desglose del proyecto. Debido a que es la finalizaci√≥n de las funciones, en lugar de la finalizaci√≥n de las tareas que se suman a una funci√≥n, lo que agrega valor a un producto, el diagrama de Gantt se dibuja mostrando las funciones. En segundo lugar, se muestra cada funci√≥n para tomar la longitud total de la iteraci√≥n. en el que est√° programado. Una caracter√≠stica se puede realizar a la mitad de una iteraci√≥n, pero no se pone a disposici√≥n de la organizaci√≥n hasta el final de la iteraci√≥n, por lo que eso es lo que refleja el diagrama de Gantt.","service":"user-service"}
{"level":"info","message":"En tercer lugar, en la Figura 21.1 no se muestran asignaciones de recursos. Debido a que todo el equipo es responsable de la entrega de todas las funciones, no hay ning√∫n beneficio en poner el nombre de Mary al lado de una funci√≥n y el de Vadim al lado de otra. Por supuesto, si est√° produciendo un diagrama de Gantt que muestra el trabajo de varios equipos, es posible que desee indicar la responsabilidad de todo el equipo mediante la asignaci√≥n de funciones (o iteraciones realmente completas) al Equipo 1 o al Equipo 2, y as√≠ sucesivamente. Comunicar el progreso Naturalmente, el lanzamiento Los gr√°ficos de trabajo pendiente del Cap√≠tulo 19, \"Monitoreo del plan de lanzamiento\", son una forma principal de comunicar el progreso. El progreso en un gr√°fico de quemado de lanzamiento es una funci√≥n de la cantidad de trabajo restante y la velocidad del equipo. La forma sencilla de predecir el n√∫mero de iteraciones restantes es tomar el n√∫mero de puntos que quedan por desarrollar, dividirlo por el n√∫mero de iteraciones del equipo.","service":"user-service"}
{"level":"info","message":"velocidad, y luego redondear al siguiente n√∫mero entero. Entonces, si quedan 100 puntos y la velocidad del equipo es 10, podr√≠amos decir que quedan 10 iteraciones. Sin embargo, las medidas de velocidad son imprecisas y esperamos que la velocidad fluct√∫e. Si un equipo ha determinado que su velocidad promedio es diez, no es inconcebible que promedie nueve u once en las pr√≥ximas iteraciones. De hecho, no es inconcebible que la velocidad sea siete o trece en las pr√≥ximas iteraciones. En esos casos, podr√≠an quedar entre ocho y quince iteraciones. Al pronosticar el n√∫mero de iteraciones restantes, generalmente es mejor usar un rango de velocidades probables. Para ver una forma de seleccionar el rango de velocidades, considere la Figura 21.2, que muestra la velocidad de un equipo en sus ocho iteraciones anteriores. La velocidad en la iteraci√≥n m√°s reciente fue diecinueve. Sin embargo, la velocidad promedio en las √∫ltimas ocho iteraciones es diecisiete, y el promedio de las peores tres iteraciones de este equipo es catorce. Cada uno de estos valores dar√° lugar a una expectativa diferente acerca de cu√°ndo se completar√° todo el trabajo planificado actualmente. Esta es la raz√≥n por la que a menudo es mejor usar m√°s de un valor de velocidad y presentar las conclusiones como un rango de resultados probables.","service":"user-service"}
{"level":"info","message":"Al seleccionar un rango de valores de velocidad, normalmente considero hasta las √∫ltimas ocho iteraciones. Muchos equipos permanecen juntos tanto tiempo, pero volver m√°s all√° de ocho iteraciones comienza a parecerme una historia antigua. Si no tiene ocho iteraciones, use lo que tiene. De estas iteraciones anteriores, observo tres valores.1. La velocidad de la iteraci√≥n m√°s reciente2. La velocidad media (media)3. La velocidad promedio (media) de las tres iteraciones m√°s lentas. Estos tres valores presentan una buena imagen de lo que acaba de suceder, un promedio \"a largo plazo\" y el peor de los casos de lo que podr√≠a suceder. Utilizo estos tres valores de velocidad diferentes para pronosticar aproximadamente cu√°nto trabajo m√°s se puede completar en una fecha determinada. Por ejemplo, si nos gustar√≠a lanzar el producto despu√©s de cinco iteraciones m√°s, y la velocidad m√°s reciente del equipo fue 19, podemos predecir que el equipo podr√≠a completar otros 95 puntos. Se pueden hacer matem√°ticas similares con las otras medidas de velocidad. Hacerlo da como resultado un rango de la cantidad probable de trabajo que el equipo completar√°. Usualmente resumo esto como se muestra en la Tabla 21.1.","service":"user-service"}
{"level":"info","message":"Aunque busco tendencias en la velocidad, muchos proyectos tienen muy pocas iteraciones para que las tendencias de velocidad se vuelvan evidentes o relevantes. Si noto lo que parece ser una tendencia hacia una velocidad creciente, me alegro pero no act√∫o en consecuencia. Nunca dibujar√≠a una l√≠nea de tendencia a trav√©s de la figura 21.2, por ejemplo, y predecir√≠a que la velocidad del equipo ser√° veinte en la siguiente iteraci√≥n. De manera similar, si la velocidad pareciera ir hacia abajo, descubrir√≠a y eliminar√≠a la causa de la disminuci√≥n en lugar de planificar que la velocidad contin√∫e cayendo. Calcular los tres valores de velocidad esperados (como se muestra en la Tabla 21.1) permite que el propietario del producto y el equipo predicciones sobre la cantidad de trabajo que se puede completar antes de una fecha de lanzamiento planificada. Con base en la Tabla 21.1, por ejemplo, el propietario de un producto debe sentirse seguro de que se agregar√°n al menos setenta puntos de historia adicionales durante las pr√≥ximas cinco iteraciones. Sin embargo, el propietario del producto probablemente no deber√≠a sacar espacio publicitario en un dirigible sobre nada m√°s all√° de ochenta y cinco puntos m√°s de la historia.","service":"user-service"}
{"level":"info","message":"S√≠, puede no parecer √°gil sugerir escribir un informe de resumen de fin de iteraci√≥n. Pero casi todos los gerentes con los que hablo me preguntan si lo hago. Despu√©s de responder afirmativamente, casi siempre me piden que comparta la plantilla que uso. Tendr√°s que decidir por ti mismo si quieres tomarte el tiempo para hacer esto. Encuentro que puedo completar este documento de resumen en menos de treinta minutos por iteraci√≥n. Tiendo a preferir las iteraciones de dos semanas en la mayor√≠a de los proyectos, lo que significa que invierto como m√°ximo quince minutos por semana en esto. Las siguientes secciones presentan un ejemplo de resumen de iteraci√≥n para el proyecto SwimStats. Tiendo a incluir la mayor parte de esta informaci√≥n para la mayor√≠a de los proyectos, pero es posible que desee eliminar o agregar secciones seg√∫n corresponda.","service":"user-service"}
{"level":"info","message":"El siguiente personal estuvo disponible durante la iteraci√≥n. Tambi√©n se enumeran los d√≠as en que se esperaba que trabajaran y la cantidad de d√≠as que trabajaron.","service":"user-service"}
{"level":"info","message":"D√≠as laborables Debido a que las vacaciones reducen el n√∫mero de d√≠as laborables en una iteraci√≥n, el n√∫mero de d√≠as laborables planificados puede variar en algunas iteraciones. En este ejemplo, Vadim trabaj√≥ dos d√≠as menos de lo planeado. Puede que haya estado enfermo. Por otro lado, Sasha trabaj√≥ un d√≠a m√°s de lo planeado. Tal vez hab√≠a planeado tentativamente un d√≠a de vacaciones que no tom√≥.","service":"user-service"}
{"level":"info","message":"Colorea las filas Las filas de esta tabla suelen estar coloreadas: verde para una compilaci√≥n exitosa y roja para una que fall√≥ por alg√∫n motivo. Tenga en cuenta que la columna de estado informa el n√∫mero de pruebas exitosas solo si todas las pruebas son exitosas. Si alguna prueba falla, todo lo que se muestra es el n√∫mero de pruebas fallidas. Si una prueba falla, no importa cu√°ntas pruebas pasen. Informar que 99 de 100 pruebas pasaron lleva a la tentaci√≥n de pensar que debido a que el 99% de las pruebas pasaron, debemos estar haci√©ndolo bien. Quiero evitar esa tentaci√≥n, as√≠ que informo la cantidad de pruebas que pasaron (si todas lo hicieron) o la cantidad de pruebas que fallaron en caso contrario.","service":"user-service"}
{"level":"info","message":"Queremos que la comunicaci√≥n sobre estimaciones y planes sea frecuente, honesta y bidireccional. Un diagrama de Gantt puede ser una herramienta √∫til para comunicar sobre un plan. Sin embargo, no debe tomarse por debajo del nivel de desglose de caracter√≠sticas, y las caracter√≠sticas en √©l deben mostrarse como en proceso durante toda la duraci√≥n de la iteraci√≥n. Los diagramas de avance son el m√©todo principal. para comunicar sobre el progreso, pero a menudo van acompa√±ados de un gr√°fico que muestra la velocidad del equipo de desarrollo por iteraci√≥n. Es muy √∫til pensar en la velocidad como un rango de valores en lugar de un valor. Una buena forma de hacer esto es usar la velocidad de la iteraci√≥n m√°s reciente, el promedio de las ocho iteraciones anteriores y el promedio de las tres m√°s bajas de las ocho iteraciones anteriores. Estos tres valores presentan una buena imagen de lo que acaba de suceder, un promedio a largo plazo y el peor de los casos de lo que podr√≠a suceder. usar en el futuro.","service":"user-service"}
{"level":"info","message":"1. Suponga que un proyecto tiene 150 puntos de trabajo por realizar. En las √∫ltimas 10 iteraciones, el equipo logr√≥ una velocidad de 10, 12, 13, 5, 14, 7, 6, 12, 16 y 14. Se le pregunta cu√°ndo se realizar√° el proyecto. ¬øQu√© dices? 2. ¬øSe habla de la fecha l√≠mite para su proyecto actual como una fecha espec√≠fica (18 de septiembre) o como un rango? ¬øPor qu√©?3. ¬øDentro de qu√© rango de iteraciones o fechas terminar√° su proyecto actual?","service":"user-service"}
{"level":"info","message":"Si no est√° claro a estas alturas por qu√© la estimaci√≥n y la planificaci√≥n √°giles funcionan, lo ideal es que se desvanezca. La Parte VI, que consta de un solo cap√≠tulo, se centra √∫nicamente en por qu√© la estimaci√≥n y la planificaci√≥n √°giles funcionan. En el siguiente cap√≠tulo, reafirmaremos r√°pidamente el prop√≥sito de la planificaci√≥n y luego consideraremos algunas de las razones m√°s importantes por las que la estimaci√≥n y la planificaci√≥n √°giles tienen √©xito en el logro de ese prop√≥sito. El cap√≠tulo concluye con un conjunto final de una docena de pautas para aplicar la estimaci√≥n y la planificaci√≥n √°giles. en tus proyectos.","service":"user-service"}
{"level":"info","message":"‚ÄúSi quiere una garant√≠a, compre una tostadora‚Äù.‚ÄîClint Eastwood en The RookieHabiendo llegado a este punto, estamos bien equipados para ver por qu√© la estimaci√≥n y la planificaci√≥n √°giles son exitosas. Primero, recuerde el prop√≥sito de estimar y planificar. La planificaci√≥n es un intento de encontrar una soluci√≥n √≥ptima a la pregunta general de desarrollo del producto: caracter√≠sticas, recursos y cronograma. Cambiar cualquiera de estos provoca cambios en los dem√°s. Mientras planificamos, estamos explorando todo el espectro de posibles soluciones sobre c√≥mo combinar estos tres par√°metros para crear el mejor producto posible. Las estimaciones y planes que elaboremos deben ser suficientes para servir de base para las decisiones que tomar√° la organizaci√≥n. En este cap√≠tulo, consideramos el proceso √°gil de estimaci√≥n y planificaci√≥n descrito hasta ahora en este libro para ver c√≥mo logra estos objetivos. La replanificaci√≥n ocurre con frecuencia Una de las formas en que la estimaci√≥n y la planificaci√≥n √°giles respaldan la exploraci√≥n eficiente del nuevo espacio de soluciones de desarrollo de productos es a trav√©s de una replanificaci√≥n frecuente. Al comienzo de cada nueva iteraci√≥n, se crea un plan para esa iteraci√≥n. El plan de lanzamiento se actualiza despu√©s de cada iteraci√≥n o, en el peor de los casos, despu√©s de unas cuantas iteraciones. Reconocer la imposibilidad de crear un plan perfecto contribuye en gran medida a reducir la ansiedad que acompa√±a a tal meta (Githens 1998).","service":"user-service"}
{"level":"info","message":"Saber que un plan se puede revisar al comienzo de la pr√≥xima iteraci√≥n cambia el enfoque del equipo de crear un plan perfecto (un objetivo imposible) a crear un plan que sea √∫til en este momento. Para que un plan sea √∫til, debe ser preciso, pero aceptar que los primeros planes ser√°n imprecisos. Una de las razones por las que replanificamos es para eliminar esa imprecisi√≥n progresivamente. Es decir, un plan inicial puede decir que un proyecto entregar√° de 300 a 400 puntos de historia en el tercer trimestre. Ese plan puede resultar m√°s tarde preciso (se entregan 305 puntos de historia en agosto), pero este plan no es particularmente preciso. Durante las primeras etapas de un proyecto, este plan puede ser muy probablemente una base suficiente para tomar decisiones. Sin embargo, m√°s tarde, para seguir siendo √∫til, el plan ganar√° precisi√≥n y podemos decir que el proyecto entregar√° de 380 a 400 puntos de historia en septiembre. Un proceso √°gil de estimaci√≥n y planificaci√≥n reconoce que nuestro conocimiento siempre es incompleto y requiere que los planes se revisen a medida aprendemos. A medida que un equipo aprende m√°s sobre el producto que est√° creando, se pueden agregar nuevas funciones al plan de lanzamiento. A medida que el equipo aprende m√°s sobre las tecnolog√≠as que est√°n usando o sobre qu√© tan bien est√°n trabajando juntos, se ajustan las expectativas sobre su tasa de progreso. Para que un plan siga siendo √∫til, este nuevo conocimiento debe incorporarse al plan. Las estimaciones de tama√±o y duraci√≥n est√°n separadas Un error de planificaci√≥n com√∫n (tanto en los equipos tradicionales como en muchos equipos √°giles) es confundir las estimaciones de tama√±o y duraci√≥n. Claramente, el tama√±o de un esfuerzo y el tiempo necesario para completar ese esfuerzo est√°n relacionados, pero muchos factores adicionales afectan la duraci√≥n. Un proyecto de un tama√±o dado llevar√° a programadores de diferentes niveles de habilidad y experiencia diferentes cantidades de tiempo. De manera similar, la duraci√≥n se ve afectada por el tama√±o del equipo que trabaja en el proyecto. Un equipo de cuatro personas puede tardar seis meses (veinticuatro personas-meses). Un equipo de ocho personas puede reducir eso a cuatro meses calendario pero a treinta y dos meses-persona, aunque el proyecto sea del mismo tama√±o en ambos casos. Para ver la diferencia entre estimaciones de tama√±o y duraci√≥n, suponga que le muestro un libro y le pregunto cu√°nto tiempo te tomar√° leerlo. Se puede decir por su t√≠tulo que es una novela, pero no dejar√© que mires dentro del libro para ver cu√°ntas p√°ginas tiene, qu√© tan anchos son los m√°rgenes o qu√© tan peque√±o es el tipo. Para responder a mi pregunta sobre cu√°nto tiempo le tomar√° leer este libro, primero calcule el n√∫mero de p√°ginas. Supongamos que dice 600. Luego estima su tasa de progreso en una p√°gina por minuto. Dime que te llevar√° 600 minutos, o 10","service":"user-service"}
{"level":"info","message":"horas. Para llegar a esta estimaci√≥n de duraci√≥n (10 horas), primero estim√≥ el tama√±o del trabajo (600 p√°ginas). La estimaci√≥n y la planificaci√≥n √°giles tienen √©xito porque las estimaciones de tama√±o y duraci√≥n est√°n separadas. Comenzamos estimando el tama√±o de los puntos de historia de las historias de usuario de un proyecto. Debido a que los puntos de la historia son abstractos y nocionales, son estimaciones puras de tama√±o. Luego estimamos una tasa de progreso, que llamamos velocidad. Nuestras estimaciones de tama√±o y velocidad se combinan luego para llegar a una estimaci√≥n de duraci√≥n. Nuestro proceso de estimaci√≥n y planificaci√≥n se beneficia de esta separaci√≥n clara y total de estimaciones de tama√±o y duraci√≥n. Los planes se realizan en diferentes niveles Debido a que los planes √°giles cubren tres niveles diferentes: el lanzamiento, la iteraci√≥n y el d√≠a actual, cada plan se puede realizar con un nivel diferente de precisi√≥n Tener planes con diferentes horizontes de tiempo y diferentes niveles de precisi√≥n tiene dos beneficios principales. Primero, transmite la realidad de que los diferentes planes se crean por diferentes razones. El plan diario, seg√∫n lo comprometido por cada participante en la reuni√≥n diaria de un equipo, es bastante preciso: los individuos expresan compromisos para completar, o al menos avanzar en tareas espec√≠ficas durante el d√≠a. El plan de iteraci√≥n es menos preciso, enumera las historias de usuario que se desarrollar√°n durante una iteraci√≥n y las tareas que se consideran necesarias para hacerlo. Debido a que cada historia de usuario se especifica de manera imperfecta, tambi√©n hay cierta vaguedad en torno a lo que significa decir que la historia se desarrollar√° en la iteraci√≥n. Finalmente, el plan de lanzamiento es el menos preciso de todos, ya que contiene solo una lista priorizada de historias de usuario deseadas y una o m√°s estimaciones de la cantidad de la funcionalidad deseada que es probable que se entregue para la fecha de lanzamiento deseada. El segundo beneficio de planificar en diferentes niveles es que ayuda al equipo a ver el proyecto desde diferentes perspectivas. Un plan de iteraci√≥n es necesario para completar el trabajo altamente coordinado de un equipo multifuncional dentro de una iteraci√≥n corta. Un plan de lanzamiento proporciona una perspectiva m√°s amplia del proyecto y asegura que el equipo no pierda el bosque del lanzamiento por los √°rboles de aniteraci√≥n. Un equipo que trabaja de iteraci√≥n en iteraci√≥n sin tener conciencia de un objetivo m√°s distante corre el riesgo de perseguir continuamente objetivos a corto plazo mientras pierde la oportunidad de alcanzar un objetivo verdaderamente lucrativo a largo plazo. Las metas a corto plazo pueden ser inconsistentes con el resultado deseado a largo plazo.","service":"user-service"}
{"level":"info","message":"Un plan tradicional en forma de diagrama de Gantt, diagrama PERT o estructura de desglose del trabajo se centra en las tareas necesarias para crear un producto. En cambio, un plan √°gil se enfoca en las funciones que se necesitar√°n en el producto. Esta es una distinci√≥n clave, porque obliga al equipo a pensar en el producto en el nivel correcto: las caracter√≠sticas. Cuando las caracter√≠sticas se desarrollan de forma iterativa, hay menos necesidad de pensar por adelantado sobre las tareas espec√≠ficas necesarias. Surge el trabajo de una iteraci√≥n, y el equipo pensar√° o descubrir√° todas las tareas a medida que sean necesarias. Lo que es m√°s importante es que el equipo piense en las funciones que se est√°n desarrollando. El colega Jim Highsmith (2004b) ha declarado que ‚Äúla planificaci√≥n √°gil es una 'mejor' planificaci√≥n porque utiliza caracter√≠sticas (historias, etc.) en lugar de tareas. Es f√°cil planificar un proyecto completo utilizando tareas est√°ndar sin comprender realmente el producto que se est√° construyendo. Al planificar por caracter√≠sticas, el equipo tiene una mejor comprensi√≥n del producto‚Äù. A nivel de tareas, muchos planes de proyectos tienen el mismo aspecto; cada plan √°gil es espec√≠fico para el producto que se est√° desarrollando. Las peque√±as historias hacen que el trabajo fluya De la teor√≠a de las colas (Poppendieck y Poppendieck 2003; Reinertsen 1997), aprendemos la importancia de centrarnos en el tiempo del ciclo, la cantidad de tiempo que tarda algo en ir desde el comienzo de un proceso hasta el final de ese proceso. En un proyecto de software, el tiempo de ciclo es el tiempo desde que el equipo comienza a trabajar en una caracter√≠stica hasta que esa caracter√≠stica entrega valor a los usuarios. Cuanto m√°s corto sea el tiempo del ciclo, mejor. Una influencia clave en el tiempo del ciclo es la variabilidad en el tiempo que lleva desarrollar una nueva funci√≥n. Una de las mejores formas de reducir la variabilidad es trabajar con unidades de trabajo razonablemente peque√±as y de tama√±o similar. El proceso de estimaci√≥n y planificaci√≥n descrito en este libro respalda esto al recomendar que los equipos calculen su trabajo a corto plazo dentro de aproximadamente un orden de magnitud. Las historias de usuarios m√°s grandes pueden existir m√°s abajo en la lista de requisitos priorizados de un proyecto. Sin embargo, como las caracter√≠sticas que se encuentran cerca de la parte superior de la lista (cuando se programar√°n en una iteraci√≥n que est√° comenzando), se desagregan en partes m√°s peque√±as. El trabajo en proceso se elimina en cada iteraci√≥n Las grandes cantidades de trabajo en proceso ralentizan al equipo. En un proyecto de software, existe trabajo en proceso en cualquier caracter√≠stica que el equipo haya comenzado a desarrollar pero que a√∫n no haya terminado. Cuanto m√°s trabajo en proceso haya, m√°s tiempo llevar√° desarrollar cualquier caracter√≠stica nueva, ya que la nueva caracter√≠stica debe seguir el trabajo ya iniciado. (O el nuevo","service":"user-service"}
{"level":"info","message":"la caracter√≠stica necesita ser acelerada, saltando por delante del trabajo en proceso, pero eso solo complica el problema para la siguiente caracter√≠stica que no puede ser acelerada). As√≠ que el trabajo en proceso conduce a mayores tiempos de ciclo. Y en la secci√≥n anterior, aprendimos la importancia de mantener un tiempo de ciclo corto. Una de las razones por las que la planificaci√≥n √°gil tiene √©xito es que todo el trabajo en proceso se elimina al final de cada iteraci√≥n. Debido a que el trabajo no avanza autom√°ticamente de una iteraci√≥n a la siguiente, cada iteraci√≥n se planifica de nuevo. Esto significa que el trabajo en una funci√≥n que no se implement√≥ completamente en una iteraci√≥n no necesariamente continuar√° en la siguiente. A menudo lo ser√°, pero no hay garant√≠a. Esto tiene el efecto de eliminar todo el trabajo en proceso al comienzo de cada iteraci√≥n. Debido a que el trabajo en proceso se elimina al comienzo de cada iteraci√≥n, los equipos pueden trabajar m√°s f√°cilmente de manera eficiente en iteraciones cortas. Esto significa un ciclo de retroalimentaci√≥n m√°s corto de los usuarios al equipo del proyecto, lo que conduce a un aprendizaje m√°s r√°pido, as√≠ como a una mitigaci√≥n y un control de riesgos m√°s oportunos. Esto conduce a una variedad de problemas. Por ejemplo, si terminar una tarea antes de tiempo hace que se acuse a un programador de dar una estimaci√≥n adicional para la tarea, el programador aprender√° a no terminar antes de tiempo. En lugar de terminar antes de tiempo, no informar√° una tarea como completa hasta su fecha l√≠mite. √Ågil la estimaci√≥n y la planificaci√≥n evitan con √©xito este tipo de problema mediante el seguimiento del progreso solo a nivel de equipo. Esta es una de las razones por las que el Cap√≠tulo 14, ‚ÄúPlanificaci√≥n de la iteraci√≥n‚Äù, incluy√≥ el consejo de que las personas deben abstenerse de inscribirse en tareas espec√≠ficas durante la planificaci√≥n de la iteraci√≥n. Del mismo modo, no se preparan gr√°ficos de avance individuales, solo un gr√°fico de avance de todo el equipo. La incertidumbre se reconoce y se planifica Muchos planes tradicionales y prescriptivos cometen el error de creer que las caracter√≠sticas se pueden bloquear al comienzo de un proyecto. Luego se hacen planes que no permiten cambios o fuerzan cambios a trav√©s de un oneroso proceso de control de cambios. Esto nos lleva a entregar proyectos con caracter√≠sticas que los usuarios no quieren. Cuando creamos un plan al principio de un proyecto y no lo actualizamos a medida que adquirimos nuevos conocimientos, perdemos la oportunidad de sincronizar el plan con la realidad.","service":"user-service"}
{"level":"info","message":"Con un enfoque √°gil para la estimaci√≥n y la planificaci√≥n, los equipos reconocen la incertidumbre tanto del fin como de los medios. La incertidumbre final (sobre el producto que finalmente se est√° construyendo) se reduce a medida que los incrementos del producto se muestran a los usuarios potenciales y otras partes interesadas al final de cada iteraci√≥n. Sus comentarios y respuestas se utilizan para afinar los planes futuros. Significa que la incertidumbre (sobre c√≥mo se construir√° el producto) se reduce a medida que el equipo aprende m√°s sobre las tecnolog√≠as en uso y sobre s√≠ mismos. El descubrimiento temprano de que un componente de terceros en particular no puede cumplir con los requisitos de rendimiento, por ejemplo, puede llevar al equipo a encontrar una alternativa. El tiempo para encontrar y cambiar al nuevo componente deber√° tenerse en cuenta en los nuevos planes una vez que se identifique la necesidad. estimaci√≥n y planificaci√≥n.1. Involucrar a todo el equipo. La responsabilidad principal de ciertas actividades puede recaer en una persona o grupo, ya que la priorizaci√≥n de los requisitos es principalmente responsabilidad del propietario del producto. Sin embargo, todo el equipo debe estar involucrado y comprometido con la b√∫squeda del proyecto de mayor valor posible. Vemos esto, por ejemplo, en el consejo de que la estimaci√≥n es mejor realizada por todo el equipo, aunque puede parecer que solo uno o dos miembros espec√≠ficos del equipo trabajar√°n en la historia o la tarea que se est√° estimando. Cuantas m√°s responsabilidades comparta el equipo, m√°s √©xito tendr√° que compartir el equipo.2. Planifica a diferentes niveles. No cometa el error de pensar que un plan de lanzamiento hace innecesario un plan de iteraci√≥n, o al rev√©s. El lanzamiento, la iteraci√≥n y los planes diarios cubren cada uno un horizonte de tiempo diferente con un nivel diferente de precisi√≥n, y cada uno tiene un prop√≥sito √∫nico.3. Mantenga las estimaciones de tama√±o y duraci√≥n separadas utilizando diferentes unidades. La mejor manera de mantener una distinci√≥n clara entre una estimaci√≥n de tama√±o y una de duraci√≥n es usar unidades separadas que no puedan confundirse. Estimar el tama√±o en puntos de la historia y traducir el tama√±o en duraci√≥n usando la velocidad es una excelente manera de hacer esto.4. Expresar incertidumbre en la funcionalidad o en la fecha. Ning√∫n plan es seguro. Aseg√∫rese de incluir una expresi√≥n de incertidumbre en cualquier plan de lanzamiento que produzca. Si la cantidad de nuevas funcionalidades es fija, indique su incertidumbre como un rango de fechas (\"Terminaremos en el tercer trimestre\" o \"Terminaremos en el medio","service":"user-service"}
{"level":"info","message":"a","service":"user-service"}
{"level":"info","message":"sobre la funcionalidad exacta que se entregar√° (\"Terminaremos el 31 de diciembre y el producto incluir√° al menos estas nuevas caracter√≠sticas, pero probablemente no m√°s que esas otras caracter√≠sticas nuevas\"). Use unidades m√°s grandes (iteraciones, meses y luego trimestres, por ejemplo) cuando la cantidad de incertidumbre sea mayor.5. Vuelva a planificar a menudo. Aproveche el inicio de cada nueva iteraci√≥n para evaluar la relevancia del plan de lanzamiento actual. Si el plan de lanzamiento se basa en informaci√≥n obsoleta o en suposiciones que ahora son falsas, actual√≠celo. Utilice las oportunidades de replanificaci√≥n para asegurarse de que el proyecto siempre tenga como objetivo brindar el mayor valor a la organizaci√≥n.6. Rastree y comunique el progreso. Muchas de las partes interesadas de un proyecto tendr√°n un gran inter√©s en el progreso del proyecto. Mant√©ngalos informados mediante la publicaci√≥n peri√≥dica de indicadores sencillos y muy comprensibles del progreso del equipo. Los gr√°ficos de trabajo pendiente y otros indicadores de un vistazo del progreso del proyecto son los mejores.7. Reconocer la importancia del aprendizaje. Debido a que un proyecto se trata tanto de generar nuevos conocimientos como de agregar nuevas capacidades a un producto, los planes deben actualizarse para incluir estos nuevos conocimientos. A medida que aprendemos m√°s sobre las necesidades de nuestros clientes, se agregan nuevas caracter√≠sticas al proyecto. A medida que aprendemos m√°s sobre las tecnolog√≠as que usamos o sobre qu√© tan bien trabajamos como equipo, ajustamos las expectativas sobre nuestra tasa de progreso y nuestro enfoque deseado.8. Caracter√≠sticas del plan del tama√±o adecuado. La funcionalidad que se agregar√° en un futuro cercano (dentro de las pr√≥ximas iteraciones) debe descomponerse en historias de usuario relativamente peque√±as, por lo general, elementos que demorar√°n uno o dos d√≠as hasta no m√°s de diez d√≠as. Somos mejores para estimar el trabajo que est√° dentro de un orden de magnitud en tama√±o. Trabajar con historias de usuarios que se encuentran dentro de estos rangos proporcionar√° la mejor combinaci√≥n de esfuerzo y precisi√≥n. Tambi√©n proporcionar√° historias que son lo suficientemente peque√±as para ser completadas durante una iteraci√≥n para la mayor√≠a de los equipos. Por supuesto, trabajar con peque√±as historias de usuarios puede convertirse en un gran esfuerzo en proyectos m√°s largos. Para equilibrar esto, si est√° creando un plan de lanzamiento que mirar√° a m√°s de dos o tres meses en el futuro, escriba algunas historias m√°s grandes (llamadas epopeyas) o calcule el trabajo m√°s distante a nivel de tema para evitar descomponer las historias grandes en peque√±as demasiado. por adelantado.9. Priorizar caracter√≠sticas. Trabaje en caracter√≠sticas en el orden que optimice el valor total del proyecto. Adem√°s del valor y el costo de las funciones al priorizar, tenga en cuenta el aprendizaje que se producir√° y el riesgo que se reducir√° al desarrollar una funci√≥n. La eliminaci√≥n temprana de un riesgo significativo a menudo puede justificar el desarrollo temprano de una caracter√≠stica. Del mismo modo, si se desarrolla un determinado","service":"user-service"}
{"level":"info","message":"funci√≥n temprana permitir√° al equipo obtener un conocimiento significativo sobre el producto o su esfuerzo para desarrollarlo, deben considerar desarrollar esa funci√≥n temprano.10. Base estimaciones y planes en hechos. Siempre que sea posible, basa tus estimaciones y planes en la realidad. S√≠, puede haber ocasiones en algunas organizaciones en las que ser√° necesario estimar cosas como la velocidad con muy poca base; de ‚Äã‚Äãhecho, el Cap√≠tulo 16, \"Estimaci√≥n de la velocidad\", present√≥ algunas t√©cnicas v√°lidas para hacerlo. Sin embargo, siempre que sea posible, las estimaciones y los planes deben basarse en valores reales observados. Esto tambi√©n se aplica a una estimaci√≥n de cu√°nto de una funci√≥n est√° completa. Es f√°cil saber cu√°ndo una caracter√≠stica est√° 0% completa (no la hemos iniciado), y es relativamente f√°cil saber cu√°ndo estamos 100% terminados (todas las pruebas pasan para todas las condiciones de satisfacci√≥n del propietario del producto). Es dif√≠cil medir cualquier punto intermedio: ¬øesta tarea se complet√≥ en un 50 % o en un 60 %? Debido a que esa pregunta es tan dif√≠cil, qu√©dese con lo que puede saber: 0% y 100%.11. Deja algo de holgura. Especialmente cuando planifique una iteraci√≥n, no planee usar el 100% del tiempo de cada miembro del equipo. As√≠ como una carretera experimenta un embotellamiento cuando se llena al 100 % de su capacidad, un equipo de desarrollo se ralentizar√° cuando el tiempo de cada persona est√© planificado a plena capacidad.12. Coordine equipos a trav√©s de la planificaci√≥n anticipada. En un proyecto que involucre a varios equipos, coordine su trabajo a trav√©s de una planificaci√≥n anticipada continua. Al mirar hacia el futuro y asignar caracter√≠sticas espec√≠ficas a las pr√≥ximas iteraciones espec√≠ficas, las dependencias entre equipos se pueden planificar y acomodar. Resumen El prop√≥sito de la planificaci√≥n √°gil es descubrir de forma iterativa una soluci√≥n √≥ptima a las preguntas generales de desarrollo de productos de qu√© funciones, con qu√© recursos y en qu√© l√≠nea de tiempo. Un enfoque √°gil para estimar y planificar tiene √©xito en encontrar esa soluci√≥n porque los planes se hacen en diferentes niveles y la replanificaci√≥n ocurre con frecuencia; porque los planes se basan en caracter√≠sticas m√°s que en tareas; porque el tama√±o se estima primero y luego la duraci√≥n se deriva de la estimaci√≥n del tama√±o; porque las peque√±as historias hacen que el trabajo fluya y el trabajo en curso se elimina al final de cada iteraci√≥n; porque el progreso se mide a nivel de equipo, m√°s que a nivel individual; y porque la incertidumbre es reconocida y planificada.","service":"user-service"}
{"level":"info","message":"1. ¬øExisten otras razones que se le ocurran por las que la estimaci√≥n y la planificaci√≥n √°giles tienen √©xito?2. ¬øCu√°l de la docena de pautas se aplica a su proceso actual de estimaci√≥n y planificaci√≥n? ¬øSe beneficiar√≠a ese proceso siguiendo a los dem√°s?","service":"user-service"}
{"level":"info","message":"Ya est√° todo dicho. Pero en el √∫nico cap√≠tulo de la Parte VII, lo dir√© todo de una manera completamente diferente. El siguiente cap√≠tulo est√° escrito como ficci√≥n pero resume muchos de los puntos clave de este libro. En √©l, se le presentar√° a una empresa m√≠tica, BombShelter Studios, mientras emprende su primer proyecto √°gil. En el camino, conocer√° a‚óÜ Allan, un programador‚óÜ Carlos, un entrenador √°gil‚óÜ Delaney, un analista‚óÜ Frank, un gerente de producto‚óÜ Laura, la directora financiera‚óÜ Phil, el director ejecutivo‚óÜ Prasad, un probador‚óÜ Rose, un artista‚óÜ Sasha, un programador","service":"user-service"}
{"level":"info","message":"El vuelo fue largo, pero la conferencia hab√≠a sido un √©xito. Los vuelos de regreso desde la costa este siempre eran los m√°s dif√≠ciles, pero en este vuelo Frank hab√≠a ascendido a primera clase, intercambiando algunas de sus millas de viajero frecuente por un poco m√°s de espacio y comodidad. Reflexionando sobre los eventos de la semana, Frank se acomod√≥ en su asiento. Como gerente de producto de Bomb Shelter Studios, Frank sab√≠a que el √∫ltimo juego de la compa√±√≠a, Deep Black & White, funcionar√≠a bien. Jugaba un juego llamado Go que era extremadamente popular en Jap√≥n, China y Corea, pero solo ten√≠a un n√∫mero moderado de seguidores en Europa, Am√©rica del Norte y el resto del mundo. Los programadores de su equipo hab√≠an ideado avances de inteligencia artificial que permitieron que Deep Black & White jugara a un nivel conocido como 5-dan. Todav√≠a estaba lejos del nivel de 9 dan de los mejores jugadores profesionales, pero estaba muy por delante de donde estaban cualquiera de los competidores de Bomb Shelter. Frank estaba encantado de que Deep Black & White fuera lanzado y comercializado en Asia a trav√©s del acuerdo de distribuci√≥n que hab√≠a negociado. con un editor en la conferencia. Los ingresos de las ventas en esos mercados realmente ayudar√≠an a BombShelter. Frank sab√≠a que los seis meses adicionales que tom√≥ completar DeepBlack & White casi hab√≠an sido el final de la peque√±a empresa privada de desarrollo de juegos que √©l hab√≠a cofundado. Desde sus desfavorables comienzos hace tres a√±os, Bomb Shelter Studios hab√≠a sido reconocido como un importante -desarrollador final de juegos de pensamiento y estrategia. Adem√°s del Deep Black & White reci√©n terminado, Bomb Shelter hab√≠a desarrollado juegos que jugaban al ajedrez, backgammon, reversi, bridge, damas, mancala y juegos similares. Una vez que se desarrollaba un juego, los derechos de distribuci√≥n se vend√≠an a","service":"user-service"}
{"level":"info","message":"un editor que se encargar√≠a de toda la producci√≥n y distribuci√≥n, lo que permitir√≠a a Bomb Shelter concentrarse por completo en el desarrollo de nuevos juegos. Mientras Frank estaba en la conferencia, su analista y un peque√±o equipo en Santa B√°rbara hab√≠an estado pensando en el nuevo juego, Havannah, que estaban casi listos para comenzar. Debido a los problemas con Deep Black & White (no solo el retraso de seis meses, sino tambi√©n la detecci√≥n de demasiados errores y el descubrimiento tard√≠o de algunos problemas de usabilidad), Frank sab√≠a que ten√≠an que encontrar una forma diferente de planificar y desarrollar proyectos. Sasha, el arquitecto principal de la empresa, investig√≥ algunas ideas que ten√≠a el equipo. Sugiri√≥ usar lo que llamaban un \"proceso √°gil\" para el pr√≥ximo proyecto. Frank no estaba exactamente seguro de lo que eso significaba, pero estaba seguro de que necesitaban hacer algo diferente. Llegar seis meses tarde al pr√≥ximo juego no iba a funcionar. Todos en el equipo estaban emocionados de probar un proceso √°gil, y todos sab√≠an lo que estaba en juego. D√≠a 1: lunes por la ma√±ana \"Buenos d√≠as a todos\", dijo Frank cuando entr√≥ en la sala de conferencias. A√∫n faltaba un minuto para las nueve y casi todo el equipo ya lo estaba esperando. Esa fue una buena se√±al. A pesar de que el equipo estaba cansado por el empuj√≥n final de Deep Black & White, parec√≠a que estaban listos para regresar de inmediato por Havannah. ‚ÄúBuenos d√≠as, Frank. Vi tu correo electr√≥nico sobre Deep Black & White. Esas son excelentes noticias sobre el acuerdo de distribuci√≥n‚Äù, dijo Allan, el programador de C++ que hab√≠a codificado el motor de inteligencia artificial que permiti√≥ que Deep Black & White jugara un juego tan potente. ‚ÄúC√≥mete una dona, Frank‚Äù, dijo Sasha mientras empujaba la caja casi vac√≠a. al otro lado de la mesa.‚Äù ‚ÄúGracias,‚Äù dijo Frank, tomando una barra de arce de la caja. ‚ÄúFrank, este es Carlos,‚Äù dijo Sasha. ‚ÄúCarlos es un entrenador √°gil con experiencia. Lo hemos tra√≠do para que nos ayude a medida que aprendemos a trabajar de esta manera nueva y √°gil‚Äù. Frank y Carlos se dieron la mano e intercambiaron saludos. ‚ÄúParece que todos est√°n aqu√≠ excepto Rose‚Äù dijo franco. ‚ÄúSigamos adelante y comencemos. Podemos informarla m√°s tarde. Probablemente no hablemos mucho sobre la obra de arte en esta reuni√≥n de todos modos.‚Äù ‚ÄúNo podemos empezar, Frank,‚Äù dijo Carlos. \"Esto es importante. Necesitamos a todo el equipo aqu√≠. Una gran parte del beneficio que buscamos al probar un proceso √°gil requiere que todos participen. Puede que Rose no tenga mucho que decir sobre el","service":"user-service"}
{"level":"info","message":"inteligencia artificial en el motor de movimiento. Pero aun as√≠, necesitamos su perspectiva si queremos planear el mejor juego posible‚Äù. ‚ÄúElla siempre llega unos cinco minutos despu√©s de las nueve los lunes. Deja a Brooke en la escuela los lunes, mi√©rcoles y viernes. Ella estar√° aqu√≠‚Äù, dijo Prasad, terminando casi exactamente cuando Rose abri√≥ la puerta de la sala de conferencias. ‚ÄúLo siento. Tr√°fico‚Äù, dijo Rose, desliz√°ndose r√°pidamente en una silla. ‚ÄúEntonces, Delaney, ha estado investigando el producto en Havannah‚Äù, dijo Frank al analista. ‚ÄúHa pasado un tiempo desde que pens√© en ese juego. Lamento preguntar, pero ¬øpuedes decirme c√≥mo jugarlo de nuevo?‚Äù ‚ÄúClaro, Frank. Primero, el tablero se ve as√≠‚Äù, dijo Delaney mientras sacaba un tablero de madera de su bolso y lo colocaba sobre la mesa. El tablero se parec√≠a a la figura 23.1. ‚ÄúHay dos jugadores que se turnan para colocar una pieza en el tablero. Cada jugador tiene piezas de diferentes colores. Una vez que se juega una pieza en el tablero, no se puede mover‚Äù.","service":"user-service"}
{"level":"info","message":"‚ÄúAl igual que en Deep Black & White‚Äù, dijo Frank. ‚ÄúCorrecto, pero a diferencia de Go, las piezas no se pueden capturar. El objetivo en Havannah es ser el primer jugador en hacer un anillo, un puente o un tenedor. Quien lo haga, gana el juego. ‚Äî¬øY qu√© son los anillos, los puentes y las bifurcaciones? pregunt√≥ Frank mientras Delaney tomaba un pu√±ado de piezas y comenzaba a acomodarlas en el tablero. ‚ÄúUn anillo es lo m√°s simple. Se parece a esto‚Äù, dijo Delaney mientras dibujaba la Figura 23.2. ‚ÄúUn anillo es un conjunto de piezas de conexi√≥n que encierra uno o m√°s puntos.‚Äù","service":"user-service"}
{"level":"info","message":"‚ÄúEst√° bien, eso suena bastante f√°cil. ¬øQu√© hace que este juego sea dif√≠cil? dijo Allan, que ya estaba pensando en el trabajo de escribir el motor de inteligencia artificial que seleccionar√≠a los movimientos. ‚ÄúRecuerde, un anillo es solo una de las formas de ganar. Tambi√©n puedes ganar con un tenedor o un puente‚Äù, continu√≥ Delaney mientras acomodaba las piezas como se muestra en la Figura 23.3. ‚ÄúUn puente conecta dos esquinas cualesquiera. El puente podr√≠a correr en l√≠nea recta a lo largo de un borde desde una esquina hasta una esquina adyacente. Sin embargo, lo m√°s probable es que un puente se parezca m√°s a esto. Se√±al√≥ el puente a la derecha del tablero en la figura 23.3.","service":"user-service"}
{"level":"info","message":"\"¬øUn jugador tiene que decir qu√© forma intentar√° hacer antes de que comience el juego?\" pregunt√≥ Allan. ‚ÄúNo, eso es parte de la diversi√≥n y parte del desaf√≠o. Puedes empezar tratando de hacer un puente, darte cuenta de que no va a funcionar, y tal vez probar con un tenedor.‚Äù ‚Äú¬øEntonces qu√© es un tenedor?‚Äù ‚ÄúEs as√≠, Frank,‚Äù dijo Delaney mientras a√±ad√≠a algunas piezas m√°s al tablero, como se muestra en la Figura 23.4. ‚ÄúUn tenedor conecta tres bordes, no esquinas. Las esquinas no son bordes, por lo que no se pueden usar en una bifurcaci√≥n, solo en un puente‚Äù.","service":"user-service"}
{"level":"info","message":"‚ÄúProgramar el motor de movimiento va a ser un desaf√≠o. Con tantas formas posibles de ganar y tantos espacios en el tablero, las opciones son tremendas.‚Äù ‚ÄúTienes raz√≥n, Allan,‚Äù dijo Delaney. ‚ÄúMuchas personas piensan que este juego es m√°s dif√≠cil que el ajedrez porque hay m√°s opciones y porque no podemos usar un gran libro de finales, como podemos hacerlo en el ajedrez. En el ajedrez, una vez que nos quedan algunas piezas, es posible usar un libro de los mejores movimientos para jugar. En ese momento, no necesitamos confiar solo en el motor de movimiento para seleccionar un movimiento. Con Havannah, hay demasiadas piezas y demasiadas posiciones.‚Äù ‚ÄúNo quer√≠as un juego f√°cil de programar, ¬øverdad, Allan?‚Äù Sasha brome√≥ con el otro programador. Allan parec√≠a querer un juego f√°cil de programar esta vez. ‚ÄúNo te preocupes. La buena noticia es que debido a que muy poca gente juega a Havannah en este momento, no necesitamos un motor tan potente como el que necesit√°bamos con Deep Black & White‚Äù, dijo Delaney, notando la leve expresi√≥n de alivio en el rostro de Allan. ‚ÄúVamos a querer","service":"user-service"}
{"level":"info","message":"para llegar all√≠ eventualmente, pero no lo necesitaremos en la versi√≥n 1.0. Un motor decente que le gana a la mayor√≠a de los humanos la mayor parte del tiempo estar√° bien.‚Äù ‚ÄúEst√° bien, Delaney. ¬øHay alguna otra regla que debamos tener en cuenta? pregunt√≥ Frank. ‚ÄúNo, eso es todo. Las reglas son simples, pero este juego realmente te hace pensar. Es por eso que creemos que le ir√° bien a los clientes que compraron nuestros otros juegos\". \"Entonces, ¬øtienes un documento de requisitos escrito?\" \"Todav√≠a no, Frank. Por lo que Carlos nos ha ense√±ado sobre el desarrollo √°gil de software, queremos que todo el equipo se re√∫na para determinar los requisitos en colaboraci√≥n‚Äù. ‚ÄúCorrecto‚Äù, agreg√≥ Carlos. ‚ÄúVamos a comenzar la reuni√≥n de hoy escribiendo historias de usuarios. Son declaraciones breves de funcionalidad pero contadas desde la perspectiva del usuario. Por ejemplo, como usuario, quiero guardar un juego en el que estoy. Cosas as√≠.‚Äù ‚ÄúEso suena bastante f√°cil. ¬øQu√© hacemos con esos una vez que hayamos terminado con ellos?‚Äù. ‚ÄúEstimaremos cada uno, priorizarlos y luego encontraremos la mejor compensaci√≥n entre las caracter√≠sticas y el cronograma‚Äù, dijo Carlos. ‚ÄúEntonces, ¬øc√≥mo comenzamos a escribir el usuario? ¬øcuentos?\" pregunt√≥ Frank. ‚ÄúVamos a usar estas tarjetas de notas‚Äù, dijo Carlos mientras lanzaba un paquete de tarjetas a cada persona en la habitaci√≥n. ‚ÄúMe gusta escribir historias de usuarios en esta plantilla‚Äù. Carlos tom√≥ un marcador y escribi√≥ ‚ÄúComo <tipo de usuario>, quiero <objetivo> para que <motivo>‚Äù en la pizarra. Delaney, has pensado mucho en Havannah; ¬øPuede ayudarnos a empezar?‚Äù ‚ÄúClaro,‚Äù dijo el analista. \"Comencemos con, como jugador, puedo deshacer un movimiento para poder corregir un gran error\". \"¬øEs esa nuestra primera historia?\" pregunt√≥ Prasad, el probador. ‚ÄúS√≠, entonces lo escribir√© en una tarjeta para que no lo olvidemos‚Äù, dijo Delaney mientras escrib√≠a la Tarjeta de Historia 23.1.","service":"user-service"}
{"level":"info","message":"Como jugador, puedo deshacer un movimiento para corregir un gran error.","service":"user-service"}
{"level":"info","message":"‚ÄîTodav√≠a no, Allan. Ser√° m√°s f√°cil si primero escribimos un mont√≥n de historias y luego las estimamos al mismo tiempo‚Äù, dijo Carlos. ‚ÄúMi turno. Si tenemos una historia de deshacer, necesitamos una historia de rehacer. Como jugador, quiero rehacer un movimiento que he deshecho para poder reproducir una secuencia‚Äù, dijo Frank. ‚ÄúBuena historia, Frank. Escr√≠belo en una tarjeta‚Äù, le dijo Carlos al gerente de producto. ‚Äú¬øNo ser√≠a mejor si escribimos esto en una hoja de c√°lculo?‚Äù pregunt√≥ Frank. ‚ÄúTal vez m√°s tarde. Pero en una reuni√≥n como esta, ayuda tener las tarjetas f√≠sicas. Ya ver√°s‚Äù, dijo Carlos. ‚ÄúCada uno de nosotros puede escribir cualquier historia siempre que se le ocurra. No necesitamos esperar a quien est√© escribiendo‚Äù. ‚ÄúY cuando llegamos a la planificaci√≥n, las tarjetas son a√∫n m√°s √∫tiles‚Äù, agreg√≥ Sasha. ‚ÄúPodemos apilar las tarjetas por prioridad o en lo que haremos en cada iteraci√≥n. ‚ÄùFrank comenz√≥ a ver algunas otras ventajas en el uso de las tarjetas de notas. Pod√≠a escribir notas adicionales o dibujar en las tarjetas. No pod√≠a hacer eso en una hoja de c√°lculo. Todav√≠a no hab√≠a aprendido mucho sobre el nuevo \"proceso √°gil\" del equipo, pero le gustaba lo que hab√≠a visto hasta ahora. Con creciente entusiasmo, escribi√≥ Story Card 23.2.","service":"user-service"}
{"level":"info","message":"Como jugador, quiero rehacer un movimiento que he deshecho para poder reproducir una secuencia.","service":"user-service"}
{"level":"info","message":"‚ÄúUna buena manera de obtener todas las historias es‚Ä¶‚Äù comenz√≥ Carlos. ‚Äú¬øRealmente quieres decir todas, Carlos?‚Äù Sasha le pregunt√≥ al nuevo entrenador del equipo. ‚ÄúS√≠. Un poco. Me gustar√≠a usar esta reuni√≥n para escribir tantas tarjetas de historias como podamos. Deshacer y rehacer son bastante peque√±os. No necesitamos que nuestras historias sean tan peque√±as. De hecho, probablemente deber√≠amos combinar deshacer y rehacer‚Äù. Lo har√©‚Äù, dijo Frank mientras escrib√≠a la Story Card 23.3. ‚Äú¬øC√≥mo indicamos que esta tarjeta est√° relacionada con las otras dos tarjetas? ¬øLos numeramos?‚Äù ‚ÄúNo, solo rompe los dos primeros,‚Äù dijo Carlos. ‚ÄúNo los necesitaremos.‚Äù Frank rompi√≥ las dos primeras cartas por la mitad.","service":"user-service"}
{"level":"info","message":"Como jugadora, me gustar√≠a deshacer y rehacer movimientos","service":"user-service"}
{"level":"info","message":"‚ÄúCarlos, Frank no incluy√≥ una raz√≥n en la tarjeta de raz√≥n. No hay 'as√≠ que'. ¬øEs eso un problema? pregunt√≥ Allan. ‚Äú¬°Oye, es solo mi segunda historia!‚Äù Frank se defendi√≥ burlonamente. ‚ÄúEn realidad‚Äù, aclar√≥ Carlos, ‚Äúno siempre necesitamos una cl√°usula ‚Äòpara que‚Äô. Si ayuda a que la historia sea m√°s clara, use uno. Pero no vale la pena preocuparse, especialmente en una historia como esta, donde es obvio por qu√© un usuario querr√≠a hacer eso.‚Äù ‚ÄúCarlos, dijiste que queremos escribir todas las historias hoy, incluso si algunas est√°n escritas a un alto nivel . Supongo que podemos agregar m√°s m√°s adelante. ¬øBien?\" pregunt√≥ Rose. ‚ÄúAbsolutamente. Lo ideal es que pensemos en algunas historias adicionales m√°s adelante. De lo contrario, significa que no estamos pensando lo suficientemente creativamente sobre el juego. Odiar√≠a pensar que no se nos ocurren algunas ideas m√°s tarde que sean mejores que las que comenzamos hoy. El prop√≥sito de escribir 'todas' las historias de hoy es para que todos seamos conscientes, nuevamente, solo en un nivel alto, de qu√© caracter√≠sticas son probables. Esto ayuda especialmente a Sasha y Allan cuando piensan en la arquitectura del juego e incluso en c√≥mo dise√±ar√°n el motor de movimiento‚Äù. Eso suena genial, Carlos. Avancemos. ¬øTodos empezamos a escribir cartas?‚Äù. ‚ÄúPodr√≠amos‚Äù, dijo Carlos. ‚ÄúPero funciona mejor si le aplicamos cierta estructura. Hablemos de lo que un usuario puede querer hacer en varios momentos del juego: antes de que comience un juego, durante el juego e incluso despu√©s del juego‚Äù. Varios asentimientos y comentarios El acuerdo provino del resto del equipo mientras Carlos continuaba: \"Justo cuando se carga Havannah, ¬øqu√© podr√≠a alguien querer hacer?\" \"Iniciar un juego\". \"Restaurar un juego guardado\". h√°galos por escrito‚Äù, dijo Carlos. Unos minutos m√°s tarde, el equipo hab√≠a producido las historias que se muestran en la Tabla 23.1. ‚ÄúCarlos‚Äù, pregunt√≥ Frank, ‚Äúsi estas historias son cosas que un jugador puede querer hacer antes de que comience el juego, ¬øpor qu√© incluimos Como jugador, quiero el sistema para reproducir musica de fondo? ¬øNo es eso algo que el jugador quiere mientras juega, en lugar de antes?‚Äù ‚ÄúSolo estamos haciendo una lluvia de ideas sobre las historias de los usuarios‚Äù, respondi√≥ Carlos. ‚ÄúNo realizaremos un seguimiento de qu√© historias suceden antes de que comience el juego y cu√°les suceden durante el mismo. Solo estoy usando ese enfoque para ayudarnos a pensar en lo que necesitamos en el juego.‚Äù ‚ÄúOK. ¬øQu√© hacemos a continuaci√≥n?‚Äù ‚ÄúAhora pensamos en lo que un usuario podr√≠a querer hacer durante un juego.","service":"user-service"}
{"level":"info","message":"El equipo respondi√≥ la pregunta de Carlos escribiendo las historias que se muestran en la Tabla 23.2.","service":"user-service"}
{"level":"info","message":"‚ÄúEst√° bien, supongo que deber√≠amos pasar a las cosas que un usuario puede querer hacer despu√©s de que finaliza un juego‚Äù, dijo Frank. ‚ÄúNo hay mucho que un jugador quiera hacer despu√©s de que finaliza un juego. No pensamos en guardar un juego antes, as√≠ que podemos agregar eso‚Äù, dijo Prasad. ‚ÄúUn jugador tambi√©n puede querer regresar y anotar movimientos. Deep Black & White respalda eso‚Äù, dijo Rose. ‚ÄúPuedo poner una nota en un movimiento como ‚ÄòTambi√©n pens√© en jugar en el hex√°gono A3‚Äô‚Äù. ‚ÄúEst√° bien, escribamos esto como historias‚Äù, dijo Carlos, lo que result√≥ en la Tabla 23.3. ‚Äú¬øQu√© sigue, Carlos?‚Äù pregunt√≥ Allan. ‚ÄúMientras le das los toques finales a Deep Black & White durante las pr√≥ximas dos semanas, Delaney investigar√° un poco m√°s el producto‚Äù. ‚ÄúS√≠‚Äù, agreg√≥ Delaney. ‚ÄúQuiero validar con los posibles usuarios las caracter√≠sticas que ellos creen que son las m√°s importantes‚Äù. ‚ÄúPero antes de que terminemos hoy, debemos crear una estimaci√≥n de alto nivel para cada historia‚Äù, dijo Carlos.","service":"user-service"}
{"level":"info","message":"‚ÄúEst√° bien, hagamos una estimaci√≥n. Pero primero tomemos un descanso de diez minutos‚Äù, dijo Allan.","service":"user-service"}
{"level":"info","message":"‚ÄúLo que vamos a hacer‚Äù, Carlos reanud√≥ la reuni√≥n, ‚Äúes estimar cada historia como una cantidad de puntos de historia‚Äù. ‚Äú¬øQu√© es un punto de historia?‚Äù pregunt√≥ Frank. ‚ÄúUn punto de la historia es una estimaci√≥n sin unidades del tama√±o y la complejidad de una historia‚Äù, respondi√≥ Carlos. ‚ÄúSupongamos que decidimos que salvar un juego son tres puntos. Si pensamos que restaurar un juego guardado ser√° el mismo esfuerzo, lo llamaremos tres puntos. Si pensamos que restaurar un juego ser√° un poco menos, lo llamaremos dos.‚Äù ‚Äú¬øEntonces los n√∫meros no significan nada?‚Äù pregunt√≥ Frank.","service":"user-service"}
{"level":"info","message":"‚ÄúSolo relativamente. Un dos es dos veces uno. Un ocho es cuatro veces un dos. As√≠. Eso es todo lo que importa‚Äù, aclar√≥ Carlos. ‚ÄúVamos a estimar jugando al p√≥quer de planificaci√≥n‚Äù. Carlos entreg√≥ a cada persona un juego de tarjetas con los valores 1, 2, 3,5 y 8 escritos en ellas. ‚ÄúLa forma en que esto funciona es que Delaney nos leer√° una de las tarjetas de historias. Podemos hablar de ello y hacer preguntas. Luego, cada uno elegir√° una de las tarjetas que acabo de pasar. Esos n√∫meros son nuestras estimaciones. Cuando cada uno haya escogido una carta, les daremos la vuelta al mismo tiempo. Si todos estamos de acuerdo, esa es la estimaci√≥n. Si no, discutiremos nuestras estimaciones y la historia durante un par de minutos y luego lo haremos de nuevo. Seguiremos haci√©ndolo hasta que acuerdemos un presupuesto para la historia‚Äù. Carlos respondi√≥ algunas preguntas sobre la t√©cnica y luego le pidi√≥ a Delaney que leyera la primera historia: ‚ÄúComo jugador, puedo comenzar un nuevo juego‚Äù. ‚ÄúLa primera historia o dos siempre son dif√≠ciles de estimar‚Äù, agreg√≥ Sasha. ‚ÄúDebido a que estamos estimando las historias entre s√≠, es dif√≠cil cuando no hay nada con lo que comparar. En su mayor√≠a, solo tenemos que decidir si esta historia inicial es una de las m√°s peque√±as o una de las m√°s grandes que tenemos. Si, despu√©s de haber estimado cuatro o cinco pisos, decidimos que necesitamos cambiar la estimaci√≥n de este primero, podemos hacerlo. ‚Äî¬øQu√© queremos decir con esta historia? pregunt√≥ Allan. ‚ÄúNo est√° claro qu√© significa comenzar un juego nuevo‚Äù. ‚ÄúEscribimos esta historia cuando est√°bamos pensando en lo que un usuario podr√≠a querer hacer despu√©s de iniciar nuestro software por primera vez‚Äù, dijo Delaney. ‚ÄúDijimos que probablemente querr√° comenzar un juego nuevo o restaurar un juego antiguo. Eso es todo lo que quer√≠amos decir.‚Äù ‚Äú¬øEsta historia incluye dibujar un tablero de juego en blanco y configurar las cosas para que la computadora est√© lista para jugar un juego?‚Äù pregunt√≥ Allan. ‚ÄúCreo que s√≠. No creo que el tablero deba ser bonito para esta historia. Tenemos otra historia sobre c√≥mo hacer que la pantalla sea est√©ticamente agradable. Pero esta historia requiere que dibujemos el tablero de Havannah en la pantalla‚Äù.","service":"user-service"}
{"level":"info","message":"Carlos esper√≥ unos segundos m√°s para ver si hab√≠a m√°s preguntas. \"Est√° bien, todos elijan una tarjeta con su estimaci√≥n\". \"Es un uno\", dijo Allan, mostrando a todos su tarjeta. \"Todav√≠a no, Allan\". Carlos dijo. ‚ÄúTodo el mundo necesita la oportunidad de pensar en ello sin ver la estimaci√≥n de nadie m√°s. Hacerlo de esa manera evita cualquier sesgo‚Äù. El pauso. ‚ÄúParece que todos han elegido una carta. Dales la vuelta‚Äù. Las cartas iban desde las de Allan y Rose hasta un cinco de Prasad. ‚Äú¬øPor qu√© un cinco, Prasad?‚Äù pregunt√≥ Carlos. ‚ÄúCreo que esta historia ser√° una de las m√°s grandes que tenemos que hacer‚Äù, respondi√≥. ‚ÄúNi siquiera cerca‚Äù, argument√≥ Allan. ‚ÄúTodo lo que necesita esta historia es una interfaz de usuario en la que el jugador pueda elegir un bot√≥n Iniciar nuevo juego y luego hacer que dibuje un tablero de Havannah en blanco. El tablero no tiene que ser bonito, y no necesita dejar que el usuario coloque ninguna pieza. Tenemos historias separadas para ellos. Esta historia es f√°cil‚Äù. ‚ÄúEst√° bien, no lo hab√≠a pensado de esa manera‚Äù, dijo Prasad. Despu√©s de permitir que la discusi√≥n continuara un poco m√°s, Carlos nuevamente les pidi√≥ a todos que seleccionaran una tarjeta que representara su estimaci√≥n. La mayor√≠a de las estimaciones eran ahora unos, con un dos mostrado por Prasad. Carlos anim√≥ a tener otra breve conversaci√≥n y luego le pregunt√≥ a Prasad si pod√≠a respaldar una estimaci√≥n de una. Dijo que pod√≠a, y la primera historia se estim√≥ en un punto de la historia. ‚ÄúPasemos a nuestra siguiente historia‚Äù, dijo Delaney, quien ley√≥: ‚ÄúComo jugador, puedo restaurar un juego guardado‚Äù. Despu√©s de dos minutos de discusi√≥n sobre c√≥mo funcionar√≠a esta historia, Carlos le pidi√≥ a cada miembro del equipo que seleccionara una tarjeta. No hubo consenso en la primera ronda de cartas. Sasha argument√≥ que esta historia era el doble de grande que la primera porque implicaba configurar un tablero de Havannah en blanco, leer el juego guardado de un archivo y colocar las piezas que ya se hab√≠an jugado en el tablero. Convencidos por los argumentos de Sasha, el equipo acord√≥ una estimaci√≥n de dos para la historia. ‚ÄúBien, lo siguiente es Como jugador, puedo seleccionar la fuerza de juego de la computadora. Estimemos eso‚Äù, dijo Sasha. ‚ÄúEse es todo el motor de selecci√≥n de movimientos‚Äù, dijo Allan. ‚ÄúEso va a ser dif√≠cil. ¬øPodemos saltarnos esta por ahora y volver a ella despu√©s de que hayamos estimado algunas de las otras grandes historias? ‚ÄúPens√© que esta historia se trataba de dejar que el usuario escogiera una fuerza de juego, no de que la computadora jugara con esa fuerza. Esto es facil; es solo un campo o dos en la pantalla‚Äù. ‚ÄúAs√≠ es como quise decir la historia cuando la escrib√≠‚Äù, dijo Frank.","service":"user-service"}
{"level":"info","message":"\"Eso est√° bien, pero luego necesitamos una historia como, como jugador, puedo jugar contra la computadora en diferentes puntos fuertes\", dijo Rose. \"¬øPodemos dividir eso, sin embargo?\" pregunt√≥ Allan. ‚ÄúCreo que va a ser dif√≠cil. ¬øQu√© tal si, como jugador, puedo jugar contra un oponente de computadora d√©bil? Y luego, como jugador, ¬øpuedo jugar contra un oponente de computadora fuerte y un oponente de computadora mediano?‚Äù ‚ÄúClaro. Hag√°moslo‚Äù, dijo Sasha. ‚ÄúEmpecemos con el jugador seleccionando la fuerza de juego de la computadora. Todos eligen una de sus cartas de p√≥quer de planificaci√≥n. ¬øEst√° bien? Listo; darles la vuelta. Todos dieron la vuelta a uno. \"Eso me parece razonable. Estamos diciendo que esto tiene aproximadamente el mismo tama√±o que Como jugador, puedo comenzar un nuevo juego‚Äù. Hubo asentimientos de acuerdo de que las dos historias ten√≠an aproximadamente el mismo tama√±o. ‚ÄúPasemos a Como jugador, puedo jugar. contra una historia de oponente de computadora d√©bil‚Äù, sugiri√≥ Allan, ansioso por hablar sobre las historias de motores de movimiento que probablemente ser√≠a √©l quien programar√≠a. ‚Äú¬øQu√© tan fuerte necesita ser nuestro motor d√©bil?‚Äù ‚ÄúNo puede jugar al azar,‚Äù dijo Delaney. ‚ÄúPero no tiene que ser muy fuerte. Este juego es enga√±osamente dif√≠cil, y a la mayor√≠a de la gente le toma un tiempo descubrir cu√°l es un buen movimiento. Pero incluso nuestro nivel d√©bil necesita saber si es mejor intentar hacer un anillo, un puente o una bifurcaci√≥n, seg√∫n lo que est√© haciendo el jugador humano‚Äù. ‚ÄúEst√° bien, calcul√©moslo‚Äù, dijo Allan. ‚ÄúEspera‚Äù, Prasad dicho. ‚Äú¬øC√≥mo vamos a probar esto? Parece que va a ser muy dif√≠cil de probar.‚Äù ‚ÄúBuena pregunta,‚Äù dijo Carlos. \"¬øAlgunas ideas?\" Mir√≥ alrededor de la habitaci√≥n. ‚ÄúUna forma ser√≠a identificar un mont√≥n de posiciones, ver qu√© sugiere el motor y preguntarle a un buen jugador humano si esos son movimientos decentes‚Äù, dijo Rose. ‚ÄúEso es bueno. Sin embargo, ¬øpodemos automatizar eso? pregunt√≥ Delaney. ‚ÄúNecesitamos automatizar las pruebas para que si el motor comienza a hacer movimientos extra√±os, como lo hizo DeepBlack & White en abril, lo sepamos de inmediato‚Äù. ‚ÄúAbsolutamente‚Äù, respondi√≥ Prasad. ‚ÄúPodemos tener un archivo que describa una posici√≥n en el tablero y luego diga c√≥mo debe responder la computadora‚Äù. ‚ÄúPuede que no haya un solo movimiento aceptable‚Äù, dijo Allan. ‚ÄúEse archivo deber√≠a permitirnos especificar varias buenas respuestas‚Äù. ‚ÄúExcelentes respuestas. Sin embargo, no necesitamos dise√±ar ese archivo ahora, siempre que sepamos que hay algunas opciones. Estimemos la historia‚Äù, dijo Carlos.","service":"user-service"}
{"level":"info","message":"La habitaci√≥n qued√≥ en silencio mientras cada persona pensaba en todo lo que estar√≠a involucrado en esta historia. Cuando cada uno hab√≠a seleccionado una tarjeta, todos las levantaron al mismo tiempo. ‚ÄúAllan, creo que se supone que debes levantar solo una tarjeta, no todas. ¬øTe cost√≥ mucho decidirte?‚Äù ‚ÄúNo, no tengo una tarjeta lo suficientemente grande. As√≠ que los estoy reteniendo a todos. Todas estas tarjetas‚Äù, el programador indic√≥ las tarjetas 1, 2, 3, 5 y 8, ‚Äúsuman 19. Eso parece correcto‚Äù. ‚ÄúTengo algunas tarjetas m√°s grandes: 13, 20, 40 y 100, ‚Äîdijo Carlos‚Äî. Pas√≥ un juego de tarjetas adicionales a cada persona. \"Esperaba que no los necesit√°ramos, pero es posible\". \"¬øPor qu√© esperabas que no los necesit√°ramos?\" va a encajar en una sola iteraci√≥n. Va a ser demasiado grande. Lo mismo es probablemente cierto para el resto de los n√∫meros que acabo de desmayar. Est√° bien para nosotros tener grandes historias, y est√° perfectamente bien para nosotros estimarlas con grandes valores. Pero debemos recordar que tendremos que dividirlos antes de trabajar en ellos para que cada uno encaje en una iteraci√≥n. Y debemos recordar que es probable que las estimaciones de caracter√≠sticas muy grandes sean menos precisas. Es por eso que los rangos se hacen m√°s grandes.","service":"user-service"}
{"level":"info","message":"‚ÄúEntonces, Allan, crees que esto es un diecinueve. ¬øEn realidad?\" Sasha pregunt√≥ mientras revisaba dos veces el ocho en su mano. ‚ÄúAbsolutamente. Primero, necesito aprender m√°s sobre este juego. El motor necesitar√° reconocer si el jugador est√° tratando de hacer un anillo, un puente o un tenedor. Tendr√° que decidir qu√© forma debe intentar hacer. Necesita decidir si un movimiento debe ser ofensivo o defensivo. Incluso un primer motor d√©bil va a tomar un tiempo.‚Äù ‚ÄúBueno, ya lo sabr√≠as. Pero diecinueve es enorme‚Äù, dijo Sasha. ‚ÄúPrasad, ¬øpor qu√© crees que esto es un tres?‚Äù pregunt√≥ Carlos, enfocando la discusi√≥n en los estimadores con los valores at√≠picos. ‚ÄúLa prueba simplemente no suena dif√≠cil. No creo que tenga mucho que hacer. Crear√© esos archivos de texto para las pruebas, y eso es todo.‚Äù ‚ÄúClaro, pero estamos estimando la historia completa, no solo nuestras partes. Las pruebas pueden ser un tres, pero el tiempo de Allan tambi√©n debe estar ah√≠‚Äù, explic√≥ Carlos. ‚ÄúUps. S√≠, entonces Allan tiene raz√≥n‚Äù, dijo Prasad. ‚ÄúEste va a ser grande.‚Äù ‚ÄúA ver si tiene raz√≥n. Recoja sus tarjetas y vuelva a estimar en base a lo que acaba de escuchar‚Äù, instruy√≥ Carlos. Hizo una pausa de unos segundos para asegurarse de que todos tuvieran tiempo para pensar. Dales la vuelta.","service":"user-service"}
{"level":"info","message":"Todas las tarjetas mostraron veinte esta vez. \"Parece que convenciste a todos, Allan\", dijo Carlos. ‚ÄúSin embargo, un billete de veinte es probablemente demasiado grande para una historia. Allan, ¬øhay alguna manera de dividir esta historia? ¬øTal vez tener un motor a√∫n m√°s d√©bil la primera vez? Entonces mej√≥ralo antes de enviarlo.‚Äù ‚ÄúNo veo ninguna buena manera,‚Äù dijo Allan. Pens√≥ por un momento y luego continu√≥: ‚ÄúPodr√≠amos hacer que el motor realice un movimiento ofensivo en cada turno, siempre tratando de hacer su propio patr√≥n, ignorando los movimientos del humano. Sin embargo, no creo que sea una buena idea. ‚Äî¬øQu√© pasa si un primer motor reconoce solo anillos? pregunt√≥ Rosa. ‚ÄúPodr√≠amos quitar puentes y bifurcaciones, solo por ahora. Allan, ¬øno podr√≠as escribir un motor que jugara ofensiva y defensivamente pero que tratara de hacer, y bloquear, solo anillos?‚Äù ‚ÄúAbsolutamente. Eso podr√≠a funcionar. As√≠ que dividamos esto en tres pisos, uno para cada forma‚Äù. Todos estuvieron de acuerdo y estimaron los tres pisos como se muestra en la Tabla 23.4.","service":"user-service"}
{"level":"info","message":"‚ÄúCuando eran una historia, la estimaci√≥n era veinte. Ahora son veintiuno. ¬øDeber√≠amos quitar un punto de una historia para que sigan siendo veinte? Frank pregunt√≥. ‚ÄúNo. Las estimaciones son las que son, y no pretenden ser tan precisas‚Äù, respondi√≥ Carlos. ‚ÄúDividir historias nos ayuda a ver m√°s de lo que est√° involucrado. La suma de las estimaciones no necesita ser igual a la estimaci√≥n del piso m√°s grande\". \"Allan, ¬øqu√© debemos hacer con los motores de potencia media y fuerte? ¬øQuieres un piso para cada uno o quieres dividirlos? por anillos, puentes y bifurcaciones tambi√©n?‚Äù ‚ÄúUn piso cada uno. Creo que deber√≠amos definir nuestro motor de potencia media como uno que nunca comete un error rotundo‚Äù, dijo Allan. ‚ÄúPuede que no siempre juegue el mejor movimiento absoluto, pero nunca comete un error total. Podemos probar eso de la manera que describimos, y podemos hacer que algunos buenos jugadores humanos lo prueben. mientras","service":"user-service"}
{"level":"info","message":"como hace movimientos que considerar√≠an razonables, est√° bien. Para el motor fuerte, podemos fortalecer esa condici√≥n y hacer que juegue el mejor movimiento que pueda encontrar. Seg√∫n el rendimiento, podemos establecer qu√© tan adelante se ve el motor de movimiento\". \"Entonces, ¬øc√≥mo quieres escribir eso como historias?\" pregunt√≥ Frank. ‚ÄúCreo que como jugador, puedo jugar contra un motor de potencia media est√° bien‚Äù, respondi√≥ Delaney. ‚ÄúS√≠‚Äù, estuvo de acuerdo Carlos. ‚ÄúPuedes anotar en la tarjeta de historia que ‚ÄòSiempre juega jugadas que un buen jugador humano piensa que son razonables‚Äô es una de las condiciones de satisfacci√≥n para esa historia. Eso te ayudar√° a recordar lo que es un 'motor de fuerza media' sin tener que inventar otra historia sobre movimientos razonables‚Äù. El equipo discuti√≥ esta historia un poco m√°s, jug√≥ al p√≥quer de planificaci√≥n y luego acord√≥ estimarla en ocho puntos de historia. ll have Como jugador, tambi√©n puedo jugar contra un m√≥dulo fuerte, supongo‚Äù, dijo Frank. ‚ÄúEsto es al menos el doble de grande que el m√≥dulo mediano‚Äù, dijo Allan. ‚ÄúLlamamos a eso un ocho. Sin embargo, no tengo diecis√©is. ¬øUsamos trece? Eso es lo m√°s cercano. ¬øO formamos diecis√©is?‚Äù ‚ÄúLo que quieres hacer‚Äù, dijo Carlos, ‚Äúes pensar en las cartas como cubos. Si esta historia es de diecis√©is, no cabr√° en un balde de trece. No queremos inventar nuevos valores porque empieza a parecer demasiado preciso. No sabemos si este es un trece o un diecis√©is o un diecinueve. Es importante recordar que estas son estimaciones, no garant√≠as‚Äù. ‚ÄúEst√° bien, creo que esto es dos o tres veces m√°s grande que el motor mediano‚Äù, dijo Allan. ‚ÄúEso significa que son diecis√©is para veinticuatro. Como veinticuatro no caben en un balde de veinte, ¬ødeber√≠a estimarlo en cuarenta? Eso parece alto. No es cinco veces m√°s grande que el motor mediano‚Äù. ‚ÄúNo, no lo har√≠a‚Äù, respondi√≥ Carlos. ‚ÄúSon baldes, pero piensa en el contenido como arena, no como agua. Puedes llenarlo en exceso un poquito en la parte superior.‚Äù ‚ÄúEntonces hagamos una estimaci√≥n,‚Äù dijo Allan. Basados ‚Äã‚Äãen la discusi√≥n que acababan de escuchar, nadie estuvo en desacuerdo con Allan, y todos levantaron un billete de veinte. esta historia un veinte‚Äù, dijo Carlos. ‚ÄúEst√° bien por ahora. Probablemente tendremos que encontrar una manera de dividirlo en al menos dos piezas discretas de trabajo m√°s tarde. \" \"No necesitamos dividirlo en historias m√°s peque√±as, como hicimos con el motor d√©bil?\" pregunt√≥ Allan.","service":"user-service"}
{"level":"info","message":"‚ÄúNo, podemos hacerlo m√°s tarde, cuando estemos m√°s cerca de trabajar en esa historia‚Äù, dijo Carlos. ‚ÄúEntonces sabremos m√°s, y no hay nada que ganar dividi√©ndolo hoy.‚Äù ‚ÄúBien. Sigamos adelante‚Äù, sugiri√≥ Delaney. ‚ÄúLa siguiente historia es como jugador, me gustar√≠a poder usar el sistema para jugar contra otro humano en mi computadora. Esto se refiri√≥ a dos de nosotros sentados en una computadora pasando el teclado o el mouse de un lado a otro y haciendo movimientos. Todo lo que queremos es que la computadora nos diga cu√°ndo alguien gana.‚Äù ‚ÄúSin embargo, las otras caracter√≠sticas que identificamos a√∫n funcionan, ¬øverdad?‚Äù pregunt√≥ Prasad. ‚ÄúDos jugadores humanos pueden querer usar deshacer y rehacer, o pueden querer pedir una pista‚Äù. ‚ÄúClaro‚Äù, respondi√≥ Delaney. ‚ÄúCreo que deber√≠amos agregar una historia: como jugador, quiero que la computadora reconocer una forma ganadora‚Äù, dijo Allan. ‚Äú¬øEso no es parte de las historias del motor de movimiento?‚Äù ‚ÄúS√≠, pero si lo sacamos, podr√≠amos hacerlo por separado y eso nos permitir√≠a escribir una versi√≥n humana contra humana del juego muy r√°pido mientras hacemos funcionar el motor de movimiento‚Äù. No hubo objeciones, y la nueva historia se estim√≥ en dos puntos de historia. ‚ÄúAllan, ¬øeso reduce alguna de las estimaciones para las historias de motores de movimiento d√©biles?‚Äù pregunt√≥ Frank. ‚ÄúEn realidad no. Todav√≠a estimar√≠a cada uno de la forma en que lo hemos hecho. Podr√≠amos bajar las historias de ocho puntos a siete, si quieres.‚Äù ‚ÄúNo, no queremos hacer eso,‚Äù dijo Carlos. ‚ÄúEso hace que los n√∫meros parezcan demasiado precisos. Si queremos bajarlo a cinco, podemos. De lo contrario, dej√©moslo como un ocho‚Äù. ‚ÄúNo, cinco es demasiado bajo‚Äù, dijo Allan. ‚ÄúEst√° bien. As√≠ que volvimos a estimar Como jugador, me gustar√≠a poder usar el sistema para jugar contra otro humano en mi computadora‚Äù. Despu√©s de dos rondas de planificaci√≥n de p√≥quer, llegaron a un acuerdo para llamar a esa historia tres. ‚ÄúLa siguiente es como un jugador, me gustar√≠a que la apariencia del juego fuera est√©ticamente agradable‚Äù, ley√≥ Delaney. ‚ÄúFinalmente. Una de mis historias‚Äù, dijo Rose, la artista. ‚ÄúS√≠, excepto que no me gusta la forma en que est√° escrita esta historia‚Äù, dijo Sasha. ‚ÄúEs un poco vago, y es grande. Me gusta la siguiente historia: como jugador, me gustar√≠a poder","service":"user-service"}
{"level":"info","message":"elige entre un tablero de madera y piezas y un tablero de metal y piezas. ¬øQu√© m√°s quer√≠amos decir con 'est√©ticamente agradable'?‚Äù ‚ÄúTen√≠a que ver con la apariencia general del juego‚Äù, respondi√≥ Frank. ‚ÄúProbablemente no tendremos muchos men√∫s, pero queremos que se vean bien. Queremos que los elementos del men√∫ est√©n en lugares l√≥gicos. Queremos una pantalla de inicio atractiva cuando se carga el juego. El tablero y las piezas son toda la interfaz de usuario. Probablemente habr√° algo de arte de fondo detr√°s del tablero de juego. Rose necesita tiempo para hacer eso.‚Äù ‚ÄúEsos son buenos. ¬øPodemos dividir algunos de ellos como historias separadas? pregunt√≥ Sasha. ‚ÄúPodr√≠amos‚Äù, dijo Delaney, ‚Äúpero podr√≠a ser dif√≠cil. Creo que los elementos del men√∫ deben desarrollarse en el contexto de cualquier caracter√≠stica que presente la necesidad de un nuevo men√∫ o elemento de men√∫. Rose, ¬øqu√© te parece tener una historia para la pantalla de inicio y otra para el arte de fondo? Obviamente, las har√≠a por separado de todos modos‚Äù. El equipo avanz√≥ r√°pidamente en el siguiente conjunto de historias. ‚Äú¬øQu√© hacemos con esta historia?‚Äù pregunt√≥ Prasad, se√±alando una tarjeta que dec√≠a Como jugador, a veces me gustar√≠a pedir una pista. \"¬øQu√© quieres decir?\" \"Si hemos hecho el motor de movimiento, esta historia es realmente simple. Todo lo que tiene que hacer es pedirle al motor de movimiento que sugiera un nuevo movimiento, pero para el jugador en lugar de la computadora. Eso ser√≠a trivial. Pero si no tenemos el motor de movimiento escrito, esta historia tiene que ser al menos tan grande como escribir todo el motor de movimiento\". dijo. \"S√≠, pero no creo que eso sea un problema en este caso\", dijo Sasha. ‚ÄúDesarrollar el motor de movimiento antes de la funci√≥n de pista parece la forma natural de programar esas historias. La dependencia no se interpondr√° en nuestro camino. Podemos ignorarlo. O si nos preocupa olvidar esta dependencia, podemos anotarla en la tarjeta. De cualquier manera, la historia se puede estimar asumiendo que el motor de movimiento existe‚Äù. Todos estuvieron de acuerdo, y la historia se estim√≥ en un punto de la historia. ‚Äú¬øQu√© hubi√©ramos hecho si realmente hubi√©ramos querido tener pistas antes del motor de movimiento?‚Äù. A veces no puedes deshacerte de una dependencia y tienes que vivir con ella, como antes de empezar a usar un proceso √°gil‚Äù, explic√≥ Carlos. ‚ÄúLa mayor√≠a de las veces, sin embargo, puedes deshacerte de √©l. Si quisi√©ramos deshacernos de esta dependencia, podr√≠a escribir el c√≥digo que le permite a un usuario solicitar una pista, mostrar esa pista y hacer el movimiento para el usuario si le gusta. Para obtener la pista, tendr√≠as que","service":"user-service"}
{"level":"info","message":"un objeto en el sistema llamado HintGenerator. Eventualmente, HintGenerator llamar√≠a al motor de movimiento para obtener una buena pista. Pero por ahora, puede hacer que devuelva el primer espacio abierto o un espacio abierto aleatorio. De esa forma, terminar√≠a con la historia de pistas incluso antes de iniciar el motor de movimientos‚Äù. ‚ÄúTendr√≠amos que acordarnos de regresar m√°s tarde y hacer que HintGenerator realmente llame al motor de movimientos‚Äù, dijo Allan. \"Podr√≠amos hacer otra historia que fuera algo as√≠ como un jugador de Asa, quiero obtener buenas pistas, en lugar de solo pistas\". \"Eso es probablemente un cambio de una l√≠nea\", dijo Allan. ‚ÄúEliminar√≠amos cualquier cosa que haga HintGenerator para encontrar un espacio vac√≠o y llamar√≠amos al motor de movimiento en su lugar. Tendr√≠amos que estimar eso como uno, lo mismo que la historia original. No parece que ganemos nada.‚Äù ‚ÄúAh,‚Äù dijo Carlos, ‚Äúaqu√≠ es donde a veces es √∫til para nosotros tener tarjetas que digan cero en lugar de solo los n√∫meros que tenemos ahora. Debido a que tenemos que regresar y conectar HintGenerator al c√≥digo correcto, queremos una tarjeta de historia para que no lo olvidemos. Por otro lado, es realmente tan simple que queremos llamarlo cero‚Äù. Carlos le dio a cada persona otra carta de p√≥quer de planificaci√≥n, esta vez con un cero en ella. Me he estado aferrando a esto porque no quer√≠a que los usaras antes de que habl√°ramos de lo que ser√≠a una historia de punto cero. Ahora, cada persona ten√≠a una baraja de cartas que conten√≠a 0, 1, 2, 3, 5, 8, 13, 20, 40 y 100. terminado, sin embargo. ¬øBien?\" pregunt√≥ Frank. ‚ÄúS√≠, mantendremos eso como una historia de un punto‚Äù, respondi√≥ Sasha. La estimaci√≥n continu√≥ de esta manera hasta que el equipo calcul√≥ cada una de las historias que hab√≠an escrito. Las historias y sus estimaciones se muestran en la Tabla 23.5. ‚ÄúEntonces, ¬øad√≥nde vamos desde aqu√≠? Necesitamos una iteraci√≥n m√°s de dos semanas en Deep Black & White antes de enviarlo al editor‚Äù, dijo Frank. ‚ÄúMientras todos los dem√°s est√°n trabajando en eso, voy a entrevistar a algunos posibles compradores de este juego‚Äù, dijo Delaney. ‚ÄúQuiero ver qu√© caracter√≠sticas son las m√°s importantes‚Äù. ‚Äú¬øEso llevar√° mucho tiempo?‚Äù. ‚ÄúNo, terminar√© antes del final de la iteraci√≥n‚Äù, dijo Delaney. ‚ÄúVolvamos a encontrarnos en dos semanas, justo despu√©s de que enviemos Deep Black & White y despu√©s de que Frank nos lleve a todos a celebrar que lo terminamos‚Äù. ‚ÄúSuena genial. Me pondr√© manos a la obra con esa celebraci√≥n. ¬øEst√°n bien las hamburguesas, Delaney? ¬øO deber√≠amos derrochar en pizza?","service":"user-service"}
{"level":"info","message":"En la tranquilidad de la ma√±ana del d√≠a siguiente, Delaney se sent√≥ en su escritorio en el nuevo espacio abierto del equipo, preparando el cuestionario que usar√≠a para entrevistar a posibles compradores de juegos. Frank hab√≠a pedido reunirse con ella en alg√∫n momento del d√≠a para que pudiera explicarle c√≥mo iba a priorizar las funciones. Como gerente de producto, Frank tomar√≠a las decisiones finales sobre lo que ser√≠a en el producto, pero Delaney sab√≠a que confiar√≠a mucho en su investigaci√≥n. Quer√≠a estar preparada para reunirse con √©l. Cuando lleg√≥ Frank, Delaney casi hab√≠a terminado el cuestionario. ‚ÄúBuenos d√≠as, Delaney‚Äù, salud√≥ Frank al analista. ‚Äú¬øTodav√≠a tienes tiempo para reunirte esta ma√±ana?‚Äù ‚ÄúAbsolutamente. Vine temprano para terminar el cuestionario que quiero enviar. Me gustar√≠a mostr√°rtelo‚Äù. ‚ÄúHag√°moslo‚Äù, dijo Frank mientras acercaba una silla. \"Mu√©strame lo que tienes.\"","service":"user-service"}
{"level":"info","message":"‚ÄúImprim√≠ esto hace aproximadamente media hora‚Äù, dijo Delaney mientras le entregaba a Frank la p√°gina que se muestra en la Tabla 23.6. ‚ÄúHe agregado m√°s preguntas desde que imprim√≠ eso. Pero es suficiente para darte una idea de lo que enviar√©.","service":"user-service"}
{"level":"info","message":"Frank revis√≥ la p√°gina que Delaney le hab√≠a dado y luego pregunt√≥: ‚ÄúParece que est√°s haciendo cada pregunta dos veces. ¬øPor qu√©?‚Äù ‚ÄúLa primera forma de la pregunta se llama forma funcional; la segunda es la forma disfuncional para indicar que significa que una caracter√≠stica no est√° presente. Hacer estas dos preguntas nos da una mejor comprensi√≥n que simplemente preguntar \"¬øCu√°nto quiere esta caracter√≠stica?\" Nos dice c√≥mo se sentir√° el usuario si la caracter√≠stica est√° ah√≠ y c√≥mo se sentir√° si no es as√≠\". un ejemplo de c√≥mo eso podr√≠a ser importante?‚Äù ‚ÄúClaro. Supongamos que preguntamos: \"¬øC√≥mo te sientes si puedes deshacer y rehacer movimientos?\" y un usuario dice que espera poder hacer eso. Entonces le preguntamos, '¬øC√≥mo","service":"user-service"}
{"level":"info","message":"¬øSientes que no puedes deshacer y rehacer movimientos?‚Äô y ella dice que eso no le gustar√≠a. Eso nos dice que la caracter√≠stica es obligatoria para este usuario. Espera poder deshacer y rehacer; a ella no le gusta si no puede\". \"Est√° bien, estoy contigo hasta ahora\". esa idea. Tambi√©n hacemos la forma disfuncional de esa pregunta, \"¬øC√≥mo te sientes si no hay un tutorial interactivo?\" y ella dice neutral al respecto. Esto es lo que llamamos una caracter√≠stica atractiva, o excitante. Hemos encontrado una caracter√≠stica que el usuario no esperaba obtener o sin la que podr√≠a vivir. Pero ella nos dijo que le gustar√≠a la funci√≥n. As√≠ que hemos aprendido que esta funci√≥n no es obligatoria, pero como es una que le gustar√≠a, es posible que est√© dispuesta a pagar m√°s por ella\". , como hicimos en Deep Black & White? pregunt√≥ Frank. ‚ÄúNo realmente,‚Äù dijo Delaney. ‚ÄúUna sola escala como esa nos dice qu√© tan fuerte valora un usuario una caracter√≠stica. No nos dice qu√© tan fuerte reaccionar√≠a el usuario ante la ausencia de la funci√≥n. No le dar√≠a mucha prioridad a las ruedas si me preguntas sobre las caracter√≠sticas de un autom√≥vil, pero me enfadar√≠a si las quitaras\". \"¬øA qui√©n le vas a dar el cuestionario?\" 500 miembros de algunos clubs de juegos que conozco donde juegan Havannah. Muchos est√°n en Europa o en las ciudades m√°s grandes de EE. UU. Estamos ofreciendo un cup√≥n de $10 de descuento en uno de nuestros juegos existentes a cualquiera que responda. Espero obtener cincuenta o m√°s respuestas. Tambi√©n voy a hacer algunas entrevistas telef√≥nicas\". \"¬øNo ser√°n muchas preguntas para que las personas respondan si tiene dos preguntas para cada historia de usuario?\" pregunt√≥ Frank.","service":"user-service"}
{"level":"info","message":"\"No precisamente. Puedo agrupar algunas de las historias de usuarios que identificamos en temas. Por ejemplo, tenemos dos historias de usuarios sobre m√∫sica de fondo. Se pueden combinar en un tema de m√∫sica de fondo. Combinar√© el arte de fondo y las historias de la pantalla de inicio en un tema sobre el juego est√©ticamente agradable. Del mismo modo, no voy a perder el tiempo preguntando sobre c√≥mo guardar juegos y restaurar juegos. Sabemos que esas son caracter√≠sticas obligatorias\". \"Eso es genial. Quiero asegurarme de que siga siendo ligero y f√°cil. ¬øC√≥mo usaremos las respuestas que obtengas?‚Äù ‚ÄúQuiero separar nuestras funciones en tres categor√≠as. Primero est√°n las caracter√≠sticas que debemos tener. Estas son caracter√≠sticas de costo de entrada como guardar y restaurar juegos. La segunda categor√≠a son caracter√≠sticas que cuanto m√°s tengamos, mejor. Sospecho que cosas como jugar niveles estar√°n en esta categor√≠a. Cuantos m√°s niveles de juego, como fuerte, medio y d√©bil, mejor. La tercera categor√≠a son los excitadores. Estos","service":"user-service"}
{"level":"info","message":"son caracter√≠sticas que la mayor√≠a de los usuarios no esperan, pero una vez que las ven, las quieren. La combinaci√≥n correcta de caracter√≠sticas de las dos √∫ltimas categor√≠as m√°s todas las caracter√≠sticas necesarias que se deben tener pueden sumar para crear un producto convincente‚Äù. Antes de que Frank pudiera responder, Allan hizo rodar su silla junto a Frank y Delaney. \"Buenos d√≠as\", dijo. ‚ÄúNo pude evitar escuchar parte de eso. Suena realmente interesante. ¬øEl resto del equipo tendr√° acceso a los resultados de tus entrevistas?‚Äù ‚ÄúAbsolutamente, Allan.‚Äù ‚ÄúBien. Sabes, incluso podr√≠a querer escuchar una o dos de tus entrevistas telef√≥nicas para escuchar lo que los usuarios tienen que decir. ¬øEstar√≠a bien?\" pregunt√≥ Allan. ‚ÄúAbsolutamente,‚Äù dijo Delaney. ‚ÄúComprender a nuestra audiencia es algo de lo que todo el equipo realmente se beneficia. Cuanto m√°s usted o los otros t√©cnicos quieran involucrarse en esto, mejor desde mi perspectiva. Me beneficiar√© de sus conocimientos y usted se beneficiar√° de escuchar lo que dicen los clientes‚Äù. ‚ÄúEstoy de acuerdo‚Äù, dijo Allan. ‚ÄúNo puedo hacer ninguna llamada contigo hoy. Necesito corregir un error en el motor de puntuaci√≥n de Deep Black & White. Pero cualquier otro d√≠a de esta semana cuando est√©s haciendo llamadas, h√°zmelo saber.‚Äù ‚ÄúLo har√©,‚Äù dijo Delaney. ‚ÄúParece que tienes un plan s√≥lido elaborado,‚Äù dijo Frank. \"Esto es emocionante. ¬øA√∫n tendr√°s algunos resultados la pr√≥xima semana?‚Äù ‚ÄúDefinitivamente. El grupo de TI va a poner el cuestionario en nuestro sitio web ma√±ana. Podr√≠amos empezar a obtener resultados preliminares en cualquier momento despu√©s de eso.‚Äù ‚ÄúGenial. Gracias por mostrarme esto‚Äù, dijo Frank mientras se levantaba y se disculpaba. Iteraci√≥n y planificaci√≥n del lanzamiento, ronda 1 Dos semanas despu√©s de la reuni√≥n en la que escribieron y estimaron las historias de los usuarios, el equipo se reuni√≥ nuevamente en una sala de conferencias contigua a su espacio de trabajo abierto. Bynine, todo el equipo estaba presente, incluso Rose, que hab√≠a comenzado a dejar a Brooke en el preescolar cinco minutos antes para que estuviera en la oficina cuando el equipo comenzara sus reuniones diarias. ‚ÄúTenemos tres objetivos para hoy‚Äù, comenz√≥ Carlos. ‚ÄúPrimero, vamos a planificar su iteraci√≥n inicial de dos semanas. Despu√©s de eso, Delaney nos dir√° lo que descubri√≥ durante su investigaci√≥n de productos sobre lo que quieren los posibles compradores. Finalmente, vamos a hacer una suposici√≥n inicial muy aproximada de c√≥mo ser√° su plan y calendario de lanzamiento. ¬øAlguna pregunta?","service":"user-service"}
{"level":"info","message":"Sasha esper√≥ unos segundos para ver si hab√≠a alguna pregunta. No los hubo. Planificaci√≥n de la primera iteraci√≥n ‚Äú¬øEntonces, qu√© debemos desarrollar primero?‚Äù pregunt√≥ Rose. ‚ÄúQuiero comenzar con el motor de movimiento‚Äù, dijo Allan. ‚ÄúEse es nuestro mayor riesgo‚Äù. ‚ÄúNo tengo ning√∫n argumento‚Äù, dijo Sasha, la otra programadora del equipo. ‚Äú¬øHay algo que pueda hacer para ayudar, Allan? Normalmente, todo el trabajo de inteligencia artificial es tuyo.‚Äù ‚ÄúS√≠, hay cosas que puedes hacer. Gracias‚Äù, dijo Allan. ‚ÄúEso me ayudar√≠a mucho, porque me preocupa lo dif√≠cil que podr√≠a ser hacer el motor fuerte‚Äù. ‚ÄúEntonces, comencemos con la historia. Como jugador, puedo jugar contra un motor d√©bil que reconoce anillos. ¬øNo es eso lo que quieres hacer primero, Allan? pregunt√≥ Delaney. ‚ÄúS√≠, lo es. Lo primero que debemos hacer es codificar las clases que realizar√°n un seguimiento del estado del tablero, un seguimiento de qui√©n es el turno y cosas por el estilo. Sasha, definitivamente puedes ayudar en eso‚Äù. ‚ÄúEst√° bien. ¬øCu√°nto tiempo crees que tomar√°? ¬øUn par de d√≠as? ‚ÄîUn par de d√≠as completos. Digamos diecis√©is horas‚Äù, respondi√≥ Allan. ‚ÄúAllan, queremos capturar cada tarea en una tarjeta de notas. Escr√≠balo en una tarjeta y ponga diecis√©is en la esquina de la tarjeta para que no olvidemos el c√°lculo‚Äù, dijo Carlos. Allan escribi√≥ la Tarjeta de tareas 23.1.","service":"user-service"}
{"level":"info","message":"Clases de manejo de estado de c√≥digo.16 horas","service":"user-service"}
{"level":"info","message":"‚Äú¬øDeber√≠a poner mis iniciales en √©l para que recordemos que esta es mi tarjeta?‚Äù ‚ÄúNo. Parece que probablemente ser√°s t√∫ quien lo haga. Pero funciona mejor si no asignamos trabajo a personas espec√≠ficas en este momento‚Äù. ‚ÄúVoy a necesitar probar esto‚Äù, dijo Prasad. ‚ÄúNo deber√≠a llevar mucho tiempo, pero este es el primer c√≥digo de este proyecto y quiero asegurarme de configurarlo correctamente. Voy a decir que las pruebas llevar√°n diez horas.","service":"user-service"}
{"level":"info","message":"Escribir pruebas automatizadas para clases de manejo de estado. 10 horas","service":"user-service"}
{"level":"info","message":"‚ÄúCarlos, me dijiste antes que necesito dividir mi trabajo en partes peque√±as‚Äù, dijo Allan. ‚ÄúNo puedo simplemente decir que escribir el motor de movimiento para los anillos tomar√° dos semanas, ¬øverdad?‚Äù ‚ÄúNo, no puedes. Cuando estamos identificando tareas, queremos que duren entre una y diecis√©is horas. Idealmente, deber√≠as poder terminar una cada d√≠a, lo que significa que el promedio deber√≠a ser de cinco o seis horas, porque siempre tenemos algunas otras cosas que hacer cada d√≠a.‚Äù ‚ÄúEn ese caso,‚Äù dijo Allan, ‚Äútal como planeo escribir esto es tener primero un motor de movimiento que sea lo suficientemente inteligente como para jugar seis hex√°gonos seguidos para formar un anillo. No habr√° un oponente que intente detener el motor. Har√© que el motor arranque en un lugar aleatorio en el tablero y descubra c√≥mo hacer un anillo en seis movimientos. Luego, lo escribir√© para que intente hacer un anillo incluso si un oponente intenta bloquear el anillo. Luego cambiar√© al lado defensivo de los anillos. Har√© que el motor intente bloquear a otro jugador que est√© tratando de hacer un anillo. Eso ser√° todo para esta historia\". \"Est√° bien, escrib√≠ una tarjeta de tarea que dice Que el motor de movimiento persiga un anillo desbloqueado. Eso es lo que dijiste que quer√≠as hacer primero‚Äù, dijo Sasha. ‚ÄúEso probablemente me lleve la mayor parte del d√≠a. Pon seis horas en esa tarjeta, por favor‚Äù, dijo Allan. ‚ÄúAllan, no te ofendas, pero siempre eres optimista al arrancar un nuevo motor‚Äù, dijo Rose, la artista. ‚ÄúS√≠, tienes raz√≥n. Ser√° mejor que dupliques eso‚Äù, estuvo de acuerdo Allan. Sasha tach√≥ las seis y escribi√≥ doce horas en la tarjeta. Luego, Carlos dirigi√≥ la discusi√≥n a trav√©s de estimaciones de las otras tareas que Allan hab√≠a identificado. ‚Äú¬øHay otras tareas que no hemos identificado para esta historia?‚Äù pregunt√≥. ‚Äú¬°Tal vez queramos incluir algo de tiempo para las pruebas!‚Äù dijo Prasad. ‚ÄúSi Allan puede darme el c√≥digo despu√©s de cada una de las tareas que identific√≥, puedo definir y automatizar las pruebas junto con √©l. Cualquier error que encuentre, lo escuchar√° mientras el c√≥digo est√© fresco.","service":"user-service"}
{"level":"info","message":"su mente. Escrib√≠ las tareas en tarjetas mientras Allan describ√≠a c√≥mo codificar√≠a esto, pero a√∫n no las he estimado. ¬øPodemos hacer eso juntos ahora?‚Äù Cuando terminaron de discutir la historia Como jugador, puedo jugar contra un motor d√©bil que reconoce anillos, hab√≠an escrito las tarjetas de tareas resumidas en la Tabla 23.7.","service":"user-service"}
{"level":"info","message":"‚ÄúEso es alrededor de ochenta y cuatro horas en esta iteraci√≥n. El trabajo se divide entre Allan, Sasha y Prasad‚Äù, dijo Carlos. ‚ÄúSeg√∫n lo que he visto despu√©s de estar aqu√≠ un par de d√≠as, creo que deber√≠as planificar seis horas por d√≠a por persona de trabajo productivo. El resto de cada d√≠a se dedica a responder correos electr√≥nicos, hablar con otros equipos de proyectos, sus propias reuniones diarias, el medio d√≠a cada dos semanas lo dedicaremos a hacer esta planificaci√≥n, y as√≠ sucesivamente.‚Äù ‚ÄúSeis me parece razonable.‚Äù ‚ÄúYo tambi√©n . Podr√≠a estar m√°s cerca de cinco, pero puedo tratar de obtener seis al d√≠a en este proyecto y descubrir c√≥mo hacer que eso suceda al no hacer algunas de las otras peque√±as cosas que consumen mi tiempo todos los d√≠as‚Äù, dijo Sasha. ‚ÄúAhora que He dividido esa primera historia en tareas‚Äù, dijo Carlos, ‚Äúla pregunta que deben hacerse es si pueden comprometerse a terminar la historia‚Äù. ‚Äú¬øLa historia o las tareas?‚Äù pregunt√≥ Frank. \"¬øCon cu√°l nos comprometemos?\"","service":"user-service"}
{"level":"info","message":"‚ÄúBuena pregunta, Frank‚Äù, dijo Carlos. ‚ÄúTe comprometes con la historia. Identificamos las tareas como una forma de ver cu√°nto trabajo implica y de ayudarnos a hacer el compromiso. Debido a que te est√°s comprometiendo con la historia, no solo con las tareas, es importante que pienses en esto como un compromiso de todo el equipo. Al final de la iteraci√≥n, no quiero que Sasha diga que ha terminado con las clases de gesti√≥n estatal pero que Allan a√∫n no ha terminado. Eso no te har√≠a ning√∫n bien. Puedes pensar en tareas, pero te comprometes con las historias.‚Äù ‚ÄúInteresante,‚Äù dijo Frank. ‚ÄúMe gusta la distinci√≥n‚Äù. ‚ÄúPuedo comprometerme con esta historia‚Äù, dijo Prasad. ‚ÄúTengo treinta y seis horas de tareas de prueba. Con seis horas al d√≠a durante diez d√≠as, tengo sesenta horas disponibles.‚Äù ‚ÄúY entre Allan y yo, tenemos cuarenta y ocho horas de tareas. Eso no ser√° un problema‚Äù, dijo Sasha. ‚ÄúGenial. Tenemos nuestra primera historia planeada y nos hemos comprometido con ella‚Äù, dijo Frank. ‚ÄúPasemos a la siguiente historia m√°s importante‚Äù. ‚ÄúFrank, antes de hacer eso, hagamos una lista de la disponibilidad de todos para las pr√≥ximas dos semanas‚Äù, dijo Carlos. ‚ÄúDijimos que asumiremos seis horas por d√≠a, pero ¬øalguien est√° planeando vacaciones o alg√∫n tiempo fuera de la oficina?‚Äù ‚ÄúMe tomar√© dos d√≠as libres. Tengo un par de pinturas en exhibici√≥n en San Francisco, as√≠ que quiero ir all√≠ para eso‚Äù, dijo Rose. ‚ÄúProbablemente me tomar√© un d√≠a libre. Ya sea un viernes o un lunes‚Äù, dijo Allan. ‚ÄúMi mam√° y mi pap√° van a estar en la ciudad la pr√≥xima semana. ¬°Demasiado tiempo con ellos me vuelve loco, as√≠ que trabajar√© m√°s!‚Äù Delaney brome√≥. Durante esto, Carlos hab√≠a tomado las notas que se muestran en la Tabla 23.8 en la pizarra en el frente de la sala. ‚ÄúEsto nos ayudar√° a saber cu√°nto podemos comprometernos a medida que identificamos las pr√≥ximas historias en las que trabajaremos‚Äù, explic√≥ Carlos.","service":"user-service"}
{"level":"info","message":"‚ÄúGracias, Carlos‚Äù, dijo Frank. ‚Äú¬øQu√© es lo siguiente m√°s importante que hay que hacer?‚Äù. ‚ÄúRealmente me gustar√≠a que el juego fuera humano contra humano‚Äù, dijo Delaney. ‚ÄúEse es un buen paso‚Äù, estuvo de acuerdo Allan. ‚ÄúNos har√≠a programar la l√≥gica que reconoce cuando se ha ganado el juego. Podr√≠amos agregar f√°cilmente las funciones de deshacer y rehacer mientras programo un motor de primer movimiento adecuado‚Äù. .Todos estuvieron de acuerdo. Cuando terminaron, identificaron las tareas enumeradas en la Tabla 23.9.","service":"user-service"}
{"level":"info","message":"‚ÄúEntonces, como equipo, ¬øpueden comprometerse a completar esta historia adem√°s de la primera?‚Äù pregunt√≥ Carlos. ‚ÄúEspera, ¬øesta historia no abarca otra historia que escribimos? Tenemos uno que dice Como jugador, quiero que la computadora reconozca una forma ganadora. Hemos incluido eso como parte de jugar contra un humano‚Äù, dijo Prasad. ‚Äú¬øDeber√≠amos quitarlo?‚Äù ‚ÄúTodav√≠a no lo s√©. Lo incluimos por accidente. Veamos si podemos comprometernos con el trabajo que acabamos de identificar. Si no podemos, podemos eliminar el hecho de que la computadora reconozca las formas ganadoras y dejar que los jugadores decidan cu√°ndo termina un juego‚Äù, dijo Delaney. \"¬øQu√© opinas? ¬øPodemos comprometernos con esta historia tambi√©n?‚Äù ‚ÄúS√≠‚Äù, dijeron Allan y Sasha casi al un√≠sono. ‚ÄúMe parece bien‚Äù, dijo Rose. ‚ÄúApenas‚Äù, dijo Prasad. ‚Äú¬øQu√© est√°s pensando, Prasad?‚Äù Carlos le pregunt√≥ al probador","service":"user-service"}
{"level":"info","message":"‚ÄúEntre los dos pisos, estoy a las cincuenta horas. S√© que estamos diciendo que tengo sesenta, pero eso me parece alto. Tendremos que ver c√≥mo va\". \"Ten en cuenta que las tareas de prueba no se asignan espec√≠ficamente a ti, Prasad\", dijo Carlos. ‚ÄúCualquiera puede hacerlos. Si te atrasas un poco, se espera que otros retomen las tareas de prueba.‚Äù ‚ÄúAbsolutamente. Usualmente hago algunas pruebas‚Äù, dijo Rose. ‚ÄúQuiero comenzar con algunos dise√±os de placa en esta iteraci√≥n, pero eso puede esperar si necesito probarlo en su lugar‚Äù. ‚ÄúGracias, Rose‚Äù, dijo Prasad. ‚ÄúIncluso sin ayuda, creo que puedo comprometerme con esta historia. Pero estoy empezando a estar casi lleno‚Äù. Luego, la discusi√≥n pas√≥ a la siguiente historia: Como jugador, puedo jugar contra un motor d√©bil que reconoce puentes. Cuando terminaron de discutir lo que estar√≠a involucrado en esta historia y la cantidad de trabajo involucrado, el equipo hab√≠a identificado las tareas y estimaciones que se muestran en la Tabla 23.10.","service":"user-service"}
{"level":"info","message":"\"¬øPodemos comprometernos con esta historia tambi√©n?\" Rose pregunt√≥. Frank not√≥ y apreci√≥ que este era uno de los miembros del equipo que preguntaba a sus compa√±eros si pod√≠an comprometerse. Le gust√≥ mucho m√°s eso que preguntarles √©l mismo, como gerente de producto, \"¬øPueden comprometerse?\" arriba.\" Dibuj√≥ la Tabla 23.11.","service":"user-service"}
{"level":"info","message":"‚ÄúNo s√© el resto de ustedes, pero puedo comprometerme a cuatro horas durante las pr√≥ximas dos semanas‚Äù, brome√≥ Rose. ‚ÄúCon dos programadores cada uno recibiendo treinta horas a la semana y haciendo una iteraci√≥n de dos semanas, creo que estamos bien en el lado de la programaci√≥n‚Äù, dijo Sasha. ‚ÄúEstoy de acuerdo‚Äù, dijo Allan. ‚ÄúSin embargo, no me siento c√≥modo aceptando m√°s‚Äù, dijo Sasha. ‚ÄúY adem√°s, son demasiadas pruebas solo para Prasad‚Äù. ‚ÄúPlaneo ayudar con algunas pruebas‚Äù, dijo Rose. ‚ÄúYo tambi√©n‚Äù, dijo Delaney. ‚ÄúProbablemente no pueda hacer nada de la automatizaci√≥n, pero puedo ayudar a especificar buenos casos de prueba‚Äù. ‚ÄúCon un poco de ayuda, estoy bien en las horas de prueba‚Äù, dijo Prasad. ‚ÄúCreo que podemos comprometernos con esto.‚Äù ‚Äú¬øTodos est√°n de acuerdo, entonces?‚Äù pregunt√≥ Frank. Todo el mundo lo estaba.","service":"user-service"}
{"level":"info","message":"‚ÄúMe gustar√≠a agregar algunas tareas m√°s a la iteraci√≥n, solo para asegurarme de tenerlas en cuenta‚Äù, dijo Delaney. ‚ÄúRealmente necesito hacer algunas entrevistas m√°s con jugadores. Todav√≠a no hemos hablado sobre mi investigaci√≥n de productos, pero surgieron algunas cosas que quiero seguir. Agregar doce horas m√°s o menos para m√≠ de investigaci√≥n adicional de productos ser√≠a genial. Sin embargo, todav√≠a puedo dedicar la mayor parte de mi tiempo a las pruebas‚Äù. ‚ÄúY me gustar√≠a hacer algunos dibujos preliminares de tableros y piezas para que podamos ponerlos en circulaci√≥n. Siempre toma un tiempo obtener suficientes comentarios sobre eso. Me gustar√≠a dibujar cuatro juegos de tablero y piezas en cuatro horas cada uno‚Äù. ‚ÄúMe parecen razonables‚Äù, dijo Frank. \"Vamos a agregar esos\". \"Entonces, con todo lo que hemos enumerado, ¬ønos sentimos c√≥modos comprometi√©ndonos con esto?\", Pregunt√≥ Sasha. ‚ÄúSon 224 horas en total ahora. Con cinco de nosotros en el proyecto, Allan, Prasad, Rose, Delaney y yo, esto funciona m√°s cerca de cinco horas al d√≠a. Pero eso es si todo el trabajo y cada uno de nosotros es intercambiable. No lo estamos.‚Äù ‚ÄúAdem√°s‚Äù, dijo Carlos, ‚Äúes mejor agregar algo a mitad de la iteraci√≥n que dejar caer algo‚Äù. . Todos se comprometieron a que, como equipo, entregar√≠an esas tres historias en dos semanas. ‚ÄúFant√°stico‚Äù, dijo Frank. ‚ÄúEs genial pensar que haremos tanto progreso visible tan r√°pido. Normalmente, toma mucho m√°s tiempo antes de que tengamos algo que mostrar.‚Äù ‚ÄúTomemos un descanso de quince minutos,‚Äù dijo Carlos. ‚ÄúCuando volvamos, quiero pasar al segundo objetivo de esta reuni√≥n: la planificaci√≥n del lanzamiento. Quiero tener una estimaci√≥n inicial de cu√°nto tiempo creemos que llevar√° este proyecto‚Äù.","service":"user-service"}
{"level":"info","message":"Planificaci√≥n del lanzamiento Cuando todos regresaron y se sentaron alrededor de la mesa, Frank comenz√≥ la reuni√≥n. ‚ÄúDelaney, cu√©ntenos sobre la investigaci√≥n del producto y lo que encontr√≥‚Äù. ‚ÄúLo que hice‚Äù, dijo Delaney, ‚Äúfue enviar m√°s de 500 invitaciones por correo electr√≥nico para completar un cuestionario basado en la web. Tambi√©n habl√© por tel√©fono con treinta y cinco posibles compradores de un juego como este. En total, obtuvimos respuestas de setenta y ocho compradores potenciales. El prop√≥sito de la encuesta era averiguar qu√© caracter√≠sticas que hemos identificado son obligatorias; solo necesitan estar en el juego. Tambi√©n queremos saber qu√© caracter√≠sticas son emocionantes. Es posible que no sea necesario que est√©n en el juego, pero incluir algunos excitadores realmente hace que el juego sea m√°s atractivo y puede permitirnos cobrar un precio m√°s alto por √©l. Finalmente, hay algunas caracter√≠sticas que llamamos lineales. Cuanto m√°s presente una caracter√≠stica lineal en un producto, m√°s gente pagar√° por √©l. Ejemplos de caracter√≠sticas lineales son los caballos de fuerza en un autom√≥vil, la cantidad de canales en la televisi√≥n satelital","service":"user-service"}
{"level":"info","message":"y el n√∫mero de niveles de juego en un juego. No explicar√© aqu√≠ exactamente c√≥mo hice la investigaci√≥n. Pero si est√° interesado, puedo indicarle un cap√≠tulo de un libro [consulte el Cap√≠tulo 11, ‚ÄúPriorizar la conveniencia‚Äù]. Sin embargo, he resumido los resultados en esta p√°gina‚Äù, concluy√≥ Delaney mientras distribu√≠a las p√°ginas que mostraban la tabla 23.12.","service":"user-service"}
{"level":"info","message":"‚ÄúDelaney, aqu√≠ hay muchos menos elementos que historias‚Äù, dijo Prasad. ‚Äú¬øPor qu√©?‚Äù ‚ÄúCuanto m√°s largo es el cuestionario, menor es la tasa de respuesta‚Äù, dijo Delaney. ‚ÄúAs√≠ que fusion√© las historias seg√∫n mi juicio. Por ejemplo, \"est√©ticamente agradable\" en esa tabla cubre las tres historias que ten√≠amos sobre gr√°ficos agradables, una pantalla de inicio y la capacidad de cambiar el tablero y las piezas entre una apariencia de metal y una de madera.","service":"user-service"}
{"level":"info","message":"mirar. Por otro lado, si combino demasiadas historias en una sola pregunta, las respuestas que obtengamos pueden no ser muy √∫tiles.‚Äù ‚ÄúPuedo relacionar las primeras tres columnas con sus descripciones de los tres tipos de caracter√≠sticas, Delaney. Pero, ¬øqu√© significan 'indiferente', 'inverso' y 'cuestionable'?‚Äù, pregunt√≥ Rose. ‚ÄúBuena pregunta. Indiferente es f√°cil; simplemente significa que la persona no ten√≠a una gran preferencia de ninguna manera‚Äù, respondi√≥ Delaney. ‚ÄúDebido a c√≥mo se presentan las preguntas, es posible que no podamos interpretar una opini√≥n ocasional. Por ejemplo, esto podr√≠a suceder si alguien dice que no le gusta la m√∫sica de fondo pero que tambi√©n le desagrada cuando no hay m√∫sica de fondo. Eso pasa; la gente se confunde o malinterpreta las preguntas cuando se apresura. Notar√°s que los porcentajes de inverso y cuestionable son bastante bajos.‚Äù ‚ÄúDelaney, ¬øestoy leyendo esto bien?‚Äù pregunt√≥ Rosa. ‚ÄúDice que los oponentes d√©biles y de fuerza media son obligatorios. Pero has dicho que un oponente fuerte es tanto indiferente como obligatorio. ¬øComo puede ser? ¬øPor qu√© no elegir la respuesta con el porcentaje m√°s alto?‚Äù","service":"user-service"}
{"level":"info","message":"‚ÄúS√≠, los oponentes d√©biles y medianos son obligatorios. La raz√≥n por la que vemos dos picos en los valores de un oponente fuerte es que probablemente estamos vendiendo a dos audiencias: los que ya juegan Havannah y son buenos en eso y los que no. Aquellos que son buenos en eso consideran que un oponente fuerte es obligatorio si van a comprar. Los jugadores m√°s nuevos nos dicen que estar√°n contentos con un jugador de fuerza media‚Äù. ‚ÄúLo que me llama la atenci√≥n, Delaney, es que no hay muchas caracter√≠sticas en esta lista que su p√∫blico considere emocionantes‚Äù, dijo Frank m√°s como una pregunta que como una afirmaci√≥n. \"Verdadero. Pero el hecho de que no haya muchos estimulantes no significa que el producto en s√≠ no sea emocionante‚Äù, respondi√≥ el analista. ‚ÄúRecuerde que los excitadores son caracter√≠sticas inesperadas. Si me subo a un nuevo Porsche, probablemente haya muy poco all√≠ que sea realmente inesperado. Pero el auto en s√≠ mismo ser√≠a muy emocionante. Pero estoy de acuerdo con el punto que creo que estabas haciendo. No hemos identificado todas las funciones que necesita este producto. Cada producto debe tener al menos uno o dos excitadores, cosas que realmente hacen que el usuario diga: \"¬°Guau!\". La encuesta parece decir que todav√≠a no hemos encontrado eso. Es por eso que ped√≠ tiempo en la pr√≥xima iteraci√≥n para dar seguimiento a esta investigaci√≥n. Quiero tener algunas discusiones abiertas con algunos de los participantes de la encuesta. Espero que eso nos ayude a encontrar uno o dos excitadores.‚Äù ‚ÄúEsto es genial, Delaney. Muy √∫til‚Äù, dijo Frank. \"¬øAlguien tiene m√°s preguntas para ella?\" Frank hizo una pausa antes de continuar. ‚ÄúSi no, hablemos de lo que necesitamos en un lanzamiento de Havannah‚Äù.","service":"user-service"}
{"level":"info","message":"Nadie ten√≠a preguntas adicionales. Inmediatamente se sumergieron en la planificaci√≥n del lanzamiento priorizando las funciones. ‚ÄúEstas son las historias que consider√© obligatorias y sobre las que ni siquiera me molest√© en preguntar en el cuestionario‚Äù, dijo Delaney mientras acomodaba algunas tarjetas de historias en la mesa de la sala de conferencias. Las tarjetas de historias y las estimaciones que incluy√≥ se muestran en la tabla 23.13.","service":"user-service"}
{"level":"info","message":"‚ÄúNinguna de estas historias deber√≠a ser sorprendente‚Äù, continu√≥ Delaney. ‚ÄúVemos estas caracter√≠sticas en cada juego que hacemos. Apoyarlos es realmente el costo de la entrada. Delaney tom√≥ otro juego de cartas. ‚ÄúEn esta parte de la mesa, voy a colocar las historias que nuestros clientes nos dijeron que son obligatorias‚Äù. En ese grupo, dispuso las tarjetas que se muestran en la Tabla 23.14.","service":"user-service"}
{"level":"info","message":"‚ÄúDelaney, ¬øpor qu√© incluyes el motor fuerte ah√≠?‚Äù pregunt√≥ Allan. \"Me gusta eso. Pero de acuerdo con lo que nos mostraste hace unos minutos, se consideraba una caracter√≠stica obligatoria y que los usuarios eran indiferentes.‚Äù ‚ÄúBuena observaci√≥n, Allan,‚Äù dijo Delaney. ‚ÄúHago la recomendaci√≥n de que consideremos esa caracter√≠stica obligatoria porque creo que muchos usuarios superar√°n lo que est√° definiendo como el motor de potencia media. Esos usuarios se aburrir√°n con el juego si no incluimos el potente motor\". \"Est√° bien\". Frank estaba disfrutando esto. En su rol como gerente de producto y el de Delaney como analista, el equipo a menudo hab√≠a dejado toda la definici√≥n del producto en sus manos. Le gust√≥ que participaran en estas discusiones y estuvieran atentos a lo que se discut√≠a. Eso solo podr√≠a ayudar al nuevo producto. ‚ÄúLa otra historia que he incluido como obligatoria y que vale la pena discutir es como jugador, me gustar√≠a poder usar el sistema para jugar contra otro humano en mi computadora. Lo he incluido como obligatorio porque ya dijimos que es un buen hito. La siguiente pila ‚Äîdijo Delaney mientras tomaba otro pu√±ado de cartas‚Äî tiene un valor lineal. Es decir, cuantos m√°s, mejor, pero ninguno es obligatorio. Delaney dispuso las historias de la Tabla 23.15 sobre la mesa.","service":"user-service"}
{"level":"info","message":"‚ÄúEl arte no es opcional‚Äù, dijo Rose. ‚ÄúNecesitamos una bonita pantalla de inicio y tableros y fondos atractivos.‚Äù ‚ÄúNo dije que estos son opcionales, Rose,‚Äù dijo Delaney. ‚ÄúTienes raz√≥n, hicimos esto. Hay una cierta l√≠nea de base por la que no podemos caer, y el juego no tiene que ser est√©ticamente agradable, que es como hice la pregunta en la encuesta. Estos son lineales, porque cuantos m√°s, mejor. Dos opciones de tablero son mejores que una, pero tres ser√≠an a√∫n mejores.‚Äù ‚ÄúOK. Eso tiene sentido‚Äù, dijo Frank. ‚ÄúTodav√≠a tienes algunas tarjetas de historias frente a ti. ¬øQu√© tipo de historias son esas?‚Äù ‚ÄúEstas pr√≥ximas cartas son emocionantes. Los compradores probables no esperan ninguno de estos, pero deber√≠amos incluir un par porque realmente aumentan el disfrute del juego. Y como dije antes, algunos emocionantes significan que tambi√©n podemos cobrar m√°s por √©l‚Äù. Delaney arregl√≥ las cartas se muestra en la Tabla 23.16 en la mesa de la sala de conferencias. ‚ÄúDespu√©s de los excitantes‚Äù, continu√≥ Delaney, ‚Äúlas dos historias restantes eran las que los posibles jugadores dijeron que les eran indiferentes. No creo que queramos agregar esto‚Äù. Coloc√≥ sobre la mesa las cartas resumidas en la Tabla 23.17. \"Es poco probable que vendamos m√°s juegos o juegos a un precio m√°s alto agregando caracter√≠sticas que a los jugadores les indiferentes\".","service":"user-service"}
{"level":"info","message":"‚ÄúGuau‚Äù, dijo Frank. ‚ÄúEsta es m√°s informaci√≥n de la que normalmente tenemos en este momento. Gran trabajo, Delaney. ¬øObtuviste todo esto de tus encuestas?‚Äù ‚ÄúS√≠. El cuestionario es intencionalmente liviano y solo pregunta a los usuarios c√≥mo se sentir√≠an si una caracter√≠stica estuviera presente y c√≥mo se sentir√≠an si no estuviera presente. Debido a que combin√© algunas de nuestras historias de usuarios individuales en temas, el cuestionario ten√≠a solo veinticuatro preguntas. Incluyendo un poco de ch√°chara, tom√≥ s√≥lo alrededor de quince minutos por tel√©fono. Nuestro sitio web rastre√≥ el tiempo que le tom√≥ a cada encuestado completar el formulario. El tiempo promedio fue de siete minutos. Una persona tom√≥ cuarenta, pero sospecho que se alej√≥ o recibi√≥ una llamada telef√≥nica.‚Äù ‚ÄúEntonces, Frank, ¬øcu√°les son nuestras prioridades?‚Äù pregunt√≥ Sasha. ‚ÄúBueno, necesitamos hacer todas las caracter√≠sticas que Delaney identific√≥ como obligatorias o que su encuesta encontr√≥ como obligatorias‚Äù. ‚ÄúEso es ochenta y ocho puntos de la historia, seg√∫n nuestras estimaciones‚Äù, dijo Sasha. dicho son lineales, estoy de acuerdo con Rose: necesitamos un buen arte‚Äù, dijo Frank. ‚ÄúTodas esas historias deber√≠an estar presentes. Y no puedo ver ir sin m√∫sica de fondo. Tal vez el usuario no pueda cambiar las canciones, pero ese es solo un punto, as√≠ que por ahora, voy a decir que lo queremos. Y necesitamos ayuda en l√≠nea. No todos los que compren este juego sabr√°n c√≥mo jugarlo‚Äù.","service":"user-service"}
{"level":"info","message":"‚ÄúAs√≠ que quieres todas las caracter√≠sticas lineales. Son otros treinta y dos puntos‚Äù, dijo Sasha. ‚ÄúLo s√©. Lo quiero todo, ¬øverdad? Como todos los gerentes de producto del mundo.‚Äù ‚ÄúNo me importa; Solo s√© que quieres que salga el producto en cuatro meses. Ahora tenemos 120 puntos de historia\". \"¬øEso llevar√° m√°s de cuatro meses?\" pregunt√≥ Frank, un poco preocupado. ‚ÄúTodav√≠a no tengo idea. Averig√ºemos qu√© es lo que quieres y luego podremos ver cu√°nto tiempo llevar√°‚Äù, dijo Sasha. ‚ÄúEst√° bien‚Äù, dijo Frank. ‚ÄúDe los excitadores, creo que necesitamos pistas, y me gustar√≠a el tutorial. Tal vez podr√≠amos dejarlo o la ayuda en l√≠nea, pero quiero planificar ambos. Me gusta la idea de decirle al usuario cuando ha hecho un mal movimiento justo despu√©s de que lo hace‚Äù. ‚ÄúRecuerden, esa es una historia de ocho puntos‚Äù, les record√≥ Allan a todos. ‚ÄúEstoy programando el motor de movimientos para encontrar buenos movimientos. Puedo mejorarlo para encontrar movimientos realmente malos, pero no es trivial.‚Äù ‚ÄúEso es lo que estoy viendo. Planeemos ir sin eso por ahora. Pero incluyamos la historia sobre advertir al jugador que est√° a punto de perder a menos que juegue en un hex√°gono particular para bloquear la computadora.‚Äù ‚ÄúEso son doce puntos de la lista de excitadores. ¬øQuieres algo de la lista de indiferentes? pregunt√≥ Sasha. ‚ÄúNo realmente,‚Äù dijo Frank. ‚Äú¬øCu√°l es nuestro total ahora?‚Äù ‚ÄúTienes ochenta y ocho puntos de historia de las listas obligatorias, treinta y dos de la lista lineal y doce de los excitadores. Eso es un total de 132‚Äù, dijo Sasha. ‚ÄúY har√°s todo eso en dos iteraciones, ¬øverdad?‚Äù Frank pregunt√≥ con una sonrisa. \"Si pudi√©ramos, lo har√≠amos\". \"En serio, ¬øc√≥mo sabemos cu√°nto tiempo tomar√°?\" \"Lo mejor ser√≠a esperar tres iteraciones y responderte entonces\", explic√≥ Carlos. ‚ÄúDespu√©s de cada iteraci√≥n, podemos sumar los puntos de historia para las historias que est√°n terminadas. A eso lo llamamos velocidad. La velocidad cambiar√° de una iteraci√≥n a otra, pero su promedio es relativamente estable a lo largo del tiempo‚Äù. ‚ÄúS√≠‚Äù, intervino Allan, ‚Äúnuestras estimaciones pueden haber estado equivocadas. O podemos tener suerte o mala suerte en una historia‚Äù. ‚ÄúDespu√©s de tres iteraciones, deber√≠amos tener una buena medida de qu√© tan r√°pido est√° progresando el equipo. Podemos dividir la cantidad total de trabajo restante por la velocidad, y eso nos dir√° cu√°nto tiempo esperar‚Äù, dijo Carlos. ‚Äú¬øY esa estimaci√≥n ser√° bastante buena?‚Äù pregunt√≥ Frank.","service":"user-service"}
{"level":"info","message":"\"Deber√≠a ser. Despu√©s de tres iteraciones, tendr√° una buena idea de cu√°ntos puntos de la historia puede hacer en una iteraci√≥n de dos semanas‚Äù, dijo Carlos. ‚ÄúDebemos tener en cuenta que voy a hablar con algunos compradores potenciales m√°s y ver si puedo encontrar m√°s excitantes‚Äù, dijo Delaney. ‚ÄúComo dijimos antes, nuestros excitadores parecen d√©biles. Es posible que agreguemos algunas caracter√≠sticas m√°s.‚Äù ‚Äú¬øHay alguna forma de obtener un horario esperado ahora?‚Äù ‚ÄúClaro, Frank,‚Äù dijo Carlos. ‚ÄúHas planeado hacer cuatro historias en esta primera iteraci√≥n. Podemos sumar los puntos asociados con cada uno y llamarlo nuestra velocidad planificada. No tenemos idea de si lo ser√°, pero es nuestra suposici√≥n inicial‚Äù. ‚ÄúYa lo hice‚Äù, dijo Prasad. ‚ÄúSon dieciocho. Obtenemos ocho puntos para Como jugador, puedo jugar contra un motor d√©bil que reconoce anillos. Obtenemos cinco puntos por Como jugador, puedo jugar contra un motor d√©bil que reconoce puentes. Luego obtenemos dos puntos por Como jugador, quiero que la computadora reconozca una forma ganadora y tres puntos por Como jugador, me gustar√≠a poder usar el sistema para jugar contra otro humano en mi computadora.‚Äù ‚Äú¬øCu√°ntas iteraciones tomar√° el proyecto si nuestra velocidad es dieciocho?‚Äù ‚ÄúSolo siete iteraciones. Tenemos 132 puntos. Siete por dieciocho es 126. Tenemos seis puntos sobre siete iteraciones‚Äù, dijo Prasad. ‚Äú¬øPodemos llamarlo simplemente siete iteraciones?‚Äù pregunt√≥ Frank.","service":"user-service"}
{"level":"info","message":"‚ÄúPodr√≠amos, pero no deber√≠amos‚Äù, respondi√≥ Carlos. ‚ÄúPreferir√≠a dar la estimaci√≥n como un rango. Si estamos viendo suficiente trabajo para entrar en una octava iteraci√≥n, probablemente deber√≠amos decir que el proyecto tomar√° de seis a diez iteraciones.‚Äù ‚ÄúRealmente no quiero que este proyecto tome veinte semanas. Pero est√°s diciendo que podr√≠a tomar solo doce, ¬øverdad? pregunt√≥ Frank. Pero podr√≠a tomar veinte. Carlos se mantuvo firme. ‚ÄúPuede ayudar a evitar que tarde veinte semanas eliminando las funciones de menor prioridad si la velocidad muestra que nos dirigimos hacia las diez iteraciones. Tenga en cuenta, tambi√©n, que Delaney est√° buscando activamente m√°s funciones. Si se le ocurre algo, tendremos que ampliar el cronograma o eliminar la misma cantidad de caracter√≠sticas actuales‚Äù. ‚ÄúEst√° bien, puedo explicarle de doce a veinte semanas a los otros ejecutivos‚Äù, dijo Frank. \"Vamos con eso como nuestro plan inicial\". velocidad real‚Äù, dijo Carlos. ‚ÄúEntendido. Pero todos quieren saber al menos una idea de c√≥mo es el cronograma para este proyecto‚Äù.","service":"user-service"}
{"level":"info","message":"‚ÄúAseg√∫rese de que sepan que podemos brindarles mejor informaci√≥n cada dos semanas. Especialmente despu√©s de estas tres primeras iteraciones, deber√≠amos saber mucho m√°s‚Äù, agreg√≥ Prasad. ‚ÄúEntonces, ¬ønecesitamos planificar en qu√© se trabajar√° en cada iteraci√≥n?‚Äù pregunt√≥ Frank. ‚ÄúEn realidad no‚Äù, respondi√≥ Carlos. ‚ÄúLo m√°s importante es saber en qu√© se va a trabajar a continuaci√≥n. Hicimos eso cuando planeamos la iteraci√≥n. Lo siguiente m√°s importante es conocer las caracter√≠sticas que se encuentran al final de la lista y que tal vez el alcalde no se incluya en el comunicado‚Äù. ‚ÄúEntiendo por qu√© necesita conocer las principales prioridades, pero ¬øpor qu√© las √∫ltimas?‚Äù. dijo Frank. ‚ÄúNo es muy importante para esta primera reuni√≥n, pero cuando nos acercamos al final del lanzamiento, a veces es importante. Por ejemplo, no querr√≠amos que marketing dise√±ara empaques que dijeran 'Ahora con m√∫sica de fondo' si esa es una caracter√≠stica que puede descartarse en el √∫ltimo minuto\". iteraci√≥n?\" \"No tiene sentido\", dijo Carlos. ‚ÄúEn dos semanas, sabremos mucho m√°s de lo que sabemos hoy. ¬øPor qu√© planificar lo que haremos en una iteraci√≥n hasta que tengamos que hacerlo? No tenemos que hacerlo. En un proyecto m√°s grande, particularmente con varios equipos que necesitan coordinar el trabajo, podemos esperar dos o tres iteraciones. Pero no necesitamos hacer eso en este proyecto\". \"Entonces, ¬øterminamos con la planificaci√≥n del lanzamiento?\" pregunt√≥ Frank. ‚ÄúS√≠. Apilar√© las tarjetas de historias que dijiste que realmente quer√≠as en el comunicado, y ese es nuestro plan‚Äù, dijo Carlos. ‚ÄúAntes de que nos volvamos a reunir, dentro de dos semanas, usted y Delaney deber√≠an hablar sobre las historias e identificar las que m√°s les gustar√≠a ver en la pr√≥xima iteraci√≥n. En la reuni√≥n, hablaremos sobre por qu√© quieres esas historias. Los otros pueden pedirle que reconsidere y se mueva en uno o dos que quieren hacer porque son arriesgados o porque aprender√°n mucho haci√©ndolos. Pero la decisi√≥n final de priorizaci√≥n depender√° de usted‚Äù. ‚ÄúNo lo tome a mal‚Äù, dijo Frank, ‚Äúpero realmente no me sent√≠ bien hoy‚Äù. ‚ÄúLo fue‚Äù, dijo Carlos, ‚Äúpero seleccionar las cosas correctas en las que trabajar a continuaci√≥n es realmente un esfuerzo de todo el equipo. Si los programadores estuvieran seleccionando un mont√≥n de tonter√≠as t√©cnicas o caracter√≠sticas que no podr√≠as ver, habr√≠a detenido eso y les habr√≠a hecho trabajar en otras historias. ¬øSupongo que est√°s contento con las historias que fueron seleccionadas?‚Äù ‚ÄúExtasiado. Ser√° genial ver todo eso en dos semanas‚Äù.","service":"user-service"}
{"level":"info","message":"‚ÄúOjal√° hubi√©ramos podido terminar todo. A√∫n as√≠, estoy impresionado con lo que tenemos‚Äù, dijo Sasha a los dem√°s mientras esperaba que comenzara la reuni√≥n. ‚ÄúEs desafortunado que tuvi√©ramos que abandonar la historia de forma ganadora. Pero realmente necesitaba tu ayuda con el c√≥digo del motor de movimiento, Sasha. Gracias‚Äù, agradeci√≥ Allan al otro programador. ‚ÄúNo hay problema, Allan. Estamos todos juntos en esto, y poder demostrar un motor que hace anillos y puentes es m√°s importante‚Äù, dijo Sasha. ‚ÄúEntonces, ¬øestamos listos para la demostraci√≥n?‚Äù pregunt√≥ Frank mientras entraba en la habitaci√≥n puntualmente a las nueve. Puso una caja de bagels en la mesa grande. \"Absolutamente\", dijo Sasha. ‚Äú¬øSabe si alguno de los otros ejecutivos u otros miembros del proyecto vendr√°n a ver la revisi√≥n de la iteraci√≥n?‚Äù ‚ÄúS√© que Phil y Laura dijeron que estar√≠an aqu√≠‚Äù, dijo Frank, refiri√©ndose al director ejecutivo y al director financiero. ‚ÄúY un par de ingenieros de otros equipos dijeron que tambi√©n estar√≠an aqu√≠. Tienen curiosidad acerca de nuestro nuevo proceso de desarrollo √°gil‚Äù, dijo Allan. En el transcurso de la siguiente media hora, el equipo mostr√≥ lo que estaban haciendo. completado. Hicieron una demostraci√≥n del motor del juego haciendo anillos y puentes. Mostraron c√≥mo dos humanos pod√≠an jugar uno contra el otro, intercambiando el teclado entre ellos para hacer movimientos. Incluso conectaron las dos piezas de funcionalidad para que un humano pudiera jugar contra la computadora. El humano generalmente ganaba, pero eso no era sorprendente contra el motor de movimiento f√°cil. Los gr√°ficos eran rudimentarios, solo las ilustraciones r√°pidas de Rose. Pero Phil, el director ejecutivo, estaba encantado de ver que, despu√©s de solo dos semanas, una peque√±a parte del juego se hab√≠a desarrollado y funcionaba. Estaba a√∫n m√°s complacido cuando Prasad le entreg√≥ el teclado y pudo jugar el juego √©l mismo, apenas ganando el nuevo juego. ‚ÄúEsto es fant√°stico, todos‚Äù, anunci√≥ Phil, levant√°ndose de su asiento. ‚ÄúCada dos semanas, ¬ømuestras m√°s?‚Äù ‚ÄúAbsolutamente. Cada dos semanas, aqu√≠ mismo a las nueve‚Äù, dijo Sasha. ‚ÄúVolver√© la pr√≥xima vez. Voy a poner estas reuniones en mi agenda. Estos treinta minutos de ver c√≥mo funciona el software real son m√°s √∫tiles que cualquier informe de estado que haya le√≠do. ¬øY c√≥mo es tu horario? ¬øPuedo preguntar eso ahora?‚Äù ‚ÄúPuedes,‚Äù dijo Frank. ‚ÄúEn este momento, nos estamos apegando a nuestra estimaci√≥n de doce a veinte semanas. Vamos a planificar la pr√≥xima iteraci√≥n despu√©s de esta reuni√≥n. Sabremos m√°s en dos a cuatro semanas. En ese momento, deber√≠amos poder comprometernos con un cronograma que podamos informar a los editores‚Äù.","service":"user-service"}
{"level":"info","message":"\"Genial\", respondi√≥ Phil. √âl y Laura salieron de la sala de conferencias. Tambi√©n lo hicieron la media docena de personas que hab√≠an venido a ver el proyecto. Planificaci√≥n de la segunda iteraci√≥n ‚ÄúSi mal no recuerdo‚Äù, dijo Frank, ‚Äúplaneamos una velocidad de dieciocho puntos de la historia‚Äù. ‚ÄúCorrecto‚Äù, dijo Delaney. ‚ÄúPero no pudimos terminar la historia sobre reconocer cu√°ndo se hab√≠a ganado el juego. As√≠ que nuestra velocidad es menos de dieciocho. ¬øNos damos un punto por hacer la mitad de esa historia? pregunt√≥ Frank. ‚ÄúNo‚Äù, dijo Carlos. ‚ÄúEn general, queremos aplicar un enfoque de todo o nada a los puntos de la historia. Es demasiado dif√≠cil darnos cr√©dito parcial, porque realmente no sabemos cu√°nto trabajo queda. En lugar de adivinar, no recibimos ning√∫n cr√©dito hasta que lo conseguimos todo‚Äù. ‚ÄúAs√≠ que nuestra velocidad fue de diecis√©is, porque originalmente estimamos la historia inconclusa en dos puntos‚Äù, dijo Rose. ‚ÄúTenemos que planear que el proyecto lleve m√°s tiempo. ¬øBien?\" pregunt√≥ Frank. ‚ÄúTodav√≠a estamos dentro de las doce o veinte semanas que les dijiste a los ejecutivos‚Äù, dijo Sasha. ‚ÄúComenzamos con 132 puntos de historia. Terminamos 16, entonces nos quedan 116. Dividiendo 116 por 16, nuestra velocidad, nos da 7,25. Para estar seguros, llamemos a eso ocho m√°s iteraciones de dos semanas. Incluyendo las dos semanas que acabamos de pasar, son un total de dieciocho semanas.‚Äù ‚ÄúEso es dos semanas m√°s que cuatro meses, Frank. ¬øEso importa?‚Äù pregunt√≥ Prasad. ‚ÄúNo realmente. El lanzamiento no est√° vinculado a ninguna fecha espec√≠fica. Solo queremos que salga lo antes posible‚Äù, dijo Frank. ‚ÄúTodav√≠a no he tenido la oportunidad de decirte esto: todav√≠a no hemos finalizado el contrato de Deep Black & White con la editorial japonesa. Todav√≠a quieren publicar el juego. Y estamos as√≠ de cerca de firmar el contrato final‚Äù. Mantuvo los dedos a mil√≠metros de distancia. ‚ÄúPero no quieren lanzarlo hasta que tengan tiempo de preparar una gran campa√±a de marketing, con anuncios en las principales revistas. Eso es probablemente cuatro meses. Y por la forma en que funciona, no veremos regal√≠as hasta el trimestre posterior al lanzamiento del juego. Podr√≠amos estar viendo ocho meses antes de que Deep Black & White traiga dinero real en la puerta. Idealmente, Havannah podr√≠a ser una victoria r√°pida para nosotros. No en la escala de DeepBlack & White. Pero debido a que no necesitar√° el aumento de marketing, los ingresos ser√°n m√°s inmediatos\".","service":"user-service"}
{"level":"info","message":"‚ÄúY Frank, lo siento, pero debido a que tuve que hacer m√°s pruebas de las que esperaba, no investigu√© mucho el producto durante esta iteraci√≥n‚Äù, dijo Delaney. ‚ÄúEst√° bien. Est√° bien, pero hagamos de eso una prioridad esta vez, incluso si eso significa probar menos‚Äù, dijo Frank. ‚ÄúEntonces, Frank, ¬øqu√© es lo que m√°s te gustar√≠a ver terminado en esta pr√≥xima iteraci√≥n?‚Äù forma en que hab√≠an planeado su primera. Cuando terminaron, se comprometieron a completar las historias de usuarios que se muestran en la Tabla 23.18.","service":"user-service"}
{"level":"info","message":"\"Entonces, si nuestra velocidad era diecis√©is en la √∫ltima iteraci√≥n, ¬øpor qu√© estamos planeando dieciocho esta vez?\" pregunt√≥ Frank. ‚ÄúUsamos la velocidad como una gu√≠a para medir el progreso contra el plan de lanzamiento‚Äù, dijo Carlos. ‚ÄúNo planificamos autom√°ticamente cada nueva iteraci√≥n para que tenga exactamente la velocidad de la √∫ltima iteraci√≥n o la velocidad promedio de las √∫ltimas iteraciones. Planificamos cada iteraci√≥n en funci√≥n de la cantidad de trabajo a la que podemos comprometernos. Sumamos los puntos solo despu√©s de haber descubierto a qu√© podemos comprometernos. Cuando lo hagamos, la velocidad deber√≠a estar cerca de nuestro promedio hist√≥rico, pero variar√°.‚Äù ‚Äú¬øPor qu√©?‚Äù ‚ÄúDos razones principales,‚Äù comenz√≥ Sasha. ‚ÄúPrimero, esta vez estamos haciendo un uso m√°s efectivo de Rose. Ella es principalmente una artista, no una probadora. Fue genial que ayudara con tantas pruebas la √∫ltima vez, pero esta vez, dibujar√° el arte de las tablas y piezas de madera y metal. Har√© la codificaci√≥n para permitir que un usuario elija entre ellos, y Prasad probablemente ser√° el que pruebe esa historia. Pero aparte de eso, la mayor parte de esa historia de ocho puntos proviene de Rose. En segundo lugar, tenemos un poco de ventaja en la historia sobre el reconocimiento de una forma ganadora. Lo comenzamos en la √∫ltima iteraci√≥n, pero no llegamos muy lejos. Me siento bastante bien con las historias que seleccionamos. A pesar de que son dieciocho puntos de nuevo, sumaron un total de quince horas menos que la √∫ltima iteraci√≥n.‚Äù ‚ÄúEstoy convencido,‚Äù dijo Frank. \"Vamos a hacerlo.\"","service":"user-service"}
